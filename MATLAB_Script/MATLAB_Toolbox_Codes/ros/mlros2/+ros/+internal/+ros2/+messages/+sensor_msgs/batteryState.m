function [data, info] = batteryState
%BatteryState gives an empty data for sensor_msgs/BatteryState

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'sensor_msgs/BatteryState';
[data.POWER_SUPPLY_STATUS_UNKNOWN, info.POWER_SUPPLY_STATUS_UNKNOWN] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.POWER_SUPPLY_STATUS_CHARGING, info.POWER_SUPPLY_STATUS_CHARGING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.POWER_SUPPLY_STATUS_DISCHARGING, info.POWER_SUPPLY_STATUS_DISCHARGING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.POWER_SUPPLY_STATUS_NOT_CHARGING, info.POWER_SUPPLY_STATUS_NOT_CHARGING] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.POWER_SUPPLY_STATUS_FULL, info.POWER_SUPPLY_STATUS_FULL] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.POWER_SUPPLY_HEALTH_UNKNOWN, info.POWER_SUPPLY_HEALTH_UNKNOWN] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.POWER_SUPPLY_HEALTH_GOOD, info.POWER_SUPPLY_HEALTH_GOOD] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.POWER_SUPPLY_HEALTH_OVERHEAT, info.POWER_SUPPLY_HEALTH_OVERHEAT] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.POWER_SUPPLY_HEALTH_DEAD, info.POWER_SUPPLY_HEALTH_DEAD] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.POWER_SUPPLY_HEALTH_OVERVOLTAGE, info.POWER_SUPPLY_HEALTH_OVERVOLTAGE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.POWER_SUPPLY_HEALTH_UNSPEC_FAILURE, info.POWER_SUPPLY_HEALTH_UNSPEC_FAILURE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 5, [NaN]);
[data.POWER_SUPPLY_HEALTH_COLD, info.POWER_SUPPLY_HEALTH_COLD] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 6, [NaN]);
[data.POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE, info.POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 7, [NaN]);
[data.POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE, info.POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 8, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_UNKNOWN, info.POWER_SUPPLY_TECHNOLOGY_UNKNOWN] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 0, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_NIMH, info.POWER_SUPPLY_TECHNOLOGY_NIMH] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 1, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_LION, info.POWER_SUPPLY_TECHNOLOGY_LION] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 2, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_LIPO, info.POWER_SUPPLY_TECHNOLOGY_LIPO] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 3, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_LIFE, info.POWER_SUPPLY_TECHNOLOGY_LIFE] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 4, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_NICD, info.POWER_SUPPLY_TECHNOLOGY_NICD] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 5, [NaN]);
[data.POWER_SUPPLY_TECHNOLOGY_LIMN, info.POWER_SUPPLY_TECHNOLOGY_LIMN] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0, 6, [NaN]);
[data.header, info.header] = ros.internal.ros2.messages.std_msgs.header;
info.header.MLdataType = 'struct';
[data.voltage, info.voltage] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.temperature, info.temperature] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.current, info.current] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.charge, info.charge] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.capacity, info.capacity] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.design_capacity, info.design_capacity] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.percentage, info.percentage] = ros.internal.ros2.messages.ros2.default_type('single',1,0);
[data.power_supply_status, info.power_supply_status] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.power_supply_health, info.power_supply_health] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.power_supply_technology, info.power_supply_technology] = ros.internal.ros2.messages.ros2.default_type('uint8',1,0);
[data.present, info.present] = ros.internal.ros2.messages.ros2.default_type('logical',1,0);
[data.cell_voltage, info.cell_voltage] = ros.internal.ros2.messages.ros2.default_type('single',NaN,0);
[data.cell_temperature, info.cell_temperature] = ros.internal.ros2.messages.ros2.default_type('single',NaN,0);
[data.location, info.location] = ros.internal.ros2.messages.ros2.char('string',1,NaN,0);
[data.serial_number, info.serial_number] = ros.internal.ros2.messages.ros2.char('string',1,NaN,0);
info.MessageType = 'sensor_msgs/BatteryState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,41);
info.MatPath{1} = 'POWER_SUPPLY_STATUS_UNKNOWN';
info.MatPath{2} = 'POWER_SUPPLY_STATUS_CHARGING';
info.MatPath{3} = 'POWER_SUPPLY_STATUS_DISCHARGING';
info.MatPath{4} = 'POWER_SUPPLY_STATUS_NOT_CHARGING';
info.MatPath{5} = 'POWER_SUPPLY_STATUS_FULL';
info.MatPath{6} = 'POWER_SUPPLY_HEALTH_UNKNOWN';
info.MatPath{7} = 'POWER_SUPPLY_HEALTH_GOOD';
info.MatPath{8} = 'POWER_SUPPLY_HEALTH_OVERHEAT';
info.MatPath{9} = 'POWER_SUPPLY_HEALTH_DEAD';
info.MatPath{10} = 'POWER_SUPPLY_HEALTH_OVERVOLTAGE';
info.MatPath{11} = 'POWER_SUPPLY_HEALTH_UNSPEC_FAILURE';
info.MatPath{12} = 'POWER_SUPPLY_HEALTH_COLD';
info.MatPath{13} = 'POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE';
info.MatPath{14} = 'POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE';
info.MatPath{15} = 'POWER_SUPPLY_TECHNOLOGY_UNKNOWN';
info.MatPath{16} = 'POWER_SUPPLY_TECHNOLOGY_NIMH';
info.MatPath{17} = 'POWER_SUPPLY_TECHNOLOGY_LION';
info.MatPath{18} = 'POWER_SUPPLY_TECHNOLOGY_LIPO';
info.MatPath{19} = 'POWER_SUPPLY_TECHNOLOGY_LIFE';
info.MatPath{20} = 'POWER_SUPPLY_TECHNOLOGY_NICD';
info.MatPath{21} = 'POWER_SUPPLY_TECHNOLOGY_LIMN';
info.MatPath{22} = 'header';
info.MatPath{23} = 'header.stamp';
info.MatPath{24} = 'header.stamp.sec';
info.MatPath{25} = 'header.stamp.nanosec';
info.MatPath{26} = 'header.frame_id';
info.MatPath{27} = 'voltage';
info.MatPath{28} = 'temperature';
info.MatPath{29} = 'current';
info.MatPath{30} = 'charge';
info.MatPath{31} = 'capacity';
info.MatPath{32} = 'design_capacity';
info.MatPath{33} = 'percentage';
info.MatPath{34} = 'power_supply_status';
info.MatPath{35} = 'power_supply_health';
info.MatPath{36} = 'power_supply_technology';
info.MatPath{37} = 'present';
info.MatPath{38} = 'cell_voltage';
info.MatPath{39} = 'cell_temperature';
info.MatPath{40} = 'location';
info.MatPath{41} = 'serial_number';
