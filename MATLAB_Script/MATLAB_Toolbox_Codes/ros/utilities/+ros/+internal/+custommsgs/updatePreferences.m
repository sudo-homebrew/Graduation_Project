function reg = updatePreferences(msgFullName,srvFullNameRequest,srvFullNameResponse,srvFullName,actionFullName,rosver,genDir)
%This function is for internal use only. It may be removed in the future.

%UPDATEPREFERENCES returns the information about custom messages.

%   Copyright 2020-2021 The MathWorks, Inc.

reg = ros.internal.CustomMessageRegistry.getInstance(rosver);
for i = 1:numel(msgFullName)
    [pkgDir,msgName] = fileparts(msgFullName{i});
    msgInstallDir = fullfile(genDir,'install');
    msgSrcPath = fullfile(msgInstallDir,'share',pkgDir,'msg',[msgName,'.msg']);
    msgDllPathMap = containers.Map({'win64','maci64','glnxa64'}, ...
        { ...
        fullfile(msgInstallDir,'bin',[pkgDir, '_matlab.dll']) ...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.dylib']),...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.so']),...
        });
    msgDllPath = msgDllPathMap(computer('arch'));
    reg.updateMessageEntry(msgFullName{i}, msgInstallDir, msgSrcPath, msgDllPath);
end
for i = 1:numel(srvFullNameResponse)
    [pkgDir,srvName] = fileparts(srvFullNameResponse{i});
    srvName = srvName(1:end-length('Response'));
    msgInstallDir = fullfile(genDir,'install');
    msgSrcPath = fullfile(msgInstallDir,'share',pkgDir,'srv',[srvName,'.srv']);
    msgDllPathMap = containers.Map({'win64','maci64','glnxa64'}, ...
        { ...
        fullfile(msgInstallDir,'bin',[pkgDir, '_matlab.dll']) ...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.dylib']),...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.so']),...
        });
    msgDllPath = msgDllPathMap(computer('arch'));
    reg.updateMessageEntry(srvFullNameResponse{i}, msgInstallDir, msgSrcPath, msgDllPath);
end
for i = 1:numel(srvFullNameRequest)
    [pkgDir,srvName] = fileparts(srvFullNameRequest{i});
    srvName = srvName(1:end-length('Request'));
    msgInstallDir = fullfile(genDir,'install');
    msgSrcPath = fullfile(msgInstallDir,'share',pkgDir,'srv',[srvName,'.srv']);
    msgDllPathMap = containers.Map({'win64','maci64','glnxa64'}, ...
        { ...
        fullfile(msgInstallDir,'bin',[pkgDir, '_matlab.dll']) ...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.dylib']),...
        fullfile(msgInstallDir,'lib',['lib',pkgDir,'_matlab.so']),...
        });
    msgDllPath = msgDllPathMap(computer('arch'));
    reg.updateMessageEntry(srvFullNameRequest{i}, msgInstallDir, msgSrcPath, msgDllPath);
end
for i = 1:numel(srvFullName)
    [pkgDir,srvName] = fileparts(srvFullName{i});
    srvInstallDir = fullfile(genDir,'install');
    srvSrcPath = fullfile(msgInstallDir,'share',pkgDir,'srv',[srvName,'.srv']);
    srvDllPathMap = containers.Map({'win64','maci64','glnxa64'}, ...
        { ...
        fullfile(srvInstallDir,'bin',[pkgDir, '_matlab.dll']) ...
        fullfile(srvInstallDir,'lib',['lib',pkgDir,'_matlab.dylib']),...
        fullfile(srvInstallDir,'lib',['lib',pkgDir,'_matlab.so']),...
        });
    srvDllPath = srvDllPathMap(computer('arch'));
    reg.updateServiceEntry(srvFullName{i}, srvInstallDir, srvSrcPath, srvDllPath);
end
for i = 1:numel(actionFullName)
    [pkgDir,actionName] = fileparts(actionFullName{i});
    actionInstallDir = fullfile(genDir,'install');
    actionSrcPath = fullfile(actionInstallDir,'share',pkgDir,'action',[actionName,'.action']);
    actionDllPathMap = containers.Map({'win64','maci64','glnxa64'}, ...
        { ...
        fullfile(actionInstallDir,'bin',[pkgDir, '_matlab.dll']) ...
        fullfile(actionInstallDir,'lib',['lib',pkgDir,'_matlab.dylib']),...
        fullfile(actionInstallDir,'lib',['lib',pkgDir,'_matlab.so']),...
        });
    actionDllPath = actionDllPathMap(computer('arch'));
    reg.updateActionEntry(actionFullName{i}, actionInstallDir, actionSrcPath, actionDllPath);
end
end

% LocalWords:  maci dylib
