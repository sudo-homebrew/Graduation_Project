classdef Constants
%This class is for internal use only. It may be removed in the future.

%cgen.Constants - Constants used for generating C++ ROS code

%   Copyright 2014-2020 The MathWorks, Inc.

%#codegen

    properties(Constant)

        InitCode = struct(...
            'HeaderFile', 'slros_initialize.h', ...
            'SourceFile', 'slros_initialize.cpp' ...
            )

        ConversionCode = struct(...
            'HeaderFile', 'slros_busmsg_conversion.h', ...
            'SourceFile', 'slros_busmsg_conversion.cpp' ...
            )

        PredefinedCode = struct(...
            'HeaderFile', 'slros_generic.h', ...
            'PubSubHeaderFile', 'slros_generic_pubsub.h', ...
            'ParamHeaderFile', 'slros_generic_param.h', ...
            'ServiceHeaderFile', 'slros_generic_service.h', ...
            'ImageHeaderFile', 'slros_read_image.h', ...
            'TimeHeaderFile', 'slros_time.h', ...
            'ParamSourceFile', 'slros_generic_param.cpp', ...
            'ConversionUtilsHeaderFile', 'slros_msgconvert_utils.h', ...
            'OverrunDetectionSourceFile', 'slros_detect_overrun.cpp', ...
            'Location',   fullfile(toolboxdir('ros'), 'codertarget', 'src') ...
            )

        % Name of function that initializes ROS and creates the ROS node
        NodeInitFcn = 'slros_node_init'

        % Name of C++ variable that will hold the ROS Node pointer
        NodePtrVar = 'SLROSNodePtr'

        % Name of C++ variable that will hold the ROS Node name
        NodeNameVar = 'SLROSNodeName'

    end
    
    methods (Static)
        function templateStruct = getNodeInterface(~)
            templatesSrcDir = fullfile(toolboxdir('ros'),'codertarget', 'templates');
            templateStruct = struct(...
                'HeaderFile', 'rosnodeinterface.h', ...
                'SourceFile', 'rosnodeinterface.cpp', ...
                'MainFile', 'main.cpp', ...
                'HeaderTemplate', fullfile(templatesSrcDir,'interface_nonreusablefcn.h.tmpl'), ...
                'SourceFileTemplate', fullfile(templatesSrcDir,'interface_nonreusablefcn.cpp.tmpl'), ...
                'MainTemplate', fullfile(templatesSrcDir,'main.cpp.tmpl')...
                );
        end
    end

end
