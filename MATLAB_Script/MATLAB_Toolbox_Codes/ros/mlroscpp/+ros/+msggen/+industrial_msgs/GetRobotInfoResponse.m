
classdef GetRobotInfoResponse < ros.Message
    %GetRobotInfoResponse MATLAB implementation of industrial_msgs/GetRobotInfoResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'industrial_msgs/GetRobotInfoResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '5db3230b3e61c85a320b999ffd7f3b3f' % The MD5 Checksum of the message definition
        PropertyList = { 'Controller' 'Robots' 'Code' } % List of non-constant message properties
        ROSPropertyList = { 'controller' 'robots' 'code' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.industrial_msgs.DeviceInfo' ...
            'ros.msggen.industrial_msgs.DeviceInfo' ...
            'ros.msggen.industrial_msgs.ServiceReturnCode' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Controller
        Robots
        Code
    end
    methods
        function set.Controller(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.industrial_msgs.DeviceInfo'};
            validateattributes(val, validClasses, validAttributes, 'GetRobotInfoResponse', 'Controller')
            obj.Controller = val;
        end
        function set.Robots(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.industrial_msgs.DeviceInfo.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.industrial_msgs.DeviceInfo'};
            validateattributes(val, validClasses, validAttributes, 'GetRobotInfoResponse', 'Robots')
            obj.Robots = val;
        end
        function set.Code(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.industrial_msgs.ServiceReturnCode'};
            validateattributes(val, validClasses, validAttributes, 'GetRobotInfoResponse', 'Code')
            obj.Code = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.industrial_msgs.GetRobotInfoResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.industrial_msgs.GetRobotInfoResponse(strObj);
        end
    end
end
