
classdef DeviceInfo < ros.Message
    %DeviceInfo MATLAB implementation of industrial_msgs/DeviceInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'industrial_msgs/DeviceInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '373ed7fa0fac92d443be9cd5198e80f0' % The MD5 Checksum of the message definition
        PropertyList = { 'Model' 'SerialNumber' 'HwVersion' 'SwVersion' 'Address' } % List of non-constant message properties
        ROSPropertyList = { 'model' 'serial_number' 'hw_version' 'sw_version' 'address' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Model
        SerialNumber
        HwVersion
        SwVersion
        Address
    end
    methods
        function set.Model(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DeviceInfo', 'Model');
            obj.Model = char(val);
        end
        function set.SerialNumber(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DeviceInfo', 'SerialNumber');
            obj.SerialNumber = char(val);
        end
        function set.HwVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DeviceInfo', 'HwVersion');
            obj.HwVersion = char(val);
        end
        function set.SwVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DeviceInfo', 'SwVersion');
            obj.SwVersion = char(val);
        end
        function set.Address(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DeviceInfo', 'Address');
            obj.Address = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.industrial_msgs.DeviceInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.industrial_msgs.DeviceInfo(strObj);
        end
    end
end
