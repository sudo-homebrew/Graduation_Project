
classdef SetWaveformRequest < ros.Message
    %SetWaveformRequest MATLAB implementation of ethercat_trigger_controllers/SetWaveformRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'ethercat_trigger_controllers/SetWaveformRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '988450e1ddd386f3967c381c19b2330c' % The MD5 Checksum of the message definition
        PropertyList = { 'RepRate' 'Phase' 'DutyCycle' 'Running' 'ActiveLow' 'Pulsed' } % List of non-constant message properties
        ROSPropertyList = { 'rep_rate' 'phase' 'duty_cycle' 'running' 'active_low' 'pulsed' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        RepRate
        Phase
        DutyCycle
        Running
        ActiveLow
        Pulsed
    end
    methods
        function set.RepRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'RepRate');
            obj.RepRate = double(val);
        end
        function set.Phase(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'Phase');
            obj.Phase = double(val);
        end
        function set.DutyCycle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'DutyCycle');
            obj.DutyCycle = double(val);
        end
        function set.Running(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'Running');
            obj.Running = int32(val);
        end
        function set.ActiveLow(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'ActiveLow');
            obj.ActiveLow = int32(val);
        end
        function set.Pulsed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetWaveformRequest', 'Pulsed');
            obj.Pulsed = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.ethercat_trigger_controllers.SetWaveformRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.ethercat_trigger_controllers.SetWaveformRequest(strObj);
        end
    end
end
