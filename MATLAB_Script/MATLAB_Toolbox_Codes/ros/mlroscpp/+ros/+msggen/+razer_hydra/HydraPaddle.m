
classdef HydraPaddle < ros.Message
    %HydraPaddle MATLAB implementation of razer_hydra/HydraPaddle
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'razer_hydra/HydraPaddle' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9aa188f8a684b5f86f071eb093833ed5' % The MD5 Checksum of the message definition
        PropertyList = { 'Transform' 'Buttons' 'Joy' 'Trigger' } % List of non-constant message properties
        ROSPropertyList = { 'transform' 'buttons' 'joy' 'trigger' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Transform' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Transform
        Buttons
        Joy
        Trigger
    end
    methods
        function set.Transform(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Transform'};
            validateattributes(val, validClasses, validAttributes, 'HydraPaddle', 'Transform')
            obj.Transform = val;
        end
        function set.Buttons(obj, val)
            validClasses = {'logical', 'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 7};
            validateattributes(val, validClasses, validAttributes, 'HydraPaddle', 'Buttons');
            obj.Buttons = logical(val);
        end
        function set.Joy(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 2};
            validateattributes(val, validClasses, validAttributes, 'HydraPaddle', 'Joy');
            obj.Joy = single(val);
        end
        function set.Trigger(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HydraPaddle', 'Trigger');
            obj.Trigger = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.razer_hydra.HydraPaddle.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.razer_hydra.HydraPaddle(strObj);
        end
    end
end
