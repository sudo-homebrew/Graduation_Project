
classdef ActuatorControl < ros.Message
    %ActuatorControl MATLAB implementation of mavros_msgs/ActuatorControl
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/ActuatorControl' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9eea0a80c88944fe2fb67f3b3768854b' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'GroupMix' 'Controls' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'group_mix' 'controls' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        PX4MIXFLIGHTCONTROL = uint8(0)
        PX4MIXFLIGHTCONTROLVTOLALT = uint8(1)
        PX4MIXPAYLOAD = uint8(2)
        PX4MIXMANUALPASSTHROUGH = uint8(3)
    end
    properties
        Header
        GroupMix
        Controls
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'ActuatorControl', 'Header')
            obj.Header = val;
        end
        function set.GroupMix(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ActuatorControl', 'GroupMix');
            obj.GroupMix = uint8(val);
        end
        function set.Controls(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 8};
            validateattributes(val, validClasses, validAttributes, 'ActuatorControl', 'Controls');
            obj.Controls = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.ActuatorControl.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.ActuatorControl(strObj);
        end
    end
end
