
classdef GlobalPositionTarget < ros.Message
    %GlobalPositionTarget MATLAB implementation of mavros_msgs/GlobalPositionTarget
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/GlobalPositionTarget' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '076ded0190b9e045f9c55264659ef102' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Velocity' 'AccelerationOrForce' 'CoordinateFrame' 'TypeMask' 'Latitude' 'Longitude' 'Altitude' 'Yaw' 'YawRate' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'velocity' 'acceleration_or_force' 'coordinate_frame' 'type_mask' 'latitude' 'longitude' 'altitude' 'yaw' 'yaw_rate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        FRAMEGLOBALINT = uint8(5)
        FRAMEGLOBALRELALT = uint8(6)
        FRAMEGLOBALTERRAINALT = uint8(11)
        IGNORELATITUDE = uint16(1)
        IGNORELONGITUDE = uint16(2)
        IGNOREALTITUDE = uint16(4)
        IGNOREVX = uint16(8)
        IGNOREVY = uint16(16)
        IGNOREVZ = uint16(32)
        IGNOREAFX = uint16(64)
        IGNOREAFY = uint16(128)
        IGNOREAFZ = uint16(256)
        FORCE = uint16(512)
        IGNOREYAW = uint16(1024)
        IGNOREYAWRATE = uint16(2048)
    end
    properties
        Header
        Velocity
        AccelerationOrForce
        CoordinateFrame
        TypeMask
        Latitude
        Longitude
        Altitude
        Yaw
        YawRate
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Header')
            obj.Header = val;
        end
        function set.Velocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Velocity')
            obj.Velocity = val;
        end
        function set.AccelerationOrForce(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'AccelerationOrForce')
            obj.AccelerationOrForce = val;
        end
        function set.CoordinateFrame(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'CoordinateFrame');
            obj.CoordinateFrame = uint8(val);
        end
        function set.TypeMask(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'TypeMask');
            obj.TypeMask = uint16(val);
        end
        function set.Latitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Latitude');
            obj.Latitude = double(val);
        end
        function set.Longitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Longitude');
            obj.Longitude = double(val);
        end
        function set.Altitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Altitude');
            obj.Altitude = single(val);
        end
        function set.Yaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'Yaw');
            obj.Yaw = single(val);
        end
        function set.YawRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GlobalPositionTarget', 'YawRate');
            obj.YawRate = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.GlobalPositionTarget.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.GlobalPositionTarget(strObj);
        end
    end
end
