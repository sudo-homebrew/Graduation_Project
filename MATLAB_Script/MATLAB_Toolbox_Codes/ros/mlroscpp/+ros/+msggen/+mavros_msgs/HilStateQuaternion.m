
classdef HilStateQuaternion < ros.Message
    %HilStateQuaternion MATLAB implementation of mavros_msgs/HilStateQuaternion
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/HilStateQuaternion' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'c858c0f05d4ab30256be7c53edee8e3c' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Orientation' 'AngularVelocity' 'LinearAcceleration' 'LinearVelocity' 'Geo' 'IndAirspeed' 'TrueAirspeed' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'orientation' 'angular_velocity' 'linear_acceleration' 'linear_velocity' 'geo' 'ind_airspeed' 'true_airspeed' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msg.geometry_msgs.Quaternion' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geographic_msgs.GeoPoint' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Orientation
        AngularVelocity
        LinearAcceleration
        LinearVelocity
        Geo
        IndAirspeed
        TrueAirspeed
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'Header')
            obj.Header = val;
        end
        function set.Orientation(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.geometry_msgs.Quaternion'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'Orientation')
            obj.Orientation = val;
        end
        function set.AngularVelocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'AngularVelocity')
            obj.AngularVelocity = val;
        end
        function set.LinearAcceleration(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'LinearAcceleration')
            obj.LinearAcceleration = val;
        end
        function set.LinearVelocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'LinearVelocity')
            obj.LinearVelocity = val;
        end
        function set.Geo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geographic_msgs.GeoPoint'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'Geo')
            obj.Geo = val;
        end
        function set.IndAirspeed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'IndAirspeed');
            obj.IndAirspeed = single(val);
        end
        function set.TrueAirspeed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HilStateQuaternion', 'TrueAirspeed');
            obj.TrueAirspeed = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.HilStateQuaternion.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.HilStateQuaternion(strObj);
        end
    end
end
