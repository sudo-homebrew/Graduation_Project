
classdef ESCInfo < ros.Message
    %ESCInfo MATLAB implementation of mavros_msgs/ESCInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/ESCInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0dadbe17da7077cfe645928710920e5e' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'EscInfo' 'Counter' 'Count' 'ConnectionType' 'Info' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'esc_info' 'counter' 'count' 'connection_type' 'info' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.mavros_msgs.ESCInfoItem' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        EscInfo
        Counter
        Count
        ConnectionType
        Info
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'Header')
            obj.Header = val;
        end
        function set.EscInfo(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.mavros_msgs.ESCInfoItem.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.mavros_msgs.ESCInfoItem'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'EscInfo')
            obj.EscInfo = val;
        end
        function set.Counter(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'Counter');
            obj.Counter = uint16(val);
        end
        function set.Count(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'Count');
            obj.Count = uint8(val);
        end
        function set.ConnectionType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'ConnectionType');
            obj.ConnectionType = uint8(val);
        end
        function set.Info(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ESCInfo', 'Info');
            obj.Info = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.ESCInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.ESCInfo(strObj);
        end
    end
end
