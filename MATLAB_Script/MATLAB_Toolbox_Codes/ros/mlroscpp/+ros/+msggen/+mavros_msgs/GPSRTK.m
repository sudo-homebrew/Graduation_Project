
classdef GPSRTK < ros.Message
    %GPSRTK MATLAB implementation of mavros_msgs/GPSRTK
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/GPSRTK' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ab2651768aa6464b60b7bc8ae031e017' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'RtkReceiverId' 'Wn' 'Tow' 'RtkHealth' 'RtkRate' 'Nsats' 'BaselineA' 'BaselineB' 'BaselineC' 'Accuracy' 'IarNumHypotheses' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'rtk_receiver_id' 'wn' 'tow' 'rtk_health' 'rtk_rate' 'nsats' 'baseline_a' 'baseline_b' 'baseline_c' 'accuracy' 'iar_num_hypotheses' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        RtkReceiverId
        Wn
        Tow
        RtkHealth
        RtkRate
        Nsats
        BaselineA
        BaselineB
        BaselineC
        Accuracy
        IarNumHypotheses
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'Header')
            obj.Header = val;
        end
        function set.RtkReceiverId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'RtkReceiverId');
            obj.RtkReceiverId = uint8(val);
        end
        function set.Wn(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'Wn');
            obj.Wn = int16(val);
        end
        function set.Tow(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'Tow');
            obj.Tow = uint32(val);
        end
        function set.RtkHealth(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'RtkHealth');
            obj.RtkHealth = uint8(val);
        end
        function set.RtkRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'RtkRate');
            obj.RtkRate = uint8(val);
        end
        function set.Nsats(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'Nsats');
            obj.Nsats = uint8(val);
        end
        function set.BaselineA(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'BaselineA');
            obj.BaselineA = int32(val);
        end
        function set.BaselineB(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'BaselineB');
            obj.BaselineB = int32(val);
        end
        function set.BaselineC(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'BaselineC');
            obj.BaselineC = int32(val);
        end
        function set.Accuracy(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'Accuracy');
            obj.Accuracy = uint32(val);
        end
        function set.IarNumHypotheses(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPSRTK', 'IarNumHypotheses');
            obj.IarNumHypotheses = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.GPSRTK.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.GPSRTK(strObj);
        end
    end
end
