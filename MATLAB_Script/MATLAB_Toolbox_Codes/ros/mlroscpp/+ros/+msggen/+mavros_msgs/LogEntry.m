
classdef LogEntry < ros.Message
    %LogEntry MATLAB implementation of mavros_msgs/LogEntry
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/LogEntry' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a1428fc1ec4b2bfc8ab0c0ead7cce571' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'TimeUtc' 'Id' 'NumLogs' 'LastLogNum' 'Size' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'time_utc' 'id' 'num_logs' 'last_log_num' 'size' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        TimeUtc
        Id
        NumLogs
        LastLogNum
        Size
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'Header')
            obj.Header = val;
        end
        function set.TimeUtc(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'TimeUtc')
            obj.TimeUtc = val;
        end
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'Id');
            obj.Id = uint16(val);
        end
        function set.NumLogs(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'NumLogs');
            obj.NumLogs = uint16(val);
        end
        function set.LastLogNum(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'LastLogNum');
            obj.LastLogNum = uint16(val);
        end
        function set.Size(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LogEntry', 'Size');
            obj.Size = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.LogEntry.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.LogEntry(strObj);
        end
    end
end
