
classdef Waypoint < ros.Message
    %Waypoint MATLAB implementation of mavros_msgs/Waypoint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mavros_msgs/Waypoint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7a0d2b53dcd6b7aff0aa748703e85e92' % The MD5 Checksum of the message definition
        PropertyList = { 'Frame' 'Command' 'IsCurrent' 'Autocontinue' 'Param1' 'Param2' 'Param3' 'Param4' 'XLat' 'YLong' 'ZAlt' } % List of non-constant message properties
        ROSPropertyList = { 'frame' 'command' 'is_current' 'autocontinue' 'param1' 'param2' 'param3' 'param4' 'x_lat' 'y_long' 'z_alt' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        FRAMEGLOBAL = uint8(0)
        FRAMELOCALNED = uint8(1)
        FRAMEMISSION = uint8(2)
        FRAMEGLOBALRELALT = uint8(3)
        FRAMELOCALENU = uint8(4)
    end
    properties
        Frame
        Command
        IsCurrent
        Autocontinue
        Param1
        Param2
        Param3
        Param4
        XLat
        YLong
        ZAlt
    end
    methods
        function set.Frame(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Frame');
            obj.Frame = uint8(val);
        end
        function set.Command(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Command');
            obj.Command = uint16(val);
        end
        function set.IsCurrent(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'IsCurrent');
            obj.IsCurrent = logical(val);
        end
        function set.Autocontinue(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Autocontinue');
            obj.Autocontinue = logical(val);
        end
        function set.Param1(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Param1');
            obj.Param1 = single(val);
        end
        function set.Param2(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Param2');
            obj.Param2 = single(val);
        end
        function set.Param3(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Param3');
            obj.Param3 = single(val);
        end
        function set.Param4(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'Param4');
            obj.Param4 = single(val);
        end
        function set.XLat(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'XLat');
            obj.XLat = double(val);
        end
        function set.YLong(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'YLong');
            obj.YLong = double(val);
        end
        function set.ZAlt(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Waypoint', 'ZAlt');
            obj.ZAlt = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mavros_msgs.Waypoint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mavros_msgs.Waypoint(strObj);
        end
    end
end
