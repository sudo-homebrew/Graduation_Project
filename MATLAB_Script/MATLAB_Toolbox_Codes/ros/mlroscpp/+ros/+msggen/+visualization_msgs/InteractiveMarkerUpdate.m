
classdef InteractiveMarkerUpdate < ros.Message
    %InteractiveMarkerUpdate MATLAB implementation of visualization_msgs/InteractiveMarkerUpdate
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'visualization_msgs/InteractiveMarkerUpdate' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '710d308d0a9276d65945e92dd30b3946' % The MD5 Checksum of the message definition
        PropertyList = { 'Markers' 'Poses' 'ServerId' 'SeqNum' 'Type' 'Erases' } % List of non-constant message properties
        ROSPropertyList = { 'markers' 'poses' 'server_id' 'seq_num' 'type' 'erases' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.visualization_msgs.InteractiveMarker' ...
            'ros.msggen.visualization_msgs.InteractiveMarkerPose' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        KEEPALIVE = uint8(0)
        UPDATE = uint8(1)
    end
    properties
        Markers
        Poses
        ServerId
        SeqNum
        Type
        Erases
    end
    methods
        function set.Markers(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.visualization_msgs.InteractiveMarker.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.visualization_msgs.InteractiveMarker'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'Markers')
            obj.Markers = val;
        end
        function set.Poses(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.visualization_msgs.InteractiveMarkerPose.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.visualization_msgs.InteractiveMarkerPose'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'Poses')
            obj.Poses = val;
        end
        function set.ServerId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'ServerId');
            obj.ServerId = char(val);
        end
        function set.SeqNum(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'SeqNum');
            obj.SeqNum = uint64(val);
        end
        function set.Type(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'Type');
            obj.Type = uint8(val);
        end
        function set.Erases(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarkerUpdate', 'Erases');
            obj.Erases = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.visualization_msgs.InteractiveMarkerUpdate.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.visualization_msgs.InteractiveMarkerUpdate(strObj);
        end
    end
end
