
classdef InteractiveMarker < ros.Message
    %InteractiveMarker MATLAB implementation of visualization_msgs/InteractiveMarker
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'visualization_msgs/InteractiveMarker' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'dd86d22909d5a3364b384492e35c10af' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Pose' 'MenuEntries' 'Controls' 'Name' 'Description' 'Scale' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'pose' 'menu_entries' 'controls' 'name' 'description' 'scale' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Pose' ...
            'ros.msggen.visualization_msgs.MenuEntry' ...
            'ros.msggen.visualization_msgs.InteractiveMarkerControl' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Pose
        MenuEntries
        Controls
        Name
        Description
        Scale
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Header')
            obj.Header = val;
        end
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Pose')
            obj.Pose = val;
        end
        function set.MenuEntries(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.visualization_msgs.MenuEntry.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.visualization_msgs.MenuEntry'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'MenuEntries')
            obj.MenuEntries = val;
        end
        function set.Controls(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.visualization_msgs.InteractiveMarkerControl.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.visualization_msgs.InteractiveMarkerControl'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Controls')
            obj.Controls = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Name');
            obj.Name = char(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Description');
            obj.Description = char(val);
        end
        function set.Scale(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'InteractiveMarker', 'Scale');
            obj.Scale = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.visualization_msgs.InteractiveMarker.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.visualization_msgs.InteractiveMarker(strObj);
        end
    end
end
