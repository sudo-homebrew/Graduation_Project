
classdef RequestMessageRequest < ros.Message
    %RequestMessageRequest MATLAB implementation of topic_proxy/RequestMessageRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'topic_proxy/RequestMessageRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a9efb95582ffc17bbc0b4de0200e72d0' % The MD5 Checksum of the message definition
        PropertyList = { 'Timeout' 'Interval' 'Topic' 'RemoteTopic' 'Compressed' 'Latch' } % List of non-constant message properties
        ROSPropertyList = { 'timeout' 'interval' 'topic' 'remote_topic' 'compressed' 'latch' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Duration' ...
            'ros.msg.Duration' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Timeout
        Interval
        Topic
        RemoteTopic
        Compressed
        Latch
    end
    methods
        function set.Timeout(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Duration'};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'Timeout')
            obj.Timeout = val;
        end
        function set.Interval(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Duration'};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'Interval')
            obj.Interval = val;
        end
        function set.Topic(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'Topic');
            obj.Topic = char(val);
        end
        function set.RemoteTopic(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'RemoteTopic');
            obj.RemoteTopic = char(val);
        end
        function set.Compressed(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'Compressed');
            obj.Compressed = logical(val);
        end
        function set.Latch(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RequestMessageRequest', 'Latch');
            obj.Latch = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.topic_proxy.RequestMessageRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.topic_proxy.RequestMessageRequest(strObj);
        end
    end
end
