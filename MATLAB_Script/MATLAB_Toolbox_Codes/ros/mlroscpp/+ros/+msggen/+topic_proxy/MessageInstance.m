
classdef MessageInstance < ros.Message
    %MessageInstance MATLAB implementation of topic_proxy/MessageInstance
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'topic_proxy/MessageInstance' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '69465ef2b8f5727b1913d1e3e2ad35bd' % The MD5 Checksum of the message definition
        PropertyList = { 'Blob' 'Topic' 'Md5sum' 'Type' 'MessageDefinition' } % List of non-constant message properties
        ROSPropertyList = { 'blob' 'topic' 'md5sum' 'type' 'message_definition' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.blob.Blob' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Blob
        Topic
        Md5sum
        Type
        MessageDefinition
    end
    methods
        function set.Blob(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.blob.Blob'};
            validateattributes(val, validClasses, validAttributes, 'MessageInstance', 'Blob')
            obj.Blob = val;
        end
        function set.Topic(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'MessageInstance', 'Topic');
            obj.Topic = char(val);
        end
        function set.Md5sum(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'MessageInstance', 'Md5sum');
            obj.Md5sum = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'MessageInstance', 'Type');
            obj.Type = char(val);
        end
        function set.MessageDefinition(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'MessageInstance', 'MessageDefinition');
            obj.MessageDefinition = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.topic_proxy.MessageInstance.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.topic_proxy.MessageInstance(strObj);
        end
    end
end
