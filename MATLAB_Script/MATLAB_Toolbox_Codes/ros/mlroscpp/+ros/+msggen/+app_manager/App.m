
classdef App < ros.Message
    %App MATLAB implementation of app_manager/App
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'app_manager/App' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '643c1db5f71b615a47789ff5e190811e' % The MD5 Checksum of the message definition
        PropertyList = { 'Icon' 'ClientApps' 'Name' 'DisplayName' } % List of non-constant message properties
        ROSPropertyList = { 'icon' 'client_apps' 'name' 'display_name' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.app_manager.Icon' ...
            'ros.msggen.app_manager.ClientApp' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Icon
        ClientApps
        Name
        DisplayName
    end
    methods
        function set.Icon(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.app_manager.Icon'};
            validateattributes(val, validClasses, validAttributes, 'App', 'Icon')
            obj.Icon = val;
        end
        function set.ClientApps(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.app_manager.ClientApp.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.app_manager.ClientApp'};
            validateattributes(val, validClasses, validAttributes, 'App', 'ClientApps')
            obj.ClientApps = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'App', 'Name');
            obj.Name = char(val);
        end
        function set.DisplayName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'App', 'DisplayName');
            obj.DisplayName = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.app_manager.App.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.app_manager.App(strObj);
        end
    end
end
