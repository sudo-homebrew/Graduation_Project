
classdef ExchangeApp < ros.Message
    %ExchangeApp MATLAB implementation of app_manager/ExchangeApp
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'app_manager/ExchangeApp' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ccad20aa9f390121e44c61d218038d78' % The MD5 Checksum of the message definition
        PropertyList = { 'Icon' 'Name' 'DisplayName' 'Version' 'LatestVersion' 'Description' 'Hidden' } % List of non-constant message properties
        ROSPropertyList = { 'icon' 'name' 'display_name' 'version' 'latest_version' 'description' 'hidden' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.app_manager.Icon' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Icon
        Name
        DisplayName
        Version
        LatestVersion
        Description
        Hidden
    end
    methods
        function set.Icon(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.app_manager.Icon'};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'Icon')
            obj.Icon = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'Name');
            obj.Name = char(val);
        end
        function set.DisplayName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'DisplayName');
            obj.DisplayName = char(val);
        end
        function set.Version(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'Version');
            obj.Version = char(val);
        end
        function set.LatestVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'LatestVersion');
            obj.LatestVersion = char(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'Description');
            obj.Description = char(val);
        end
        function set.Hidden(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ExchangeApp', 'Hidden');
            obj.Hidden = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.app_manager.ExchangeApp.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.app_manager.ExchangeApp(strObj);
        end
    end
end
