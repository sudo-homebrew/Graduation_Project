
classdef RestartControllerRequest < ros.Message
    %RestartControllerRequest MATLAB implementation of dynamixel_controllers/RestartControllerRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'dynamixel_controllers/RestartControllerRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7785d708c83a180befd2fe3450dd9d41' % The MD5 Checksum of the message definition
        PropertyList = { 'PortName' 'PackagePath' 'ModuleName' 'ClassName' 'ControllerName' 'Dependencies' } % List of non-constant message properties
        ROSPropertyList = { 'port_name' 'package_path' 'module_name' 'class_name' 'controller_name' 'dependencies' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        PortName
        PackagePath
        ModuleName
        ClassName
        ControllerName
        Dependencies
    end
    methods
        function set.PortName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'PortName');
            obj.PortName = char(val);
        end
        function set.PackagePath(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'PackagePath');
            obj.PackagePath = char(val);
        end
        function set.ModuleName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'ModuleName');
            obj.ModuleName = char(val);
        end
        function set.ClassName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'ClassName');
            obj.ClassName = char(val);
        end
        function set.ControllerName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'ControllerName');
            obj.ControllerName = char(val);
        end
        function set.Dependencies(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RestartControllerRequest', 'Dependencies');
            obj.Dependencies = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.dynamixel_controllers.RestartControllerRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.dynamixel_controllers.RestartControllerRequest(strObj);
        end
    end
end
