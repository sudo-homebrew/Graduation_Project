
classdef Sense < ros.Message
    %Sense MATLAB implementation of kingfisher_msgs/Sense
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'kingfisher_msgs/Sense' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b0209acddc7f26d2e3dc1338d6c4df94' % The MD5 Checksum of the message definition
        PropertyList = { 'Battery' 'CurrentLeft' 'CurrentRight' 'PcbTemperature' 'FanOn' 'Rc' 'RcThrottle' 'RcRotation' 'RcEnable' } % List of non-constant message properties
        ROSPropertyList = { 'battery' 'current_left' 'current_right' 'pcb_temperature' 'fan_on' 'rc' 'rc_throttle' 'rc_rotation' 'rc_enable' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        RCINRANGE = uint8(1)
        RCINUSE = uint8(2)
    end
    properties
        Battery
        CurrentLeft
        CurrentRight
        PcbTemperature
        FanOn
        Rc
        RcThrottle
        RcRotation
        RcEnable
    end
    methods
        function set.Battery(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'Battery');
            obj.Battery = single(val);
        end
        function set.CurrentLeft(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'CurrentLeft');
            obj.CurrentLeft = single(val);
        end
        function set.CurrentRight(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'CurrentRight');
            obj.CurrentRight = single(val);
        end
        function set.PcbTemperature(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'PcbTemperature');
            obj.PcbTemperature = single(val);
        end
        function set.FanOn(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'FanOn');
            obj.FanOn = logical(val);
        end
        function set.Rc(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'Rc');
            obj.Rc = uint8(val);
        end
        function set.RcThrottle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'RcThrottle');
            obj.RcThrottle = uint16(val);
        end
        function set.RcRotation(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'RcRotation');
            obj.RcRotation = uint16(val);
        end
        function set.RcEnable(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Sense', 'RcEnable');
            obj.RcEnable = uint16(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.kingfisher_msgs.Sense.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.kingfisher_msgs.Sense(strObj);
        end
    end
end
