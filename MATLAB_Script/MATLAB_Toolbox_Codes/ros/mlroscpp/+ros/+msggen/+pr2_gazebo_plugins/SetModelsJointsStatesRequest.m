
classdef SetModelsJointsStatesRequest < ros.Message
    %SetModelsJointsStatesRequest MATLAB implementation of pr2_gazebo_plugins/SetModelsJointsStatesRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_gazebo_plugins/SetModelsJointsStatesRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ecf71b483df7b70447575a8231727200' % The MD5 Checksum of the message definition
        PropertyList = { 'ModelJointsStates' 'ModelNames' } % List of non-constant message properties
        ROSPropertyList = { 'model_joints_states' 'model_names' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.pr2_gazebo_plugins.ModelJointsState' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ModelJointsStates
        ModelNames
    end
    methods
        function set.ModelJointsStates(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.pr2_gazebo_plugins.ModelJointsState.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.pr2_gazebo_plugins.ModelJointsState'};
            validateattributes(val, validClasses, validAttributes, 'SetModelsJointsStatesRequest', 'ModelJointsStates')
            obj.ModelJointsStates = val;
        end
        function set.ModelNames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SetModelsJointsStatesRequest', 'ModelNames');
            obj.ModelNames = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_gazebo_plugins.SetModelsJointsStatesRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_gazebo_plugins.SetModelsJointsStatesRequest(strObj);
        end
    end
end
