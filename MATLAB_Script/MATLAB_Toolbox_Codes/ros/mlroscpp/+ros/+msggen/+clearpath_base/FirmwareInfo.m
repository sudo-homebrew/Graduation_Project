
classdef FirmwareInfo < ros.Message
    %FirmwareInfo MATLAB implementation of clearpath_base/FirmwareInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'clearpath_base/FirmwareInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'dd399eb9c7b3816e8bea664a45a7e9ea' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'FirmwareMajor' 'FirmwareMinor' 'ProtocolMajor' 'ProtocolMinor' 'FirmwareWriteTime' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'firmware_major' 'firmware_minor' 'protocol_major' 'protocol_minor' 'firmware_write_time' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        FirmwareMajor
        FirmwareMinor
        ProtocolMajor
        ProtocolMinor
        FirmwareWriteTime
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'Header')
            obj.Header = val;
        end
        function set.FirmwareMajor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'FirmwareMajor');
            obj.FirmwareMajor = int8(val);
        end
        function set.FirmwareMinor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'FirmwareMinor');
            obj.FirmwareMinor = int8(val);
        end
        function set.ProtocolMajor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'ProtocolMajor');
            obj.ProtocolMajor = int8(val);
        end
        function set.ProtocolMinor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'ProtocolMinor');
            obj.ProtocolMinor = int8(val);
        end
        function set.FirmwareWriteTime(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FirmwareInfo', 'FirmwareWriteTime');
            obj.FirmwareWriteTime = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.clearpath_base.FirmwareInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.clearpath_base.FirmwareInfo(strObj);
        end
    end
end
