
classdef TurnSetpt < ros.Message
    %TurnSetpt MATLAB implementation of clearpath_base/TurnSetpt
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'clearpath_base/TurnSetpt' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '023314e739de17bd5207788d54c661df' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'TransVel' 'TurnRadius' 'TransAccel' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'trans_vel' 'turn_radius' 'trans_accel' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        TransVel
        TurnRadius
        TransAccel
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'TurnSetpt', 'Header')
            obj.Header = val;
        end
        function set.TransVel(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TurnSetpt', 'TransVel');
            obj.TransVel = double(val);
        end
        function set.TurnRadius(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TurnSetpt', 'TurnRadius');
            obj.TurnRadius = double(val);
        end
        function set.TransAccel(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TurnSetpt', 'TransAccel');
            obj.TransAccel = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.clearpath_base.TurnSetpt.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.clearpath_base.TurnSetpt(strObj);
        end
    end
end
