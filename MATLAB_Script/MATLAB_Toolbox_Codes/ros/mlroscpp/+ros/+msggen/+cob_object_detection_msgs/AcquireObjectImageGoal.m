
classdef AcquireObjectImageGoal < ros.Message
    %AcquireObjectImageGoal MATLAB implementation of cob_object_detection_msgs/AcquireObjectImageGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'cob_object_detection_msgs/AcquireObjectImageGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a834da64b488488418ecf10d2737befd' % The MD5 Checksum of the message definition
        PropertyList = { 'Pose' 'SdhJoints' 'ObjectName' 'ResetImageCounter' } % List of non-constant message properties
        ROSPropertyList = { 'pose' 'sdh_joints' 'object_name' 'reset_image_counter' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Pose
        SdhJoints
        ObjectName
        ResetImageCounter
    end
    methods
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'AcquireObjectImageGoal', 'Pose')
            obj.Pose = val;
        end
        function set.SdhJoints(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.PoseStamped.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'AcquireObjectImageGoal', 'SdhJoints')
            obj.SdhJoints = val;
        end
        function set.ObjectName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'AcquireObjectImageGoal', 'ObjectName');
            obj.ObjectName = char(val);
        end
        function set.ResetImageCounter(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AcquireObjectImageGoal', 'ResetImageCounter');
            obj.ResetImageCounter = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.cob_object_detection_msgs.AcquireObjectImageGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.cob_object_detection_msgs.AcquireObjectImageGoal(strObj);
        end
    end
end
