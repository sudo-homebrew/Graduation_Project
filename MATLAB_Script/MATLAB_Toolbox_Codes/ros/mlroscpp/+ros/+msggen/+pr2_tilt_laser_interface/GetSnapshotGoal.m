
classdef GetSnapshotGoal < ros.Message
    %GetSnapshotGoal MATLAB implementation of pr2_tilt_laser_interface/GetSnapshotGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_tilt_laser_interface/GetSnapshotGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '464673531a0e6172d0d965e354c952f0' % The MD5 Checksum of the message definition
        PropertyList = { 'StartAngle' 'EndAngle' 'Speed' 'HiFidelity' 'Continuous' } % List of non-constant message properties
        ROSPropertyList = { 'start_angle' 'end_angle' 'speed' 'hi_fidelity' 'continuous' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        StartAngle
        EndAngle
        Speed
        HiFidelity
        Continuous
    end
    methods
        function set.StartAngle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetSnapshotGoal', 'StartAngle');
            obj.StartAngle = single(val);
        end
        function set.EndAngle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetSnapshotGoal', 'EndAngle');
            obj.EndAngle = single(val);
        end
        function set.Speed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetSnapshotGoal', 'Speed');
            obj.Speed = single(val);
        end
        function set.HiFidelity(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetSnapshotGoal', 'HiFidelity');
            obj.HiFidelity = logical(val);
        end
        function set.Continuous(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetSnapshotGoal', 'Continuous');
            obj.Continuous = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_tilt_laser_interface.GetSnapshotGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_tilt_laser_interface.GetSnapshotGoal(strObj);
        end
    end
end
