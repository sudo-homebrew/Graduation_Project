
classdef Gesture < ros.Message
    %Gesture MATLAB implementation of leap_motion/Gesture
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'leap_motion/Gesture' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a3bf4fe2d0e707244a5a679250ea8eba' % The MD5 Checksum of the message definition
        PropertyList = { 'LmcGestureId' 'IsValid' 'DurationUs' 'DurationS' 'GestureState' 'GestureType' 'ToString' 'PointableIds' } % List of non-constant message properties
        ROSPropertyList = { 'lmc_gesture_id' 'is_valid' 'duration_us' 'duration_s' 'gesture_state' 'gesture_type' 'to_string' 'pointable_ids' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LmcGestureId
        IsValid
        DurationUs
        DurationS
        GestureState
        GestureType
        ToString
        PointableIds
    end
    methods
        function set.LmcGestureId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'LmcGestureId');
            obj.LmcGestureId = int32(val);
        end
        function set.IsValid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'IsValid');
            obj.IsValid = logical(val);
        end
        function set.DurationUs(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'DurationUs');
            obj.DurationUs = int64(val);
        end
        function set.DurationS(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'DurationS');
            obj.DurationS = single(val);
        end
        function set.GestureState(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'GestureState');
            obj.GestureState = int32(val);
        end
        function set.GestureType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'GestureType');
            obj.GestureType = int32(val);
        end
        function set.ToString(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'ToString');
            obj.ToString = char(val);
        end
        function set.PointableIds(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = int32.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Gesture', 'PointableIds');
            obj.PointableIds = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.leap_motion.Gesture.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.leap_motion.Gesture(strObj);
        end
    end
end
