
classdef Bone < ros.Message
    %Bone MATLAB implementation of leap_motion/Bone
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'leap_motion/Bone' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ce39afad61bdb16ab802b0100be50795' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'BoneStart' 'BoneEnd' 'Type' 'Length' 'Width' 'ToString' 'Center' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'bone_start' 'bone_end' 'type' 'length' 'width' 'to_string' 'center' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Pose' ...
            'ros.msggen.geometry_msgs.Pose' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        BoneStart
        BoneEnd
        Type
        Length
        Width
        ToString
        Center
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'Header')
            obj.Header = val;
        end
        function set.BoneStart(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'BoneStart')
            obj.BoneStart = val;
        end
        function set.BoneEnd(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'BoneEnd')
            obj.BoneEnd = val;
        end
        function set.Type(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'Type');
            obj.Type = uint8(val);
        end
        function set.Length(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'Length');
            obj.Length = single(val);
        end
        function set.Width(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'Width');
            obj.Width = single(val);
        end
        function set.ToString(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'ToString');
            obj.ToString = char(val);
        end
        function set.Center(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = single.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Bone', 'Center');
            obj.Center = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.leap_motion.Bone.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.leap_motion.Bone(strObj);
        end
    end
end
