
classdef HectorIterData < ros.Message
    %HectorIterData MATLAB implementation of hector_mapping/HectorIterData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hector_mapping/HectorIterData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ecedaa7e26b5fc817a1add44c17fec5f' % The MD5 Checksum of the message definition
        PropertyList = { 'Hessian' 'ConditionNum' 'Determinant' 'ConditionNum2d' 'Determinant2d' } % List of non-constant message properties
        ROSPropertyList = { 'hessian' 'conditionNum' 'determinant' 'conditionNum2d' 'determinant2d' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Hessian
        ConditionNum
        Determinant
        ConditionNum2d
        Determinant2d
    end
    methods
        function set.Hessian(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 9};
            validateattributes(val, validClasses, validAttributes, 'HectorIterData', 'Hessian');
            obj.Hessian = double(val);
        end
        function set.ConditionNum(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HectorIterData', 'ConditionNum');
            obj.ConditionNum = double(val);
        end
        function set.Determinant(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HectorIterData', 'Determinant');
            obj.Determinant = double(val);
        end
        function set.ConditionNum2d(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HectorIterData', 'ConditionNum2d');
            obj.ConditionNum2d = double(val);
        end
        function set.Determinant2d(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'HectorIterData', 'Determinant2d');
            obj.Determinant2d = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hector_mapping.HectorIterData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hector_mapping.HectorIterData(strObj);
        end
    end
end
