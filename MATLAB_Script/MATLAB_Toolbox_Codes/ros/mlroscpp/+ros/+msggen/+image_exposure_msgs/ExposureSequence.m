
classdef ExposureSequence < ros.Message
    %ExposureSequence MATLAB implementation of image_exposure_msgs/ExposureSequence
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'image_exposure_msgs/ExposureSequence' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '81d98e1e20eab8beb4bd07beeba6a398' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Shutter' 'Gain' 'WhiteBalanceBlue' 'WhiteBalanceRed' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'shutter' 'gain' 'white_balance_blue' 'white_balance_red' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Shutter
        Gain
        WhiteBalanceBlue
        WhiteBalanceRed
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'ExposureSequence', 'Header')
            obj.Header = val;
        end
        function set.Shutter(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = uint32.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'ExposureSequence', 'Shutter');
            obj.Shutter = uint32(val);
        end
        function set.Gain(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ExposureSequence', 'Gain');
            obj.Gain = single(val);
        end
        function set.WhiteBalanceBlue(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ExposureSequence', 'WhiteBalanceBlue');
            obj.WhiteBalanceBlue = uint16(val);
        end
        function set.WhiteBalanceRed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ExposureSequence', 'WhiteBalanceRed');
            obj.WhiteBalanceRed = uint16(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.image_exposure_msgs.ExposureSequence.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.image_exposure_msgs.ExposureSequence(strObj);
        end
    end
end
