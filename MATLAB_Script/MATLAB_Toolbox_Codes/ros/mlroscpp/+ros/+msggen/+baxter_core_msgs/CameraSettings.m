
classdef CameraSettings < ros.Message
    %CameraSettings MATLAB implementation of baxter_core_msgs/CameraSettings
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'baxter_core_msgs/CameraSettings' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd133bef4a3bd9a6e490a5dc91d20f429' % The MD5 Checksum of the message definition
        PropertyList = { 'Controls' 'Width' 'Height' 'Fps' } % List of non-constant message properties
        ROSPropertyList = { 'controls' 'width' 'height' 'fps' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.baxter_core_msgs.CameraControl' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Controls
        Width
        Height
        Fps
    end
    methods
        function set.Controls(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.baxter_core_msgs.CameraControl.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.baxter_core_msgs.CameraControl'};
            validateattributes(val, validClasses, validAttributes, 'CameraSettings', 'Controls')
            obj.Controls = val;
        end
        function set.Width(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CameraSettings', 'Width');
            obj.Width = int32(val);
        end
        function set.Height(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CameraSettings', 'Height');
            obj.Height = int32(val);
        end
        function set.Fps(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CameraSettings', 'Fps');
            obj.Fps = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.baxter_core_msgs.CameraSettings.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.baxter_core_msgs.CameraSettings(strObj);
        end
    end
end
