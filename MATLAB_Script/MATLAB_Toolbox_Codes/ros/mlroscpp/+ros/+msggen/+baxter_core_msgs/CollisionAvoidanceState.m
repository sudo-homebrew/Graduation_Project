
classdef CollisionAvoidanceState < ros.Message
    %CollisionAvoidanceState MATLAB implementation of baxter_core_msgs/CollisionAvoidanceState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'baxter_core_msgs/CollisionAvoidanceState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '30f5cb8ae019f1ffe8b599e6d2e589c7' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'OtherArm' 'CollisionObject' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'other_arm' 'collision_object' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        OtherArm
        CollisionObject
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'CollisionAvoidanceState', 'Header')
            obj.Header = val;
        end
        function set.OtherArm(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CollisionAvoidanceState', 'OtherArm');
            obj.OtherArm = logical(val);
        end
        function set.CollisionObject(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'CollisionAvoidanceState', 'CollisionObject');
            obj.CollisionObject = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.baxter_core_msgs.CollisionAvoidanceState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.baxter_core_msgs.CollisionAvoidanceState(strObj);
        end
    end
end
