
classdef SolvePositionIKRequest < ros.Message
    %SolvePositionIKRequest MATLAB implementation of baxter_core_msgs/SolvePositionIKRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'baxter_core_msgs/SolvePositionIKRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2587e42983d0081d0a2288230991073b' % The MD5 Checksum of the message definition
        PropertyList = { 'PoseStamp' 'SeedAngles' 'SeedMode' } % List of non-constant message properties
        ROSPropertyList = { 'pose_stamp' 'seed_angles' 'seed_mode' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.sensor_msgs.JointState' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        SEEDAUTO = uint8(0)
        SEEDUSER = uint8(1)
        SEEDCURRENT = uint8(2)
        SEEDNSMAP = uint8(3)
    end
    properties
        PoseStamp
        SeedAngles
        SeedMode
    end
    methods
        function set.PoseStamp(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.PoseStamped.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'SolvePositionIKRequest', 'PoseStamp')
            obj.PoseStamp = val;
        end
        function set.SeedAngles(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.sensor_msgs.JointState.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.sensor_msgs.JointState'};
            validateattributes(val, validClasses, validAttributes, 'SolvePositionIKRequest', 'SeedAngles')
            obj.SeedAngles = val;
        end
        function set.SeedMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SolvePositionIKRequest', 'SeedMode');
            obj.SeedMode = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.baxter_core_msgs.SolvePositionIKRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.baxter_core_msgs.SolvePositionIKRequest(strObj);
        end
    end
end
