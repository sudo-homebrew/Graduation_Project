
classdef AssemblyState < ros.Message
    %AssemblyState MATLAB implementation of baxter_core_msgs/AssemblyState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'baxter_core_msgs/AssemblyState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '356d9dd237ce73b2667da9235f541933' % The MD5 Checksum of the message definition
        PropertyList = { 'Ready' 'Enabled' 'Stopped' 'Error' 'EstopButton' 'EstopSource' } % List of non-constant message properties
        ROSPropertyList = { 'ready' 'enabled' 'stopped' 'error' 'estop_button' 'estop_source' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        ESTOPBUTTONUNPRESSED = uint8(0)
        ESTOPBUTTONPRESSED = uint8(1)
        ESTOPBUTTONUNKNOWN = uint8(2)
        ESTOPBUTTONRELEASED = uint8(3)
        ESTOPSOURCENONE = uint8(0)
        ESTOPSOURCEUSER = uint8(1)
        ESTOPSOURCEUNKNOWN = uint8(2)
        ESTOPSOURCEFAULT = uint8(3)
        ESTOPSOURCEBRAIN = uint8(4)
    end
    properties
        Ready
        Enabled
        Stopped
        Error
        EstopButton
        EstopSource
    end
    methods
        function set.Ready(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'Ready');
            obj.Ready = logical(val);
        end
        function set.Enabled(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'Enabled');
            obj.Enabled = logical(val);
        end
        function set.Stopped(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'Stopped');
            obj.Stopped = logical(val);
        end
        function set.Error(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'Error');
            obj.Error = logical(val);
        end
        function set.EstopButton(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'EstopButton');
            obj.EstopButton = uint8(val);
        end
        function set.EstopSource(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AssemblyState', 'EstopSource');
            obj.EstopSource = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.baxter_core_msgs.AssemblyState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.baxter_core_msgs.AssemblyState(strObj);
        end
    end
end
