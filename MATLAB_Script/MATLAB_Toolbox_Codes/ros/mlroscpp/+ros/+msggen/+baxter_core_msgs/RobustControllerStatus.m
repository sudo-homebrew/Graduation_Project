
classdef RobustControllerStatus < ros.Message
    %RobustControllerStatus MATLAB implementation of baxter_core_msgs/RobustControllerStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'baxter_core_msgs/RobustControllerStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2f15441b7285d915e7e59d3618e173f2' % The MD5 Checksum of the message definition
        PropertyList = { 'IsEnabled' 'Complete' 'ControlUid' 'TimedOut' 'ErrorCodes' 'Labels' } % List of non-constant message properties
        ROSPropertyList = { 'isEnabled' 'complete' 'controlUid' 'timedOut' 'errorCodes' 'labels' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        NOTCOMPLETE = int32(0)
        COMPLETEWFAILURE = int32(1)
        COMPLETEWSUCCESS = int32(2)
    end
    properties
        IsEnabled
        Complete
        ControlUid
        TimedOut
        ErrorCodes
        Labels
    end
    methods
        function set.IsEnabled(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'IsEnabled');
            obj.IsEnabled = logical(val);
        end
        function set.Complete(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'Complete');
            obj.Complete = int32(val);
        end
        function set.ControlUid(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'ControlUid');
            obj.ControlUid = char(val);
        end
        function set.TimedOut(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'TimedOut');
            obj.TimedOut = logical(val);
        end
        function set.ErrorCodes(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'ErrorCodes');
            obj.ErrorCodes = cell(val);
        end
        function set.Labels(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RobustControllerStatus', 'Labels');
            obj.Labels = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.baxter_core_msgs.RobustControllerStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.baxter_core_msgs.RobustControllerStatus(strObj);
        end
    end
end
