
classdef PoseCommand < ros.Message
    %PoseCommand MATLAB implementation of r2_msgs/PoseCommand
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'r2_msgs/PoseCommand' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '325108abdcbe78370664839c919cbaa8' % The MD5 Checksum of the message definition
        PropertyList = { 'Pose' 'CommandId' 'RefFrame' 'BaseFrame' 'ToolFrame' } % List of non-constant message properties
        ROSPropertyList = { 'pose' 'commandId' 'refFrame' 'baseFrame' 'toolFrame' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Pose' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Pose
        CommandId
        RefFrame
        BaseFrame
        ToolFrame
    end
    methods
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'PoseCommand', 'Pose')
            obj.Pose = val;
        end
        function set.CommandId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommand', 'CommandId');
            obj.CommandId = char(val);
        end
        function set.RefFrame(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommand', 'RefFrame');
            obj.RefFrame = char(val);
        end
        function set.BaseFrame(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommand', 'BaseFrame');
            obj.BaseFrame = char(val);
        end
        function set.ToolFrame(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommand', 'ToolFrame');
            obj.ToolFrame = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.r2_msgs.PoseCommand.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.r2_msgs.PoseCommand(strObj);
        end
    end
end
