
classdef PoseCommandStatus < ros.Message
    %PoseCommandStatus MATLAB implementation of r2_msgs/PoseCommandStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'r2_msgs/PoseCommandStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '82493b7735e3fe414b93381d96bfd1ee' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'CommandId' 'Status' 'StatusMessage' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'commandId' 'status' 'statusMessage' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        PENDING = uint8(0)
        ACTIVE = uint8(1)
        REJECTED = uint8(2)
        SUCCEEDED = uint8(3)
        FAILED = uint8(4)
    end
    properties
        Stamp
        CommandId
        Status
        StatusMessage
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'PoseCommandStatus', 'Stamp')
            obj.Stamp = val;
        end
        function set.CommandId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommandStatus', 'CommandId');
            obj.CommandId = char(val);
        end
        function set.Status(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PoseCommandStatus', 'Status');
            obj.Status = uint8(val);
        end
        function set.StatusMessage(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PoseCommandStatus', 'StatusMessage');
            obj.StatusMessage = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.r2_msgs.PoseCommandStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.r2_msgs.PoseCommandStatus(strObj);
        end
    end
end
