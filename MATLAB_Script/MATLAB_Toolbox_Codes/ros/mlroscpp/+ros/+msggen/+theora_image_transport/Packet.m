
classdef Packet < ros.Message
    %Packet MATLAB implementation of theora_image_transport/Packet
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'theora_image_transport/Packet' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '33ac4e14a7cff32e7e0d65f18bb410f3' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Data' 'BOS' 'EOS' 'Granulepos' 'Packetno' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'data' 'b_o_s' 'e_o_s' 'granulepos' 'packetno' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Data
        BOS
        EOS
        Granulepos
        Packetno
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'Header')
            obj.Header = val;
        end
        function set.Data(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = uint8.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'Data');
            obj.Data = uint8(val);
        end
        function set.BOS(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'BOS');
            obj.BOS = int32(val);
        end
        function set.EOS(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'EOS');
            obj.EOS = int32(val);
        end
        function set.Granulepos(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'Granulepos');
            obj.Granulepos = int64(val);
        end
        function set.Packetno(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Packet', 'Packetno');
            obj.Packetno = int64(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.theora_image_transport.Packet.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.theora_image_transport.Packet(strObj);
        end
    end
end
