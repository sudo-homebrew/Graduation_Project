
classdef ControllerState < ros.Message
    %ControllerState MATLAB implementation of controller_manager_msgs/ControllerState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'controller_manager_msgs/ControllerState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'aeb6b261d97793ab74099a3740245272' % The MD5 Checksum of the message definition
        PropertyList = { 'ClaimedResources' 'Name' 'State' 'Type' } % List of non-constant message properties
        ROSPropertyList = { 'claimed_resources' 'name' 'state' 'type' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.controller_manager_msgs.HardwareInterfaceResources' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ClaimedResources
        Name
        State
        Type
    end
    methods
        function set.ClaimedResources(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.controller_manager_msgs.HardwareInterfaceResources.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.controller_manager_msgs.HardwareInterfaceResources'};
            validateattributes(val, validClasses, validAttributes, 'ControllerState', 'ClaimedResources')
            obj.ClaimedResources = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ControllerState', 'Name');
            obj.Name = char(val);
        end
        function set.State(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ControllerState', 'State');
            obj.State = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ControllerState', 'Type');
            obj.Type = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.controller_manager_msgs.ControllerState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.controller_manager_msgs.ControllerState(strObj);
        end
    end
end
