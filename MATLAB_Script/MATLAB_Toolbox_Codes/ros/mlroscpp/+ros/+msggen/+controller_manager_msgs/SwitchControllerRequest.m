
classdef SwitchControllerRequest < ros.Message
    %SwitchControllerRequest MATLAB implementation of controller_manager_msgs/SwitchControllerRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'controller_manager_msgs/SwitchControllerRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '36d99a977432b71d4bf16ce5847949d7' % The MD5 Checksum of the message definition
        PropertyList = { 'StartControllers' 'StopControllers' 'Strictness' 'StartAsap' 'Timeout' } % List of non-constant message properties
        ROSPropertyList = { 'start_controllers' 'stop_controllers' 'strictness' 'start_asap' 'timeout' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        BESTEFFORT = int32(1)
        STRICT = int32(2)
    end
    properties
        StartControllers
        StopControllers
        Strictness
        StartAsap
        Timeout
    end
    methods
        function set.StartControllers(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SwitchControllerRequest', 'StartControllers');
            obj.StartControllers = cell(val);
        end
        function set.StopControllers(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SwitchControllerRequest', 'StopControllers');
            obj.StopControllers = cell(val);
        end
        function set.Strictness(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SwitchControllerRequest', 'Strictness');
            obj.Strictness = int32(val);
        end
        function set.StartAsap(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SwitchControllerRequest', 'StartAsap');
            obj.StartAsap = logical(val);
        end
        function set.Timeout(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SwitchControllerRequest', 'Timeout');
            obj.Timeout = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.controller_manager_msgs.SwitchControllerRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.controller_manager_msgs.SwitchControllerRequest(strObj);
        end
    end
end
