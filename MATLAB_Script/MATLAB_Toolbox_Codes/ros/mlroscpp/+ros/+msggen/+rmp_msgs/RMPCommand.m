
classdef RMPCommand < ros.Message
    %RMPCommand MATLAB implementation of rmp_msgs/RMPCommand
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rmp_msgs/RMPCommand' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '84cde9e1758addb56d2d271a15c091bc' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'CmdId' 'Arg1' 'Arg2' 'Arg3' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'cmd_id' 'arg1' 'arg2' 'arg3' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        RMPMOTIONCMDID = uint32(1280)
        RMPOMNIMOTIONCMDID = uint32(1536)
        RMPCFGCMDID = uint32(1281)
        RMPCMDSETOPERATIONALMODE = uint8(32)
        RMPCMDNONE = uint8(0)
        DISABLEREQUEST = uint8(1)
        POWERDOWNREQUEST = uint8(2)
        DTZREQUEST = uint8(3)
        STANDBYREQUEST = uint8(4)
        TRACTORREQUEST = uint8(5)
        BALANCEREQUEST = uint8(6)
    end
    properties
        Header
        CmdId
        Arg1
        Arg2
        Arg3
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'RMPCommand', 'Header')
            obj.Header = val;
        end
        function set.CmdId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RMPCommand', 'CmdId');
            obj.CmdId = uint32(val);
        end
        function set.Arg1(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RMPCommand', 'Arg1');
            obj.Arg1 = single(val);
        end
        function set.Arg2(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RMPCommand', 'Arg2');
            obj.Arg2 = single(val);
        end
        function set.Arg3(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RMPCommand', 'Arg3');
            obj.Arg3 = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rmp_msgs.RMPCommand.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rmp_msgs.RMPCommand(strObj);
        end
    end
end
