
classdef RequestParamResponse < ros.Message
    %RequestParamResponse MATLAB implementation of rosserial_msgs/RequestParamResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rosserial_msgs/RequestParamResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9f0e98bda65981986ddf53afa7a40e49' % The MD5 Checksum of the message definition
        PropertyList = { 'Ints' 'Floats' 'Strings' } % List of non-constant message properties
        ROSPropertyList = { 'ints' 'floats' 'strings' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Ints
        Floats
        Strings
    end
    methods
        function set.Ints(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = int32.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RequestParamResponse', 'Ints');
            obj.Ints = int32(val);
        end
        function set.Floats(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = single.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RequestParamResponse', 'Floats');
            obj.Floats = single(val);
        end
        function set.Strings(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RequestParamResponse', 'Strings');
            obj.Strings = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rosserial_msgs.RequestParamResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rosserial_msgs.RequestParamResponse(strObj);
        end
    end
end
