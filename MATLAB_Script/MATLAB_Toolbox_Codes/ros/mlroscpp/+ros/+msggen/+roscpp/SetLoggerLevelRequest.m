
classdef SetLoggerLevelRequest < ros.Message
    %SetLoggerLevelRequest MATLAB implementation of roscpp/SetLoggerLevelRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'roscpp/SetLoggerLevelRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '51da076440d78ca1684d36c868df61ea' % The MD5 Checksum of the message definition
        PropertyList = { 'Logger' 'Level' } % List of non-constant message properties
        ROSPropertyList = { 'logger' 'level' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Logger
        Level
    end
    methods
        function set.Logger(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetLoggerLevelRequest', 'Logger');
            obj.Logger = char(val);
        end
        function set.Level(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetLoggerLevelRequest', 'Level');
            obj.Level = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.roscpp.SetLoggerLevelRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.roscpp.SetLoggerLevelRequest(strObj);
        end
    end
end
