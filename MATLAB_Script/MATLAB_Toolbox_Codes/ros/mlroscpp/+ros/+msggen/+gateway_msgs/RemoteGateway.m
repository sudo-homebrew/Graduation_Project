
classdef RemoteGateway < ros.Message
    %RemoteGateway MATLAB implementation of gateway_msgs/RemoteGateway
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gateway_msgs/RemoteGateway' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '58607c66cd963e494a28cb3f919087f2' % The MD5 Checksum of the message definition
        PropertyList = { 'ConnStats' 'PublicInterface' 'FlippedInterface' 'PulledInterface' 'Name' 'Ip' 'Firewall' } % List of non-constant message properties
        ROSPropertyList = { 'conn_stats' 'public_interface' 'flipped_interface' 'pulled_interface' 'name' 'ip' 'firewall' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.gateway_msgs.ConnectionStatistics' ...
            'ros.msggen.gateway_msgs.Rule' ...
            'ros.msggen.gateway_msgs.RemoteRule' ...
            'ros.msggen.gateway_msgs.RemoteRule' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        WIRED = int8(1)
        WIRELESS = int8(2)
    end
    properties
        ConnStats
        PublicInterface
        FlippedInterface
        PulledInterface
        Name
        Ip
        Firewall
    end
    methods
        function set.ConnStats(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.gateway_msgs.ConnectionStatistics'};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'ConnStats')
            obj.ConnStats = val;
        end
        function set.PublicInterface(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.gateway_msgs.Rule.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.gateway_msgs.Rule'};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'PublicInterface')
            obj.PublicInterface = val;
        end
        function set.FlippedInterface(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.gateway_msgs.RemoteRule.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.gateway_msgs.RemoteRule'};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'FlippedInterface')
            obj.FlippedInterface = val;
        end
        function set.PulledInterface(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.gateway_msgs.RemoteRule.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.gateway_msgs.RemoteRule'};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'PulledInterface')
            obj.PulledInterface = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'Name');
            obj.Name = char(val);
        end
        function set.Ip(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'Ip');
            obj.Ip = char(val);
        end
        function set.Firewall(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RemoteGateway', 'Firewall');
            obj.Firewall = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gateway_msgs.RemoteGateway.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gateway_msgs.RemoteGateway(strObj);
        end
    end
end
