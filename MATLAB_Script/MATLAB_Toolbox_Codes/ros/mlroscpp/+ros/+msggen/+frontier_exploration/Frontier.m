
classdef Frontier < ros.Message
    %Frontier MATLAB implementation of frontier_exploration/Frontier
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'frontier_exploration/Frontier' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '1325c0e43f607455fdee9e36462f6ba0' % The MD5 Checksum of the message definition
        PropertyList = { 'Initial' 'Centroid' 'Middle' 'Size' 'MinDistance' } % List of non-constant message properties
        ROSPropertyList = { 'initial' 'centroid' 'middle' 'size' 'min_distance' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Initial
        Centroid
        Middle
        Size
        MinDistance
    end
    methods
        function set.Initial(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'Initial')
            obj.Initial = val;
        end
        function set.Centroid(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'Centroid')
            obj.Centroid = val;
        end
        function set.Middle(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'Middle')
            obj.Middle = val;
        end
        function set.Size(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'Size');
            obj.Size = uint32(val);
        end
        function set.MinDistance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'MinDistance');
            obj.MinDistance = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.frontier_exploration.Frontier.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.frontier_exploration.Frontier(strObj);
        end
    end
end
