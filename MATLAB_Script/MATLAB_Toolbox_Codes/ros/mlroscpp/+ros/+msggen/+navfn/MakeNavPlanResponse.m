
classdef MakeNavPlanResponse < ros.Message
    %MakeNavPlanResponse MATLAB implementation of navfn/MakeNavPlanResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'navfn/MakeNavPlanResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '8b8ed7edf1b237dc9ddda8c8ffed5d3a' % The MD5 Checksum of the message definition
        PropertyList = { 'Path' 'PlanFound' 'ErrorMessage' } % List of non-constant message properties
        ROSPropertyList = { 'path' 'plan_found' 'error_message' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Path
        PlanFound
        ErrorMessage
    end
    methods
        function set.Path(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.PoseStamped.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'MakeNavPlanResponse', 'Path')
            obj.Path = val;
        end
        function set.PlanFound(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'MakeNavPlanResponse', 'PlanFound');
            obj.PlanFound = uint8(val);
        end
        function set.ErrorMessage(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'MakeNavPlanResponse', 'ErrorMessage');
            obj.ErrorMessage = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.navfn.MakeNavPlanResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.navfn.MakeNavPlanResponse(strObj);
        end
    end
end
