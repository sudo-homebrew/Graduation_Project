
classdef RecvRequest < ros.Message
    %RecvRequest MATLAB implementation of shared_serial/RecvRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'shared_serial/RecvRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'c05d3c907840837e419db15be31d15b6' % The MD5 Checksum of the message definition
        PropertyList = { 'Socket' 'Length' 'RecvTimeout' 'SockTimeout' } % List of non-constant message properties
        ROSPropertyList = { 'socket' 'length' 'recv_timeout' 'sock_timeout' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Socket
        Length
        RecvTimeout
        SockTimeout
    end
    methods
        function set.Socket(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RecvRequest', 'Socket');
            obj.Socket = uint32(val);
        end
        function set.Length(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RecvRequest', 'Length');
            obj.Length = uint32(val);
        end
        function set.RecvTimeout(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RecvRequest', 'RecvTimeout');
            obj.RecvTimeout = single(val);
        end
        function set.SockTimeout(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RecvRequest', 'SockTimeout');
            obj.SockTimeout = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.shared_serial.RecvRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.shared_serial.RecvRequest(strObj);
        end
    end
end
