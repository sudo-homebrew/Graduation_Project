
classdef VoxelGrid < ros.Message
    %VoxelGrid MATLAB implementation of costmap_2d/VoxelGrid
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'costmap_2d/VoxelGrid' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '48a040827e1322073d78ece5a497029c' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Origin' 'Resolutions' 'Data' 'SizeX' 'SizeY' 'SizeZ' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'origin' 'resolutions' 'data' 'size_x' 'size_y' 'size_z' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Point32' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Origin
        Resolutions
        Data
        SizeX
        SizeY
        SizeZ
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'Header')
            obj.Header = val;
        end
        function set.Origin(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point32'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'Origin')
            obj.Origin = val;
        end
        function set.Resolutions(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'Resolutions')
            obj.Resolutions = val;
        end
        function set.Data(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = uint32.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'Data');
            obj.Data = uint32(val);
        end
        function set.SizeX(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'SizeX');
            obj.SizeX = uint32(val);
        end
        function set.SizeY(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'SizeY');
            obj.SizeY = uint32(val);
        end
        function set.SizeZ(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VoxelGrid', 'SizeZ');
            obj.SizeZ = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.costmap_2d.VoxelGrid.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.costmap_2d.VoxelGrid(strObj);
        end
    end
end
