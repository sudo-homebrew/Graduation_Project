
classdef ScriptGoal < ros.Message
    %ScriptGoal MATLAB implementation of cob_script_server/ScriptGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'cob_script_server/ScriptGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0a40a194b72e6783b1b8bec8d1c28c7f' % The MD5 Checksum of the message definition
        PropertyList = { 'FunctionName' 'ComponentName' 'ParameterName' 'Mode' 'ServiceName' 'Duration' 'Planning' } % List of non-constant message properties
        ROSPropertyList = { 'function_name' 'component_name' 'parameter_name' 'mode' 'service_name' 'duration' 'planning' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        FunctionName
        ComponentName
        ParameterName
        Mode
        ServiceName
        Duration
        Planning
    end
    methods
        function set.FunctionName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'FunctionName');
            obj.FunctionName = char(val);
        end
        function set.ComponentName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'ComponentName');
            obj.ComponentName = char(val);
        end
        function set.ParameterName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'ParameterName');
            obj.ParameterName = char(val);
        end
        function set.Mode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'Mode');
            obj.Mode = char(val);
        end
        function set.ServiceName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'ServiceName');
            obj.ServiceName = char(val);
        end
        function set.Duration(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'Duration');
            obj.Duration = single(val);
        end
        function set.Planning(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ScriptGoal', 'Planning');
            obj.Planning = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.cob_script_server.ScriptGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.cob_script_server.ScriptGoal(strObj);
        end
    end
end
