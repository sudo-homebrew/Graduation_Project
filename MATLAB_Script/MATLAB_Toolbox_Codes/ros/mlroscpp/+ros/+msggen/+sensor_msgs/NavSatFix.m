
classdef NavSatFix < ros.Message
    %NavSatFix MATLAB implementation of sensor_msgs/NavSatFix
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'sensor_msgs/NavSatFix' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2d3a8cd499b9b4a0249fb98fd05cfa48' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Status' 'Latitude' 'Longitude' 'Altitude' 'PositionCovariance' 'PositionCovarianceType' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'status' 'latitude' 'longitude' 'altitude' 'position_covariance' 'position_covariance_type' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.sensor_msgs.NavSatStatus' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        COVARIANCETYPEUNKNOWN = uint8(0)
        COVARIANCETYPEAPPROXIMATED = uint8(1)
        COVARIANCETYPEDIAGONALKNOWN = uint8(2)
        COVARIANCETYPEKNOWN = uint8(3)
    end
    properties
        Header
        Status
        Latitude
        Longitude
        Altitude
        PositionCovariance
        PositionCovarianceType
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'Header')
            obj.Header = val;
        end
        function set.Status(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.sensor_msgs.NavSatStatus'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'Status')
            obj.Status = val;
        end
        function set.Latitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'Latitude');
            obj.Latitude = double(val);
        end
        function set.Longitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'Longitude');
            obj.Longitude = double(val);
        end
        function set.Altitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'Altitude');
            obj.Altitude = double(val);
        end
        function set.PositionCovariance(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 9};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'PositionCovariance');
            obj.PositionCovariance = double(val);
        end
        function set.PositionCovarianceType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavSatFix', 'PositionCovarianceType');
            obj.PositionCovarianceType = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.sensor_msgs.NavSatFix.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.sensor_msgs.NavSatFix(strObj);
        end
    end
end
