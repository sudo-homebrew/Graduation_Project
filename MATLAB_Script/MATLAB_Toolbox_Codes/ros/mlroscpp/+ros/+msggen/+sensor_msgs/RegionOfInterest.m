
classdef RegionOfInterest < ros.Message
    %RegionOfInterest MATLAB implementation of sensor_msgs/RegionOfInterest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'sensor_msgs/RegionOfInterest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'bdb633039d588fcccb441a4d43ccfe09' % The MD5 Checksum of the message definition
        PropertyList = { 'XOffset' 'YOffset' 'Height' 'Width' 'DoRectify' } % List of non-constant message properties
        ROSPropertyList = { 'x_offset' 'y_offset' 'height' 'width' 'do_rectify' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        XOffset
        YOffset
        Height
        Width
        DoRectify
    end
    methods
        function set.XOffset(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegionOfInterest', 'XOffset');
            obj.XOffset = uint32(val);
        end
        function set.YOffset(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegionOfInterest', 'YOffset');
            obj.YOffset = uint32(val);
        end
        function set.Height(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegionOfInterest', 'Height');
            obj.Height = uint32(val);
        end
        function set.Width(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegionOfInterest', 'Width');
            obj.Width = uint32(val);
        end
        function set.DoRectify(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegionOfInterest', 'DoRectify');
            obj.DoRectify = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.sensor_msgs.RegionOfInterest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.sensor_msgs.RegionOfInterest(strObj);
        end
    end
end
