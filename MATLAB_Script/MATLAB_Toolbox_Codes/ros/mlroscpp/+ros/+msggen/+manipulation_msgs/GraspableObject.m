
classdef GraspableObject < ros.Message
    %GraspableObject MATLAB implementation of manipulation_msgs/GraspableObject
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'manipulation_msgs/GraspableObject' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'e2efd13d8e2bbb4697a5d71f167bceaa' % The MD5 Checksum of the message definition
        PropertyList = { 'PotentialModels' 'Cluster' 'Region' 'ReferenceFrameId' 'CollisionName' } % List of non-constant message properties
        ROSPropertyList = { 'potential_models' 'cluster' 'region' 'reference_frame_id' 'collision_name' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.household_objects_database_msgs.DatabaseModelPose' ...
            'ros.msggen.sensor_msgs.PointCloud' ...
            'ros.msggen.manipulation_msgs.SceneRegion' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        PotentialModels
        Cluster
        Region
        ReferenceFrameId
        CollisionName
    end
    methods
        function set.PotentialModels(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.household_objects_database_msgs.DatabaseModelPose.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.household_objects_database_msgs.DatabaseModelPose'};
            validateattributes(val, validClasses, validAttributes, 'GraspableObject', 'PotentialModels')
            obj.PotentialModels = val;
        end
        function set.Cluster(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.sensor_msgs.PointCloud'};
            validateattributes(val, validClasses, validAttributes, 'GraspableObject', 'Cluster')
            obj.Cluster = val;
        end
        function set.Region(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.manipulation_msgs.SceneRegion'};
            validateattributes(val, validClasses, validAttributes, 'GraspableObject', 'Region')
            obj.Region = val;
        end
        function set.ReferenceFrameId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GraspableObject', 'ReferenceFrameId');
            obj.ReferenceFrameId = char(val);
        end
        function set.CollisionName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GraspableObject', 'CollisionName');
            obj.CollisionName = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.manipulation_msgs.GraspableObject.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.manipulation_msgs.GraspableObject(strObj);
        end
    end
end
