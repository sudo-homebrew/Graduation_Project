
classdef Object < ros.Message
    %Object MATLAB implementation of hector_worldmodel_msgs/Object
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hector_worldmodel_msgs/Object' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '02dea96e80640703553490052f13918d' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Pose' 'Info' 'State' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'pose' 'info' 'state' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.PoseWithCovariance' ...
            'ros.msggen.hector_worldmodel_msgs.ObjectInfo' ...
            'ros.msggen.hector_worldmodel_msgs.ObjectState' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Pose
        Info
        State
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'Object', 'Header')
            obj.Header = val;
        end
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseWithCovariance'};
            validateattributes(val, validClasses, validAttributes, 'Object', 'Pose')
            obj.Pose = val;
        end
        function set.Info(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hector_worldmodel_msgs.ObjectInfo'};
            validateattributes(val, validClasses, validAttributes, 'Object', 'Info')
            obj.Info = val;
        end
        function set.State(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hector_worldmodel_msgs.ObjectState'};
            validateattributes(val, validClasses, validAttributes, 'Object', 'State')
            obj.State = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hector_worldmodel_msgs.Object.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hector_worldmodel_msgs.Object(strObj);
        end
    end
end
