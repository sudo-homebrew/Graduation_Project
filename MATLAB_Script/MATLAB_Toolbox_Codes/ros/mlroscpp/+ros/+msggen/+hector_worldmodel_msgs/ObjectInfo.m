
classdef ObjectInfo < ros.Message
    %ObjectInfo MATLAB implementation of hector_worldmodel_msgs/ObjectInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hector_worldmodel_msgs/ObjectInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd394469df540d3963132564bb1e1b6c6' % The MD5 Checksum of the message definition
        PropertyList = { 'ClassId' 'ObjectId' 'Name' 'Support' } % List of non-constant message properties
        ROSPropertyList = { 'class_id' 'object_id' 'name' 'support' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ClassId
        ObjectId
        Name
        Support
    end
    methods
        function set.ClassId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ObjectInfo', 'ClassId');
            obj.ClassId = char(val);
        end
        function set.ObjectId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ObjectInfo', 'ObjectId');
            obj.ObjectId = char(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ObjectInfo', 'Name');
            obj.Name = char(val);
        end
        function set.Support(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ObjectInfo', 'Support');
            obj.Support = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hector_worldmodel_msgs.ObjectInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hector_worldmodel_msgs.ObjectInfo(strObj);
        end
    end
end
