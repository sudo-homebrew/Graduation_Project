
classdef GetStateValidityResponse < ros.Message
    %GetStateValidityResponse MATLAB implementation of moveit_msgs/GetStateValidityResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/GetStateValidityResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'e326fb22b7448f29c0e726d9270d9929' % The MD5 Checksum of the message definition
        PropertyList = { 'Contacts' 'CostSources' 'ConstraintResult' 'Valid' } % List of non-constant message properties
        ROSPropertyList = { 'contacts' 'cost_sources' 'constraint_result' 'valid' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.ContactInformation' ...
            'ros.msggen.moveit_msgs.CostSource' ...
            'ros.msggen.moveit_msgs.ConstraintEvalResult' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Contacts
        CostSources
        ConstraintResult
        Valid
    end
    methods
        function set.Contacts(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.ContactInformation.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.ContactInformation'};
            validateattributes(val, validClasses, validAttributes, 'GetStateValidityResponse', 'Contacts')
            obj.Contacts = val;
        end
        function set.CostSources(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.CostSource.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.CostSource'};
            validateattributes(val, validClasses, validAttributes, 'GetStateValidityResponse', 'CostSources')
            obj.CostSources = val;
        end
        function set.ConstraintResult(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.ConstraintEvalResult.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.ConstraintEvalResult'};
            validateattributes(val, validClasses, validAttributes, 'GetStateValidityResponse', 'ConstraintResult')
            obj.ConstraintResult = val;
        end
        function set.Valid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetStateValidityResponse', 'Valid');
            obj.Valid = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.GetStateValidityResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.GetStateValidityResponse(strObj);
        end
    end
end
