
classdef MotionSequenceResponse < ros.Message
    %MotionSequenceResponse MATLAB implementation of moveit_msgs/MotionSequenceResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/MotionSequenceResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '3cfbd71b06d8199bf604ebb8d6627be1' % The MD5 Checksum of the message definition
        PropertyList = { 'ErrorCode' 'SequenceStart' 'PlannedTrajectories' 'PlanningTime' } % List of non-constant message properties
        ROSPropertyList = { 'error_code' 'sequence_start' 'planned_trajectories' 'planning_time' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.MoveItErrorCodes' ...
            'ros.msggen.moveit_msgs.RobotState' ...
            'ros.msggen.moveit_msgs.RobotTrajectory' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ErrorCode
        SequenceStart
        PlannedTrajectories
        PlanningTime
    end
    methods
        function set.ErrorCode(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.MoveItErrorCodes'};
            validateattributes(val, validClasses, validAttributes, 'MotionSequenceResponse', 'ErrorCode')
            obj.ErrorCode = val;
        end
        function set.SequenceStart(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.RobotState'};
            validateattributes(val, validClasses, validAttributes, 'MotionSequenceResponse', 'SequenceStart')
            obj.SequenceStart = val;
        end
        function set.PlannedTrajectories(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.RobotTrajectory.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.RobotTrajectory'};
            validateattributes(val, validClasses, validAttributes, 'MotionSequenceResponse', 'PlannedTrajectories')
            obj.PlannedTrajectories = val;
        end
        function set.PlanningTime(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'MotionSequenceResponse', 'PlanningTime');
            obj.PlanningTime = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.MotionSequenceResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.MotionSequenceResponse(strObj);
        end
    end
end
