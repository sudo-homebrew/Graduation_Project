
classdef DisplayRobotState < ros.Message
    %DisplayRobotState MATLAB implementation of moveit_msgs/DisplayRobotState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/DisplayRobotState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '61c4e677a6fbbc83f0d5d9df2be85e3c' % The MD5 Checksum of the message definition
        PropertyList = { 'State' 'HighlightLinks' 'Hide' } % List of non-constant message properties
        ROSPropertyList = { 'state' 'highlight_links' 'hide' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.RobotState' ...
            'ros.msggen.moveit_msgs.ObjectColor' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        State
        HighlightLinks
        Hide
    end
    methods
        function set.State(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.RobotState'};
            validateattributes(val, validClasses, validAttributes, 'DisplayRobotState', 'State')
            obj.State = val;
        end
        function set.HighlightLinks(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.ObjectColor.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.ObjectColor'};
            validateattributes(val, validClasses, validAttributes, 'DisplayRobotState', 'HighlightLinks')
            obj.HighlightLinks = val;
        end
        function set.Hide(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DisplayRobotState', 'Hide');
            obj.Hide = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.DisplayRobotState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.DisplayRobotState(strObj);
        end
    end
end
