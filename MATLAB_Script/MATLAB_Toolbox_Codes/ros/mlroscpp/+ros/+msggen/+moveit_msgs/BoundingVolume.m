
classdef BoundingVolume < ros.Message
    %BoundingVolume MATLAB implementation of moveit_msgs/BoundingVolume
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/BoundingVolume' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '22db94010f39e9198032cb4a1aeda26e' % The MD5 Checksum of the message definition
        PropertyList = { 'Primitives' 'PrimitivePoses' 'Meshes' 'MeshPoses' } % List of non-constant message properties
        ROSPropertyList = { 'primitives' 'primitive_poses' 'meshes' 'mesh_poses' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.shape_msgs.SolidPrimitive' ...
            'ros.msggen.geometry_msgs.Pose' ...
            'ros.msggen.shape_msgs.Mesh' ...
            'ros.msggen.geometry_msgs.Pose' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Primitives
        PrimitivePoses
        Meshes
        MeshPoses
    end
    methods
        function set.Primitives(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.shape_msgs.SolidPrimitive.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.shape_msgs.SolidPrimitive'};
            validateattributes(val, validClasses, validAttributes, 'BoundingVolume', 'Primitives')
            obj.Primitives = val;
        end
        function set.PrimitivePoses(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.Pose.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'BoundingVolume', 'PrimitivePoses')
            obj.PrimitivePoses = val;
        end
        function set.Meshes(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.shape_msgs.Mesh.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.shape_msgs.Mesh'};
            validateattributes(val, validClasses, validAttributes, 'BoundingVolume', 'Meshes')
            obj.Meshes = val;
        end
        function set.MeshPoses(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.Pose.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'BoundingVolume', 'MeshPoses')
            obj.MeshPoses = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.BoundingVolume.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.BoundingVolume(strObj);
        end
    end
end
