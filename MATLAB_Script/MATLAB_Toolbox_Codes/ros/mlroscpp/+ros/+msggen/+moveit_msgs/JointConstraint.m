
classdef JointConstraint < ros.Message
    %JointConstraint MATLAB implementation of moveit_msgs/JointConstraint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/JointConstraint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'c02a15146bec0ce13564807805b008f0' % The MD5 Checksum of the message definition
        PropertyList = { 'JointName' 'Position' 'ToleranceAbove' 'ToleranceBelow' 'Weight' } % List of non-constant message properties
        ROSPropertyList = { 'joint_name' 'position' 'tolerance_above' 'tolerance_below' 'weight' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        JointName
        Position
        ToleranceAbove
        ToleranceBelow
        Weight
    end
    methods
        function set.JointName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'JointConstraint', 'JointName');
            obj.JointName = char(val);
        end
        function set.Position(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'JointConstraint', 'Position');
            obj.Position = double(val);
        end
        function set.ToleranceAbove(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'JointConstraint', 'ToleranceAbove');
            obj.ToleranceAbove = double(val);
        end
        function set.ToleranceBelow(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'JointConstraint', 'ToleranceBelow');
            obj.ToleranceBelow = double(val);
        end
        function set.Weight(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'JointConstraint', 'Weight');
            obj.Weight = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.JointConstraint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.JointConstraint(strObj);
        end
    end
end
