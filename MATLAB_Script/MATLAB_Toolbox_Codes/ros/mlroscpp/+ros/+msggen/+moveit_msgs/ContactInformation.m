
classdef ContactInformation < ros.Message
    %ContactInformation MATLAB implementation of moveit_msgs/ContactInformation
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/ContactInformation' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '116228ca08b0c286ec5ca32a50fdc17b' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Position' 'Normal' 'Depth' 'ContactBody1' 'BodyType1' 'ContactBody2' 'BodyType2' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'position' 'normal' 'depth' 'contact_body_1' 'body_type_1' 'contact_body_2' 'body_type_2' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        ROBOTLINK = uint32(0)
        WORLDOBJECT = uint32(1)
        ROBOTATTACHED = uint32(2)
    end
    properties
        Header
        Position
        Normal
        Depth
        ContactBody1
        BodyType1
        ContactBody2
        BodyType2
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'Header')
            obj.Header = val;
        end
        function set.Position(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'Position')
            obj.Position = val;
        end
        function set.Normal(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'Normal')
            obj.Normal = val;
        end
        function set.Depth(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'Depth');
            obj.Depth = double(val);
        end
        function set.ContactBody1(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'ContactBody1');
            obj.ContactBody1 = char(val);
        end
        function set.BodyType1(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'BodyType1');
            obj.BodyType1 = uint32(val);
        end
        function set.ContactBody2(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'ContactBody2');
            obj.ContactBody2 = char(val);
        end
        function set.BodyType2(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ContactInformation', 'BodyType2');
            obj.BodyType2 = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.ContactInformation.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.ContactInformation(strObj);
        end
    end
end
