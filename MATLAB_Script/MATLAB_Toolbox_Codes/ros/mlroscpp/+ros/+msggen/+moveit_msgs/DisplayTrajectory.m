
classdef DisplayTrajectory < ros.Message
    %DisplayTrajectory MATLAB implementation of moveit_msgs/DisplayTrajectory
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/DisplayTrajectory' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '41936b74e168ba754279ae683ce3f121' % The MD5 Checksum of the message definition
        PropertyList = { 'Trajectory' 'TrajectoryStart' 'ModelId' } % List of non-constant message properties
        ROSPropertyList = { 'trajectory' 'trajectory_start' 'model_id' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.RobotTrajectory' ...
            'ros.msggen.moveit_msgs.RobotState' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Trajectory
        TrajectoryStart
        ModelId
    end
    methods
        function set.Trajectory(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.moveit_msgs.RobotTrajectory.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.moveit_msgs.RobotTrajectory'};
            validateattributes(val, validClasses, validAttributes, 'DisplayTrajectory', 'Trajectory')
            obj.Trajectory = val;
        end
        function set.TrajectoryStart(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.RobotState'};
            validateattributes(val, validClasses, validAttributes, 'DisplayTrajectory', 'TrajectoryStart')
            obj.TrajectoryStart = val;
        end
        function set.ModelId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DisplayTrajectory', 'ModelId');
            obj.ModelId = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.DisplayTrajectory.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.DisplayTrajectory(strObj);
        end
    end
end
