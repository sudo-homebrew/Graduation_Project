
classdef PlanningOptions < ros.Message
    %PlanningOptions MATLAB implementation of moveit_msgs/PlanningOptions
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/PlanningOptions' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '3134e041c806c7c2ff59948db4d57835' % The MD5 Checksum of the message definition
        PropertyList = { 'PlanningSceneDiff' 'PlanOnly' 'LookAround' 'LookAroundAttempts' 'MaxSafeExecutionCost' 'Replan' 'ReplanAttempts' 'ReplanDelay' } % List of non-constant message properties
        ROSPropertyList = { 'planning_scene_diff' 'plan_only' 'look_around' 'look_around_attempts' 'max_safe_execution_cost' 'replan' 'replan_attempts' 'replan_delay' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.PlanningScene' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        PlanningSceneDiff
        PlanOnly
        LookAround
        LookAroundAttempts
        MaxSafeExecutionCost
        Replan
        ReplanAttempts
        ReplanDelay
    end
    methods
        function set.PlanningSceneDiff(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.PlanningScene'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'PlanningSceneDiff')
            obj.PlanningSceneDiff = val;
        end
        function set.PlanOnly(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'PlanOnly');
            obj.PlanOnly = logical(val);
        end
        function set.LookAround(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'LookAround');
            obj.LookAround = logical(val);
        end
        function set.LookAroundAttempts(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'LookAroundAttempts');
            obj.LookAroundAttempts = int32(val);
        end
        function set.MaxSafeExecutionCost(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'MaxSafeExecutionCost');
            obj.MaxSafeExecutionCost = double(val);
        end
        function set.Replan(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'Replan');
            obj.Replan = logical(val);
        end
        function set.ReplanAttempts(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'ReplanAttempts');
            obj.ReplanAttempts = int32(val);
        end
        function set.ReplanDelay(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlanningOptions', 'ReplanDelay');
            obj.ReplanDelay = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.PlanningOptions.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.PlanningOptions(strObj);
        end
    end
end
