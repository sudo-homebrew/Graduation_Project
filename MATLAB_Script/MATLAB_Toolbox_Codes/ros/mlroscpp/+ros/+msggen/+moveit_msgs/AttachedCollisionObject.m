
classdef AttachedCollisionObject < ros.Message
    %AttachedCollisionObject MATLAB implementation of moveit_msgs/AttachedCollisionObject
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'moveit_msgs/AttachedCollisionObject' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '30199ef516f64c8bc1edb1084ce4584e' % The MD5 Checksum of the message definition
        PropertyList = { 'Object' 'DetachPosture' 'LinkName' 'TouchLinks' 'Weight' } % List of non-constant message properties
        ROSPropertyList = { 'object' 'detach_posture' 'link_name' 'touch_links' 'weight' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.moveit_msgs.CollisionObject' ...
            'ros.msggen.trajectory_msgs.JointTrajectory' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Object
        DetachPosture
        LinkName
        TouchLinks
        Weight
    end
    methods
        function set.Object(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.moveit_msgs.CollisionObject'};
            validateattributes(val, validClasses, validAttributes, 'AttachedCollisionObject', 'Object')
            obj.Object = val;
        end
        function set.DetachPosture(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.trajectory_msgs.JointTrajectory'};
            validateattributes(val, validClasses, validAttributes, 'AttachedCollisionObject', 'DetachPosture')
            obj.DetachPosture = val;
        end
        function set.LinkName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'AttachedCollisionObject', 'LinkName');
            obj.LinkName = char(val);
        end
        function set.TouchLinks(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'AttachedCollisionObject', 'TouchLinks');
            obj.TouchLinks = cell(val);
        end
        function set.Weight(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AttachedCollisionObject', 'Weight');
            obj.Weight = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.moveit_msgs.AttachedCollisionObject.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.moveit_msgs.AttachedCollisionObject(strObj);
        end
    end
end
