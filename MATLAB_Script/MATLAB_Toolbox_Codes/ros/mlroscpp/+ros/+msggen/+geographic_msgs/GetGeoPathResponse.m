
classdef GetGeoPathResponse < ros.Message
    %GetGeoPathResponse MATLAB implementation of geographic_msgs/GetGeoPathResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'geographic_msgs/GetGeoPathResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0562f4b72e4d5b8e5fa142bd7363638c' % The MD5 Checksum of the message definition
        PropertyList = { 'Plan' 'Network' 'StartSeg' 'GoalSeg' 'Success' 'Status' 'Distance' } % List of non-constant message properties
        ROSPropertyList = { 'plan' 'network' 'start_seg' 'goal_seg' 'success' 'status' 'distance' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geographic_msgs.GeoPath' ...
            'ros.msggen.uuid_msgs.UniqueID' ...
            'ros.msggen.uuid_msgs.UniqueID' ...
            'ros.msggen.uuid_msgs.UniqueID' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Plan
        Network
        StartSeg
        GoalSeg
        Success
        Status
        Distance
    end
    methods
        function set.Plan(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geographic_msgs.GeoPath'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'Plan')
            obj.Plan = val;
        end
        function set.Network(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.uuid_msgs.UniqueID'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'Network')
            obj.Network = val;
        end
        function set.StartSeg(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.uuid_msgs.UniqueID'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'StartSeg')
            obj.StartSeg = val;
        end
        function set.GoalSeg(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.uuid_msgs.UniqueID'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'GoalSeg')
            obj.GoalSeg = val;
        end
        function set.Success(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'Success');
            obj.Success = logical(val);
        end
        function set.Status(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'Status');
            obj.Status = char(val);
        end
        function set.Distance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetGeoPathResponse', 'Distance');
            obj.Distance = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.geographic_msgs.GetGeoPathResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.geographic_msgs.GetGeoPathResponse(strObj);
        end
    end
end
