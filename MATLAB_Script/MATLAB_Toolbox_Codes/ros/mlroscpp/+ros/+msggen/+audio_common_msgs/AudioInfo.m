
classdef AudioInfo < ros.Message
    %AudioInfo MATLAB implementation of audio_common_msgs/AudioInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'audio_common_msgs/AudioInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9413d9b7029680d3b1db6ed0ae535f88' % The MD5 Checksum of the message definition
        PropertyList = { 'Channels' 'SampleRate' 'SampleFormat' 'Bitrate' 'CodingFormat' } % List of non-constant message properties
        ROSPropertyList = { 'channels' 'sample_rate' 'sample_format' 'bitrate' 'coding_format' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Channels
        SampleRate
        SampleFormat
        Bitrate
        CodingFormat
    end
    methods
        function set.Channels(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AudioInfo', 'Channels');
            obj.Channels = uint8(val);
        end
        function set.SampleRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AudioInfo', 'SampleRate');
            obj.SampleRate = uint32(val);
        end
        function set.SampleFormat(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'AudioInfo', 'SampleFormat');
            obj.SampleFormat = char(val);
        end
        function set.Bitrate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AudioInfo', 'Bitrate');
            obj.Bitrate = uint32(val);
        end
        function set.CodingFormat(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'AudioInfo', 'CodingFormat');
            obj.CodingFormat = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.audio_common_msgs.AudioInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.audio_common_msgs.AudioInfo(strObj);
        end
    end
end
