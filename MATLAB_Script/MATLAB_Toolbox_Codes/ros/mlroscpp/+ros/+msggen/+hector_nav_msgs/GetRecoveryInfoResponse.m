
classdef GetRecoveryInfoResponse < ros.Message
    %GetRecoveryInfoResponse MATLAB implementation of hector_nav_msgs/GetRecoveryInfoResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hector_nav_msgs/GetRecoveryInfoResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a93581be8e34e3c09aeafc6b9b990ad5' % The MD5 Checksum of the message definition
        PropertyList = { 'TrajectoryRadiusEntryPoseToReqPose' 'RadiusEntryPose' 'ReqPose' } % List of non-constant message properties
        ROSPropertyList = { 'trajectory_radius_entry_pose_to_req_pose' 'radius_entry_pose' 'req_pose' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.nav_msgs.Path' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        TrajectoryRadiusEntryPoseToReqPose
        RadiusEntryPose
        ReqPose
    end
    methods
        function set.TrajectoryRadiusEntryPoseToReqPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.nav_msgs.Path'};
            validateattributes(val, validClasses, validAttributes, 'GetRecoveryInfoResponse', 'TrajectoryRadiusEntryPoseToReqPose')
            obj.TrajectoryRadiusEntryPoseToReqPose = val;
        end
        function set.RadiusEntryPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'GetRecoveryInfoResponse', 'RadiusEntryPose')
            obj.RadiusEntryPose = val;
        end
        function set.ReqPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'GetRecoveryInfoResponse', 'ReqPose')
            obj.ReqPose = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hector_nav_msgs.GetRecoveryInfoResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hector_nav_msgs.GetRecoveryInfoResponse(strObj);
        end
    end
end
