
classdef Observation < ros.Message
    %Observation MATLAB implementation of bayesian_belief_networks/Observation
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'bayesian_belief_networks/Observation' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '381015522e25503885bf04a57ab55e63' % The MD5 Checksum of the message definition
        PropertyList = { 'Node' 'Evidence' } % List of non-constant message properties
        ROSPropertyList = { 'node' 'evidence' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Node
        Evidence
    end
    methods
        function set.Node(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Observation', 'Node');
            obj.Node = char(val);
        end
        function set.Evidence(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Observation', 'Evidence');
            obj.Evidence = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.bayesian_belief_networks.Observation.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.bayesian_belief_networks.Observation(strObj);
        end
    end
end
