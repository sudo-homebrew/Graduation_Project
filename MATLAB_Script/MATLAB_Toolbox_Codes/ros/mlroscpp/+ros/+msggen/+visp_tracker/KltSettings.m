
classdef KltSettings < ros.Message
    %KltSettings MATLAB implementation of visp_tracker/KltSettings
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'visp_tracker/KltSettings' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7cd8ae2f3a31d26015e8c80e88eb027a' % The MD5 Checksum of the message definition
        PropertyList = { 'MaxFeatures' 'WindowSize' 'Quality' 'MinDistance' 'Harris' 'SizeBlock' 'PyramidLvl' 'MaskBorder' } % List of non-constant message properties
        ROSPropertyList = { 'max_features' 'window_size' 'quality' 'min_distance' 'harris' 'size_block' 'pyramid_lvl' 'mask_border' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        MaxFeatures
        WindowSize
        Quality
        MinDistance
        Harris
        SizeBlock
        PyramidLvl
        MaskBorder
    end
    methods
        function set.MaxFeatures(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'MaxFeatures');
            obj.MaxFeatures = int64(val);
        end
        function set.WindowSize(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'WindowSize');
            obj.WindowSize = int64(val);
        end
        function set.Quality(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'Quality');
            obj.Quality = double(val);
        end
        function set.MinDistance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'MinDistance');
            obj.MinDistance = double(val);
        end
        function set.Harris(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'Harris');
            obj.Harris = double(val);
        end
        function set.SizeBlock(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'SizeBlock');
            obj.SizeBlock = int64(val);
        end
        function set.PyramidLvl(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'PyramidLvl');
            obj.PyramidLvl = int64(val);
        end
        function set.MaskBorder(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KltSettings', 'MaskBorder');
            obj.MaskBorder = int64(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.visp_tracker.KltSettings.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.visp_tracker.KltSettings(strObj);
        end
    end
end
