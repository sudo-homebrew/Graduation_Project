
classdef Frontier < ros.Message
    %Frontier MATLAB implementation of explorer/Frontier
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'explorer/Frontier' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2569cc4b9a2dfc8158eb5ec29aaefcf3' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'DetectedByRobot' 'RobotHomePositionX' 'RobotHomePositionY' 'XCoordinate' 'YCoordinate' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'detected_by_robot' 'robot_home_position_x' 'robot_home_position_y' 'x_coordinate' 'y_coordinate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Id
        DetectedByRobot
        RobotHomePositionX
        RobotHomePositionY
        XCoordinate
        YCoordinate
    end
    methods
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'Id');
            obj.Id = int64(val);
        end
        function set.DetectedByRobot(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'DetectedByRobot');
            obj.DetectedByRobot = int64(val);
        end
        function set.RobotHomePositionX(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'RobotHomePositionX');
            obj.RobotHomePositionX = double(val);
        end
        function set.RobotHomePositionY(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'RobotHomePositionY');
            obj.RobotHomePositionY = double(val);
        end
        function set.XCoordinate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'XCoordinate');
            obj.XCoordinate = double(val);
        end
        function set.YCoordinate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Frontier', 'YCoordinate');
            obj.YCoordinate = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.explorer.Frontier.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.explorer.Frontier(strObj);
        end
    end
end
