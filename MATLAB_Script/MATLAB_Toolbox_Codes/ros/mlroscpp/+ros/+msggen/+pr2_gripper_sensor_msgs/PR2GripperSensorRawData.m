
classdef PR2GripperSensorRawData < ros.Message
    %PR2GripperSensorRawData MATLAB implementation of pr2_gripper_sensor_msgs/PR2GripperSensorRawData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_gripper_sensor_msgs/PR2GripperSensorRawData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '696a1f2e6969deb0bc6998636ae1b17e' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'LeftFingerPadForce' 'RightFingerPadForce' 'LeftFingerPadForceFiltered' 'RightFingerPadForceFiltered' 'LeftFingerPadForces' 'RightFingerPadForces' 'LeftFingerPadForcesFiltered' 'RightFingerPadForcesFiltered' 'AccXRaw' 'AccYRaw' 'AccZRaw' 'AccXFiltered' 'AccYFiltered' 'AccZFiltered' 'LeftContact' 'RightContact' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'left_finger_pad_force' 'right_finger_pad_force' 'left_finger_pad_force_filtered' 'right_finger_pad_force_filtered' 'left_finger_pad_forces' 'right_finger_pad_forces' 'left_finger_pad_forces_filtered' 'right_finger_pad_forces_filtered' 'acc_x_raw' 'acc_y_raw' 'acc_z_raw' 'acc_x_filtered' 'acc_y_filtered' 'acc_z_filtered' 'left_contact' 'right_contact' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Stamp
        LeftFingerPadForce
        RightFingerPadForce
        LeftFingerPadForceFiltered
        RightFingerPadForceFiltered
        LeftFingerPadForces
        RightFingerPadForces
        LeftFingerPadForcesFiltered
        RightFingerPadForcesFiltered
        AccXRaw
        AccYRaw
        AccZRaw
        AccXFiltered
        AccYFiltered
        AccZFiltered
        LeftContact
        RightContact
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'Stamp')
            obj.Stamp = val;
        end
        function set.LeftFingerPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'LeftFingerPadForce');
            obj.LeftFingerPadForce = double(val);
        end
        function set.RightFingerPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'RightFingerPadForce');
            obj.RightFingerPadForce = double(val);
        end
        function set.LeftFingerPadForceFiltered(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'LeftFingerPadForceFiltered');
            obj.LeftFingerPadForceFiltered = double(val);
        end
        function set.RightFingerPadForceFiltered(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'RightFingerPadForceFiltered');
            obj.RightFingerPadForceFiltered = double(val);
        end
        function set.LeftFingerPadForces(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 22};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'LeftFingerPadForces');
            obj.LeftFingerPadForces = double(val);
        end
        function set.RightFingerPadForces(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 22};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'RightFingerPadForces');
            obj.RightFingerPadForces = double(val);
        end
        function set.LeftFingerPadForcesFiltered(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 22};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'LeftFingerPadForcesFiltered');
            obj.LeftFingerPadForcesFiltered = double(val);
        end
        function set.RightFingerPadForcesFiltered(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 22};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'RightFingerPadForcesFiltered');
            obj.RightFingerPadForcesFiltered = double(val);
        end
        function set.AccXRaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccXRaw');
            obj.AccXRaw = double(val);
        end
        function set.AccYRaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccYRaw');
            obj.AccYRaw = double(val);
        end
        function set.AccZRaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccZRaw');
            obj.AccZRaw = double(val);
        end
        function set.AccXFiltered(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccXFiltered');
            obj.AccXFiltered = double(val);
        end
        function set.AccYFiltered(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccYFiltered');
            obj.AccYFiltered = double(val);
        end
        function set.AccZFiltered(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'AccZFiltered');
            obj.AccZFiltered = double(val);
        end
        function set.LeftContact(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'LeftContact');
            obj.LeftContact = logical(val);
        end
        function set.RightContact(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSensorRawData', 'RightContact');
            obj.RightContact = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRawData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRawData(strObj);
        end
    end
end
