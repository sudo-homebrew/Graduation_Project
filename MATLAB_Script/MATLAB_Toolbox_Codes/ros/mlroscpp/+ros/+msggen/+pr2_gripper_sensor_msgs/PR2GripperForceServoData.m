
classdef PR2GripperForceServoData < ros.Message
    %PR2GripperForceServoData MATLAB implementation of pr2_gripper_sensor_msgs/PR2GripperForceServoData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_gripper_sensor_msgs/PR2GripperForceServoData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd3960eb2ecb6a9b4c27065619e47fd06' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'Rtstate' 'LeftFingertipPadForce' 'RightFingertipPadForce' 'JointEffort' 'ForceAchieved' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'rtstate' 'left_fingertip_pad_force' 'right_fingertip_pad_force' 'joint_effort' 'force_achieved' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            'ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRTState' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Stamp
        Rtstate
        LeftFingertipPadForce
        RightFingertipPadForce
        JointEffort
        ForceAchieved
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'Stamp')
            obj.Stamp = val;
        end
        function set.Rtstate(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRTState'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'Rtstate')
            obj.Rtstate = val;
        end
        function set.LeftFingertipPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'LeftFingertipPadForce');
            obj.LeftFingertipPadForce = double(val);
        end
        function set.RightFingertipPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'RightFingertipPadForce');
            obj.RightFingertipPadForce = double(val);
        end
        function set.JointEffort(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'JointEffort');
            obj.JointEffort = double(val);
        end
        function set.ForceAchieved(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperForceServoData', 'ForceAchieved');
            obj.ForceAchieved = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperForceServoData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperForceServoData(strObj);
        end
    end
end
