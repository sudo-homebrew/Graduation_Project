
classdef PR2GripperSlipServoData < ros.Message
    %PR2GripperSlipServoData MATLAB implementation of pr2_gripper_sensor_msgs/PR2GripperSlipServoData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_gripper_sensor_msgs/PR2GripperSlipServoData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a49728a2e0c40706b3c9b74046f006aa' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'Rtstate' 'Deformation' 'LeftFingertipPadForce' 'RightFingertipPadForce' 'JointEffort' 'SlipDetected' 'DeformationLimitReached' 'FingertipForceLimitReached' 'GripperEmpty' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'rtstate' 'deformation' 'left_fingertip_pad_force' 'right_fingertip_pad_force' 'joint_effort' 'slip_detected' 'deformation_limit_reached' 'fingertip_force_limit_reached' 'gripper_empty' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            'ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRTState' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Stamp
        Rtstate
        Deformation
        LeftFingertipPadForce
        RightFingertipPadForce
        JointEffort
        SlipDetected
        DeformationLimitReached
        FingertipForceLimitReached
        GripperEmpty
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'Stamp')
            obj.Stamp = val;
        end
        function set.Rtstate(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSensorRTState'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'Rtstate')
            obj.Rtstate = val;
        end
        function set.Deformation(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'Deformation');
            obj.Deformation = double(val);
        end
        function set.LeftFingertipPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'LeftFingertipPadForce');
            obj.LeftFingertipPadForce = double(val);
        end
        function set.RightFingertipPadForce(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'RightFingertipPadForce');
            obj.RightFingertipPadForce = double(val);
        end
        function set.JointEffort(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'JointEffort');
            obj.JointEffort = double(val);
        end
        function set.SlipDetected(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'SlipDetected');
            obj.SlipDetected = logical(val);
        end
        function set.DeformationLimitReached(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'DeformationLimitReached');
            obj.DeformationLimitReached = logical(val);
        end
        function set.FingertipForceLimitReached(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'FingertipForceLimitReached');
            obj.FingertipForceLimitReached = logical(val);
        end
        function set.GripperEmpty(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PR2GripperSlipServoData', 'GripperEmpty');
            obj.GripperEmpty = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSlipServoData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_gripper_sensor_msgs.PR2GripperSlipServoData(strObj);
        end
    end
end
