
classdef RawLidarCal < ros.Message
    %RawLidarCal MATLAB implementation of multisense_ros/RawLidarCal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'multisense_ros/RawLidarCal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a40a2eda974181d5f5f21ff840e3a6ff' % The MD5 Checksum of the message definition
        PropertyList = { 'LaserToSpindle' 'CameraToSpindleFixed' } % List of non-constant message properties
        ROSPropertyList = { 'laserToSpindle' 'cameraToSpindleFixed' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LaserToSpindle
        CameraToSpindleFixed
    end
    methods
        function set.LaserToSpindle(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 16};
            validateattributes(val, validClasses, validAttributes, 'RawLidarCal', 'LaserToSpindle');
            obj.LaserToSpindle = single(val);
        end
        function set.CameraToSpindleFixed(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 16};
            validateattributes(val, validClasses, validAttributes, 'RawLidarCal', 'CameraToSpindleFixed');
            obj.CameraToSpindleFixed = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.multisense_ros.RawLidarCal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.multisense_ros.RawLidarCal(strObj);
        end
    end
end
