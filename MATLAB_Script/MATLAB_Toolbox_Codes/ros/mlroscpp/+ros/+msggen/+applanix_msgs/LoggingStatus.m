
classdef LoggingStatus < ros.Message
    %LoggingStatus MATLAB implementation of applanix_msgs/LoggingStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/LoggingStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'bc37af667689cff6ff70d20f8053fa45' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'DiskKbRemaining' 'DiskKbLogged' 'DiskTimeRemaining' 'DiskKbTotal' 'State' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'disk_kb_remaining' 'disk_kb_logged' 'disk_time_remaining' 'disk_kb_total' 'state' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        STATESTANDBY = uint8(0)
        STATELOGGING = uint8(1)
        STATEBUFFERING = uint8(2)
        STATEINVALID = uint8(255)
    end
    properties
        Td
        DiskKbRemaining
        DiskKbLogged
        DiskTimeRemaining
        DiskKbTotal
        State
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'Td')
            obj.Td = val;
        end
        function set.DiskKbRemaining(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'DiskKbRemaining');
            obj.DiskKbRemaining = uint32(val);
        end
        function set.DiskKbLogged(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'DiskKbLogged');
            obj.DiskKbLogged = uint32(val);
        end
        function set.DiskTimeRemaining(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'DiskTimeRemaining');
            obj.DiskTimeRemaining = uint32(val);
        end
        function set.DiskKbTotal(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'DiskKbTotal');
            obj.DiskKbTotal = uint32(val);
        end
        function set.State(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LoggingStatus', 'State');
            obj.State = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.LoggingStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.LoggingStatus(strObj);
        end
    end
end
