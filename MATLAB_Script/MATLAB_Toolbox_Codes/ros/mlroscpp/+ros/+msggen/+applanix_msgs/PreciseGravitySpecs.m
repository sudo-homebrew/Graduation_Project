
classdef PreciseGravitySpecs < ros.Message
    %PreciseGravitySpecs MATLAB implementation of applanix_msgs/PreciseGravitySpecs
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/PreciseGravitySpecs' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '60a1e48489b4ff46feb6027343f9931a' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'GravityMagnitude' 'NorthDeflection' 'EastDeflection' 'LatitudeOfValidity' 'LongitudeOfValidity' 'AltitudeOfValidity' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'gravity_magnitude' 'north_deflection' 'east_deflection' 'latitude_of_validity' 'longitude_of_validity' 'altitude_of_validity' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Transaction
        GravityMagnitude
        NorthDeflection
        EastDeflection
        LatitudeOfValidity
        LongitudeOfValidity
        AltitudeOfValidity
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.GravityMagnitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'GravityMagnitude');
            obj.GravityMagnitude = double(val);
        end
        function set.NorthDeflection(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'NorthDeflection');
            obj.NorthDeflection = double(val);
        end
        function set.EastDeflection(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'EastDeflection');
            obj.EastDeflection = double(val);
        end
        function set.LatitudeOfValidity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'LatitudeOfValidity');
            obj.LatitudeOfValidity = double(val);
        end
        function set.LongitudeOfValidity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'LongitudeOfValidity');
            obj.LongitudeOfValidity = double(val);
        end
        function set.AltitudeOfValidity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PreciseGravitySpecs', 'AltitudeOfValidity');
            obj.AltitudeOfValidity = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.PreciseGravitySpecs.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.PreciseGravitySpecs(strObj);
        end
    end
end
