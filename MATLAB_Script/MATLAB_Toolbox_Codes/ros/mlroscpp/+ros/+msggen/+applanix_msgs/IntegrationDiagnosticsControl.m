
classdef IntegrationDiagnosticsControl < ros.Message
    %IntegrationDiagnosticsControl MATLAB implementation of applanix_msgs/IntegrationDiagnosticsControl
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/IntegrationDiagnosticsControl' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'c9348736c3ef1fae7afe188eacd6d167' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'OutputData' 'UserRoll' 'UserPitch' 'UserHeading' 'Reserved' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'output_data' 'user_roll' 'user_pitch' 'user_heading' 'reserved' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        OUTPUTIMUFRAME = uint8(0)
        OUTPUTUSERPARAM = uint8(1)
    end
    properties
        Transaction
        OutputData
        UserRoll
        UserPitch
        UserHeading
        Reserved
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.OutputData(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'OutputData');
            obj.OutputData = uint8(val);
        end
        function set.UserRoll(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'UserRoll');
            obj.UserRoll = single(val);
        end
        function set.UserPitch(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'UserPitch');
            obj.UserPitch = single(val);
        end
        function set.UserHeading(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'UserHeading');
            obj.UserHeading = single(val);
        end
        function set.Reserved(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 4};
            validateattributes(val, validClasses, validAttributes, 'IntegrationDiagnosticsControl', 'Reserved');
            obj.Reserved = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.IntegrationDiagnosticsControl.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.IntegrationDiagnosticsControl(strObj);
        end
    end
end
