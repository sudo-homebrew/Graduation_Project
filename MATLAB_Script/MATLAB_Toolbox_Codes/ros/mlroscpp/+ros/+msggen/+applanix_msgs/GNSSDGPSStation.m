
classdef GNSSDGPSStation < ros.Message
    %GNSSDGPSStation MATLAB implementation of applanix_msgs/GNSSDGPSStation
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/GNSSDGPSStation' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '1f46e4339250717d9fe1a568f6172d8b' % The MD5 Checksum of the message definition
        PropertyList = { 'Flags' 'Id' 'Frequency' 'Health' 'Distance' 'Range' 'UscgIndex' 'Seconds' 'ModulationRate' } % List of non-constant message properties
        ROSPropertyList = { 'flags' 'id' 'frequency' 'health' 'distance' 'range' 'uscg_index' 'seconds' 'modulation_rate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        FLAGSSATELLITE = uint8(1)
        FLAGSSTATIONPROVIDINGCORRECTIONS = uint8(2)
        FLAGSSTATIONUSEDASRTCMSOURCE = uint8(4)
        FLAGSOMNISTARSTATIONS = uint8(8)
        HEALTHNORMAL = uint8(0)
        HEALTHNOTMONITORED = uint8(1)
        HEALTHNOINFOAVAILABLE = uint8(2)
        HEALTHDONOTUSE = uint8(3)
        RATE25BPS = uint8(0)
        RATE50BPS = uint8(1)
        RATE100BPS = uint8(2)
        RATE200BPS = uint8(3)
        RATE600BPS = uint8(4)
        RATE1200BPS = uint8(5)
        RATE2400BPS = uint8(6)
        RATE4800BPS = uint8(7)
    end
    properties
        Flags
        Id
        Frequency
        Health
        Distance
        Range
        UscgIndex
        Seconds
        ModulationRate
    end
    methods
        function set.Flags(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Flags');
            obj.Flags = uint8(val);
        end
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Id');
            obj.Id = uint16(val);
        end
        function set.Frequency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Frequency');
            obj.Frequency = uint16(val);
        end
        function set.Health(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Health');
            obj.Health = uint8(val);
        end
        function set.Distance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Distance');
            obj.Distance = single(val);
        end
        function set.Range(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Range');
            obj.Range = single(val);
        end
        function set.UscgIndex(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'UscgIndex');
            obj.UscgIndex = uint8(val);
        end
        function set.Seconds(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'Seconds');
            obj.Seconds = uint32(val);
        end
        function set.ModulationRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSDGPSStation', 'ModulationRate');
            obj.ModulationRate = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.GNSSDGPSStation.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.GNSSDGPSStation(strObj);
        end
    end
end
