
classdef NMEAMessageSelect < ros.Message
    %NMEAMessageSelect MATLAB implementation of applanix_msgs/NMEAMessageSelect
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/NMEAMessageSelect' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd988d97031c9db73713ce27fde744cff' % The MD5 Checksum of the message definition
        PropertyList = { 'Ports' 'Transaction' 'Reserved' 'Talker' 'PortsCount' } % List of non-constant message properties
        ROSPropertyList = { 'ports' 'transaction' 'reserved' 'talker' 'ports_count' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.COMPortMessages' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        TALKERIN = uint8(0)
        TALKERGP = uint8(1)
    end
    properties
        Ports
        Transaction
        Reserved
        Talker
        PortsCount
    end
    methods
        function set.Ports(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.applanix_msgs.COMPortMessages.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.applanix_msgs.COMPortMessages'};
            validateattributes(val, validClasses, validAttributes, 'NMEAMessageSelect', 'Ports')
            obj.Ports = val;
        end
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NMEAMessageSelect', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.Reserved(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 9};
            validateattributes(val, validClasses, validAttributes, 'NMEAMessageSelect', 'Reserved');
            obj.Reserved = uint8(val);
        end
        function set.Talker(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NMEAMessageSelect', 'Talker');
            obj.Talker = uint8(val);
        end
        function set.PortsCount(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NMEAMessageSelect', 'PortsCount');
            obj.PortsCount = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.NMEAMessageSelect.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.NMEAMessageSelect(strObj);
        end
    end
end
