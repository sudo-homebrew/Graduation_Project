
classdef RawData < ros.Message
    %RawData MATLAB implementation of applanix_msgs/RawData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/RawData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '4422a864e3d230d8a0aeaca79366f060' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'ReceiverType' 'Reserved' 'Message' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'receiver_type' 'reserved' 'message' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Td
        ReceiverType
        Reserved
        Message
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'RawData', 'Td')
            obj.Td = val;
        end
        function set.ReceiverType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RawData', 'ReceiverType');
            obj.ReceiverType = uint16(val);
        end
        function set.Reserved(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RawData', 'Reserved');
            obj.Reserved = uint32(val);
        end
        function set.Message(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = uint8.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'RawData', 'Message');
            obj.Message = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.RawData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.RawData(strObj);
        end
    end
end
