
classdef BaseGNSSModemStatus < ros.Message
    %BaseGNSSModemStatus MATLAB implementation of applanix_msgs/BaseGNSSModemStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/BaseGNSSModemStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '00919adef7a8ce91b9d8181ce0e31f4b' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'ModemResponse' 'ConnectionStatus' 'RedialsPerDisconnect' 'MaxRedialsPerDisconnect' 'NumDisconnects' 'DataGapLength' 'MaxDataGapLength' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'modem_response' 'connection_status' 'redials_per_disconnect' 'max_redials_per_disconnect' 'num_disconnects' 'data_gap_length' 'max_data_gap_length' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Td
        ModemResponse
        ConnectionStatus
        RedialsPerDisconnect
        MaxRedialsPerDisconnect
        NumDisconnects
        DataGapLength
        MaxDataGapLength
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'Td')
            obj.Td = val;
        end
        function set.ModemResponse(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 16};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'ModemResponse');
            obj.ModemResponse = uint8(val);
        end
        function set.ConnectionStatus(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 48};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'ConnectionStatus');
            obj.ConnectionStatus = uint8(val);
        end
        function set.RedialsPerDisconnect(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'RedialsPerDisconnect');
            obj.RedialsPerDisconnect = uint32(val);
        end
        function set.MaxRedialsPerDisconnect(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'MaxRedialsPerDisconnect');
            obj.MaxRedialsPerDisconnect = uint32(val);
        end
        function set.NumDisconnects(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'NumDisconnects');
            obj.NumDisconnects = uint32(val);
        end
        function set.DataGapLength(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'DataGapLength');
            obj.DataGapLength = uint32(val);
        end
        function set.MaxDataGapLength(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSModemStatus', 'MaxDataGapLength');
            obj.MaxDataGapLength = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.BaseGNSSModemStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.BaseGNSSModemStatus(strObj);
        end
    end
end
