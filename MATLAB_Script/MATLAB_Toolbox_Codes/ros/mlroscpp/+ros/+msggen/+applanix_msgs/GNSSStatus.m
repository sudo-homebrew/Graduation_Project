
classdef GNSSStatus < ros.Message
    %GNSSStatus MATLAB implementation of applanix_msgs/GNSSStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/GNSSStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '025a8154ac59effa20d8e6dc5c1ba784' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'Channels' 'SolutionStatus' 'ChannelsCount' 'Reserved' 'Hdop' 'Vdop' 'DgpsLatency' 'DgpsReferenceId' 'GpsWeek' 'GpsTimeOffset' 'GnssLatency' 'GeoidalSeparation' 'GnssType' 'GnssStatus' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'channels' 'solution_status' 'channels_count' 'reserved' 'hdop' 'vdop' 'dgps_latency' 'dgps_reference_id' 'gps_week' 'gps_time_offset' 'gnss_latency' 'geoidal_separation' 'gnss_type' 'gnss_status' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            'ros.msggen.applanix_msgs.GNSSChannelStatus' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        SOLUTIONUNKNOWN = uint8(255)
        SOLUTIONNODATA = uint8(0)
        SOLUTIONHORIZONTALCA = uint8(1)
        SOLUTION3DCA = uint8(2)
        SOLUTIONHORIZONTALDGPS = uint8(3)
        SOLUTION3DDGPS = uint8(4)
        SOLUTIONFLOATRTK = uint8(5)
        SOLUTIONWIDELANERTK = uint8(6)
        SOLUTIONNARROWLANERTK = uint8(7)
        SOLUTIONPCODE = uint8(8)
        SOLUTIONOMNISTARHP = uint8(9)
        SOLUTIONOMNISTARXP = uint8(10)
        SOLUTIONOMNISTARVBS = uint8(11)
        TYPENONE = uint16(0)
        TYPETRIMBLEBD960 = uint16(16)
    end
    properties
        Td
        Channels
        SolutionStatus
        ChannelsCount
        Reserved
        Hdop
        Vdop
        DgpsLatency
        DgpsReferenceId
        GpsWeek
        GpsTimeOffset
        GnssLatency
        GeoidalSeparation
        GnssType
        GnssStatus
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'Td')
            obj.Td = val;
        end
        function set.Channels(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.applanix_msgs.GNSSChannelStatus.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.applanix_msgs.GNSSChannelStatus'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'Channels')
            obj.Channels = val;
        end
        function set.SolutionStatus(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'SolutionStatus');
            obj.SolutionStatus = uint8(val);
        end
        function set.ChannelsCount(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'ChannelsCount');
            obj.ChannelsCount = uint8(val);
        end
        function set.Reserved(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'Reserved');
            obj.Reserved = uint16(val);
        end
        function set.Hdop(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'Hdop');
            obj.Hdop = single(val);
        end
        function set.Vdop(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'Vdop');
            obj.Vdop = single(val);
        end
        function set.DgpsLatency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'DgpsLatency');
            obj.DgpsLatency = single(val);
        end
        function set.DgpsReferenceId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'DgpsReferenceId');
            obj.DgpsReferenceId = uint16(val);
        end
        function set.GpsWeek(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GpsWeek');
            obj.GpsWeek = uint32(val);
        end
        function set.GpsTimeOffset(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GpsTimeOffset');
            obj.GpsTimeOffset = double(val);
        end
        function set.GnssLatency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GnssLatency');
            obj.GnssLatency = single(val);
        end
        function set.GeoidalSeparation(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GeoidalSeparation');
            obj.GeoidalSeparation = single(val);
        end
        function set.GnssType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GnssType');
            obj.GnssType = uint16(val);
        end
        function set.GnssStatus(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GNSSStatus', 'GnssStatus');
            obj.GnssStatus = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.GNSSStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.GNSSStatus(strObj);
        end
    end
end
