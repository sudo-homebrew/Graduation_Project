
classdef BaseGNSSSetup < ros.Message
    %BaseGNSSSetup MATLAB implementation of applanix_msgs/BaseGNSSSetup
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/BaseGNSSSetup' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd1009e68ee977cbe61164b28eb218883' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'BaseGnssInputType' 'LineControl' 'ModemControl' 'ConnectionControl' 'PhoneNumber' 'NumRedials' 'ModemCommandString' 'ModemInitString' 'DataTimeoutLength' 'Datum' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'base_gnss_input_type' 'line_control' 'modem_control' 'connection_control' 'phone_number' 'num_redials' 'modem_command_string' 'modem_init_string' 'data_timeout_length' 'datum' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        TYPENONE = uint16(0)
        TYPERTCM1 = uint16(1)
        TYPERTCM3 = uint16(2)
        TYPECMR = uint16(3)
        DATUMWGS84 = uint16(0)
        DATUMNAD83 = uint16(1)
    end
    properties
        Transaction
        BaseGnssInputType
        LineControl
        ModemControl
        ConnectionControl
        PhoneNumber
        NumRedials
        ModemCommandString
        ModemInitString
        DataTimeoutLength
        Datum
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.BaseGnssInputType(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'BaseGnssInputType');
            obj.BaseGnssInputType = uint16(val);
        end
        function set.LineControl(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'LineControl');
            obj.LineControl = uint8(val);
        end
        function set.ModemControl(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'ModemControl');
            obj.ModemControl = uint8(val);
        end
        function set.ConnectionControl(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'ConnectionControl');
            obj.ConnectionControl = uint8(val);
        end
        function set.PhoneNumber(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 32};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'PhoneNumber');
            obj.PhoneNumber = uint8(val);
        end
        function set.NumRedials(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'NumRedials');
            obj.NumRedials = uint8(val);
        end
        function set.ModemCommandString(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 64};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'ModemCommandString');
            obj.ModemCommandString = uint8(val);
        end
        function set.ModemInitString(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 128};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'ModemInitString');
            obj.ModemInitString = uint8(val);
        end
        function set.DataTimeoutLength(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'DataTimeoutLength');
            obj.DataTimeoutLength = uint16(val);
        end
        function set.Datum(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BaseGNSSSetup', 'Datum');
            obj.Datum = uint16(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.BaseGNSSSetup.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.BaseGNSSSetup(strObj);
        end
    end
end
