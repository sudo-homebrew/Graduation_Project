
classdef Ack < ros.Message
    %Ack MATLAB implementation of applanix_msgs/Ack
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/Ack' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f84607dc6beaf1cb6772d23af7221bdf' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'Id' 'ResponseCode' 'ParamsStatus' 'ErrorParameterName' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'id' 'response_code' 'params_status' 'error_parameter_name' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        RESPONSENOTAPPLICABLE = uint16(0)
        RESPONSEACCEPTED = uint16(1)
        RESPONSEACCEPTEDTOOLONG = uint16(2)
        RESPONSEACCEPTEDTOOSHORT = uint16(3)
        RESPONSEPARAMERROR = uint16(4)
        RESPONSENOTAPPLICABLEINCURRENTSTATE = uint16(5)
        RESPONSEDATANOTAVAILABLE = uint16(6)
        RESPONSEMESSAGESTARTERROR = uint16(7)
        RESPONSEMESSAGEENDERROR = uint16(8)
        RESPONSEBYTECOUNTERROR = uint16(9)
        RESPONSECHECKSUMERROR = uint16(10)
        PARAMSNOCHANGE = uint8(0)
        PARAMSCHANGE = uint8(1)
    end
    properties
        Transaction
        Id
        ResponseCode
        ParamsStatus
        ErrorParameterName
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Ack', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Ack', 'Id');
            obj.Id = uint16(val);
        end
        function set.ResponseCode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Ack', 'ResponseCode');
            obj.ResponseCode = uint16(val);
        end
        function set.ParamsStatus(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Ack', 'ParamsStatus');
            obj.ParamsStatus = uint8(val);
        end
        function set.ErrorParameterName(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 32};
            validateattributes(val, validClasses, validAttributes, 'Ack', 'ErrorParameterName');
            obj.ErrorParameterName = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.Ack.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.Ack(strObj);
        end
    end
end
