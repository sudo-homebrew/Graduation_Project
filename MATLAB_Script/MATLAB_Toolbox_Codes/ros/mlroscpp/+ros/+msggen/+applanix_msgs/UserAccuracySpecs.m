
classdef UserAccuracySpecs < ros.Message
    %UserAccuracySpecs MATLAB implementation of applanix_msgs/UserAccuracySpecs
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/UserAccuracySpecs' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'dc31cc9bf148c7ed0c8acd0efc6508d0' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'UserAltitudeAccuracy' 'UserHeadingAccuracy' 'UserPositionAccuracy' 'UserVelocityAccuracy' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'user_altitude_accuracy' 'user_heading_accuracy' 'user_position_accuracy' 'user_velocity_accuracy' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Transaction
        UserAltitudeAccuracy
        UserHeadingAccuracy
        UserPositionAccuracy
        UserVelocityAccuracy
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'UserAccuracySpecs', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.UserAltitudeAccuracy(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'UserAccuracySpecs', 'UserAltitudeAccuracy');
            obj.UserAltitudeAccuracy = single(val);
        end
        function set.UserHeadingAccuracy(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'UserAccuracySpecs', 'UserHeadingAccuracy');
            obj.UserHeadingAccuracy = single(val);
        end
        function set.UserPositionAccuracy(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'UserAccuracySpecs', 'UserPositionAccuracy');
            obj.UserPositionAccuracy = single(val);
        end
        function set.UserVelocityAccuracy(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'UserAccuracySpecs', 'UserVelocityAccuracy');
            obj.UserVelocityAccuracy = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.UserAccuracySpecs.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.UserAccuracySpecs(strObj);
        end
    end
end
