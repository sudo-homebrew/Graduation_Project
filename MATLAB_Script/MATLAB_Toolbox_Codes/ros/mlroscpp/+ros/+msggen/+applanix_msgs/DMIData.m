
classdef DMIData < ros.Message
    %DMIData MATLAB implementation of applanix_msgs/DMIData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/DMIData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2feef48ec7606bd895e47a3ec03e1841' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'SignedDistance' 'UnsignedDistance' 'ScaleFactor' 'Status' 'Type' 'Rate' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'signed_distance' 'unsigned_distance' 'scale_factor' 'status' 'type' 'rate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        STATUSINVALID = uint8(0)
        STATUSVALID = uint8(1)
        STATUSSCALEFACTORCHANGE = uint8(2)
        TYPENONE = uint8(0)
        TYPEPULSEDIR = uint8(1)
        TYPEQUADRATURE = uint8(2)
        RATE50HZ = uint8(0)
        RATE100HZ = uint8(1)
        RATE200HZ = uint8(2)
        RATE400HZ = uint8(3)
        RATE125HZ = uint8(4)
    end
    properties
        Td
        SignedDistance
        UnsignedDistance
        ScaleFactor
        Status
        Type
        Rate
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'Td')
            obj.Td = val;
        end
        function set.SignedDistance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'SignedDistance');
            obj.SignedDistance = double(val);
        end
        function set.UnsignedDistance(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'UnsignedDistance');
            obj.UnsignedDistance = double(val);
        end
        function set.ScaleFactor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'ScaleFactor');
            obj.ScaleFactor = uint16(val);
        end
        function set.Status(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'Status');
            obj.Status = uint8(val);
        end
        function set.Type(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'Type');
            obj.Type = uint8(val);
        end
        function set.Rate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DMIData', 'Rate');
            obj.Rate = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.DMIData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.DMIData(strObj);
        end
    end
end
