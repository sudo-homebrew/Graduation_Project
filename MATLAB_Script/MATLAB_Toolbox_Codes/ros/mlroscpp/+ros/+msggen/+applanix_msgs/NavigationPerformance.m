
classdef NavigationPerformance < ros.Message
    %NavigationPerformance MATLAB implementation of applanix_msgs/NavigationPerformance
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/NavigationPerformance' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '87142b322e1d6228f4c064ddcf1697bc' % The MD5 Checksum of the message definition
        PropertyList = { 'Td' 'NorthPosRmsErr' 'EastPosRmsErr' 'DownPosRmsErr' 'NorthVelRmsErr' 'EastVelRmsErr' 'DownVelRmsErr' 'RollRmsErr' 'PitchRmsErr' 'HeadingRmsErr' 'ErrEllipsoidSemiMajor' 'ErrEllipsoidSemiMinor' 'ErrEllipsoidOrientation' } % List of non-constant message properties
        ROSPropertyList = { 'td' 'north_pos_rms_err' 'east_pos_rms_err' 'down_pos_rms_err' 'north_vel_rms_err' 'east_vel_rms_err' 'down_vel_rms_err' 'roll_rms_err' 'pitch_rms_err' 'heading_rms_err' 'err_ellipsoid_semi_major' 'err_ellipsoid_semi_minor' 'err_ellipsoid_orientation' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.applanix_msgs.TimeDistance' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Td
        NorthPosRmsErr
        EastPosRmsErr
        DownPosRmsErr
        NorthVelRmsErr
        EastVelRmsErr
        DownVelRmsErr
        RollRmsErr
        PitchRmsErr
        HeadingRmsErr
        ErrEllipsoidSemiMajor
        ErrEllipsoidSemiMinor
        ErrEllipsoidOrientation
    end
    methods
        function set.Td(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.applanix_msgs.TimeDistance'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'Td')
            obj.Td = val;
        end
        function set.NorthPosRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'NorthPosRmsErr');
            obj.NorthPosRmsErr = single(val);
        end
        function set.EastPosRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'EastPosRmsErr');
            obj.EastPosRmsErr = single(val);
        end
        function set.DownPosRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'DownPosRmsErr');
            obj.DownPosRmsErr = single(val);
        end
        function set.NorthVelRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'NorthVelRmsErr');
            obj.NorthVelRmsErr = single(val);
        end
        function set.EastVelRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'EastVelRmsErr');
            obj.EastVelRmsErr = single(val);
        end
        function set.DownVelRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'DownVelRmsErr');
            obj.DownVelRmsErr = single(val);
        end
        function set.RollRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'RollRmsErr');
            obj.RollRmsErr = single(val);
        end
        function set.PitchRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'PitchRmsErr');
            obj.PitchRmsErr = single(val);
        end
        function set.HeadingRmsErr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'HeadingRmsErr');
            obj.HeadingRmsErr = single(val);
        end
        function set.ErrEllipsoidSemiMajor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'ErrEllipsoidSemiMajor');
            obj.ErrEllipsoidSemiMajor = single(val);
        end
        function set.ErrEllipsoidSemiMinor(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'ErrEllipsoidSemiMinor');
            obj.ErrEllipsoidSemiMinor = single(val);
        end
        function set.ErrEllipsoidOrientation(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'NavigationPerformance', 'ErrEllipsoidOrientation');
            obj.ErrEllipsoidOrientation = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.NavigationPerformance.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.NavigationPerformance(strObj);
        end
    end
end
