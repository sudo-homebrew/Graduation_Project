
classdef DGPSSourceControl < ros.Message
    %DGPSSourceControl MATLAB implementation of applanix_msgs/DGPSSourceControl
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'applanix_msgs/DGPSSourceControl' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '647a618f1252a3c18cb54ba603253af8' % The MD5 Checksum of the message definition
        PropertyList = { 'Transaction' 'DgpsSourceMode' 'BeaconAcquisitionMode' 'BeaconChannel0Frequency' 'BeaconChannel1Frequency' 'SatelliteId' 'SatelliteBitrate' 'SatelliteFrequency' 'RequestDatabaseSource' 'LandstarCorrectionSource' 'OmnistarActivationCode' } % List of non-constant message properties
        ROSPropertyList = { 'transaction' 'dgps_source_mode' 'beacon_acquisition_mode' 'beacon_channel_0_frequency' 'beacon_channel_1_frequency' 'satellite_id' 'satellite_bitrate' 'satellite_frequency' 'request_database_source' 'landstar_correction_source' 'omnistar_activation_code' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Transaction
        DgpsSourceMode
        BeaconAcquisitionMode
        BeaconChannel0Frequency
        BeaconChannel1Frequency
        SatelliteId
        SatelliteBitrate
        SatelliteFrequency
        RequestDatabaseSource
        LandstarCorrectionSource
        OmnistarActivationCode
    end
    methods
        function set.Transaction(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'Transaction');
            obj.Transaction = uint16(val);
        end
        function set.DgpsSourceMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'DgpsSourceMode');
            obj.DgpsSourceMode = uint8(val);
        end
        function set.BeaconAcquisitionMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'BeaconAcquisitionMode');
            obj.BeaconAcquisitionMode = uint8(val);
        end
        function set.BeaconChannel0Frequency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'BeaconChannel0Frequency');
            obj.BeaconChannel0Frequency = uint16(val);
        end
        function set.BeaconChannel1Frequency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'BeaconChannel1Frequency');
            obj.BeaconChannel1Frequency = uint16(val);
        end
        function set.SatelliteId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'SatelliteId');
            obj.SatelliteId = uint8(val);
        end
        function set.SatelliteBitrate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'SatelliteBitrate');
            obj.SatelliteBitrate = uint16(val);
        end
        function set.SatelliteFrequency(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'SatelliteFrequency');
            obj.SatelliteFrequency = double(val);
        end
        function set.RequestDatabaseSource(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'RequestDatabaseSource');
            obj.RequestDatabaseSource = uint8(val);
        end
        function set.LandstarCorrectionSource(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'LandstarCorrectionSource');
            obj.LandstarCorrectionSource = uint8(val);
        end
        function set.OmnistarActivationCode(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 26};
            validateattributes(val, validClasses, validAttributes, 'DGPSSourceControl', 'OmnistarActivationCode');
            obj.OmnistarActivationCode = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.applanix_msgs.DGPSSourceControl.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.applanix_msgs.DGPSSourceControl(strObj);
        end
    end
end
