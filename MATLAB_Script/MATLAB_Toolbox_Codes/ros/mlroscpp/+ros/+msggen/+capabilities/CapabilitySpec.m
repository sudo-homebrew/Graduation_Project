
classdef CapabilitySpec < ros.Message
    %CapabilitySpec MATLAB implementation of capabilities/CapabilitySpec
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'capabilities/CapabilitySpec' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '410c606586817322b7ad85c73e4a4c9f' % The MD5 Checksum of the message definition
        PropertyList = { 'Package' 'Type' 'Content' 'DefaultProvider' } % List of non-constant message properties
        ROSPropertyList = { 'package' 'type' 'content' 'default_provider' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Package
        Type
        Content
        DefaultProvider
    end
    methods
        function set.Package(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilitySpec', 'Package');
            obj.Package = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilitySpec', 'Type');
            obj.Type = char(val);
        end
        function set.Content(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilitySpec', 'Content');
            obj.Content = char(val);
        end
        function set.DefaultProvider(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilitySpec', 'DefaultProvider');
            obj.DefaultProvider = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.capabilities.CapabilitySpec.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.capabilities.CapabilitySpec(strObj);
        end
    end
end
