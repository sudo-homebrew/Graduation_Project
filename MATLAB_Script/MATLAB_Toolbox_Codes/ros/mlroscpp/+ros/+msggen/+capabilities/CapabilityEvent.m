
classdef CapabilityEvent < ros.Message
    %CapabilityEvent MATLAB implementation of capabilities/CapabilityEvent
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'capabilities/CapabilityEvent' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '5a0d82ee1a8e7a5d0b058f0b20305b18' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Capability' 'Provider' 'Type' 'Pid' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'capability' 'provider' 'type' 'pid' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        LAUNCHED = 'launched';
        STOPPED = 'stopped';
        TERMINATED = 'terminated';
        SERVERREADY = 'server_ready';
    end
    properties
        Header
        Capability
        Provider
        Type
        Pid
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'CapabilityEvent', 'Header')
            obj.Header = val;
        end
        function set.Capability(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilityEvent', 'Capability');
            obj.Capability = char(val);
        end
        function set.Provider(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilityEvent', 'Provider');
            obj.Provider = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'CapabilityEvent', 'Type');
            obj.Type = char(val);
        end
        function set.Pid(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CapabilityEvent', 'Pid');
            obj.Pid = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.capabilities.CapabilityEvent.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.capabilities.CapabilityEvent(strObj);
        end
    end
end
