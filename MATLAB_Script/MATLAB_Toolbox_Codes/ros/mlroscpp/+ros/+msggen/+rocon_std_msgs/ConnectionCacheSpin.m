
classdef ConnectionCacheSpin < ros.Message
    %ConnectionCacheSpin MATLAB implementation of rocon_std_msgs/ConnectionCacheSpin
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rocon_std_msgs/ConnectionCacheSpin' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b6c0b0ddb1d2a2de9918dc5f6d87680a' % The MD5 Checksum of the message definition
        PropertyList = { 'SpinFreq' 'SpinTimer' } % List of non-constant message properties
        ROSPropertyList = { 'spin_freq' 'spin_timer' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        SpinFreq
        SpinTimer
    end
    methods
        function set.SpinFreq(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ConnectionCacheSpin', 'SpinFreq');
            obj.SpinFreq = single(val);
        end
        function set.SpinTimer(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ConnectionCacheSpin', 'SpinTimer');
            obj.SpinTimer = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rocon_std_msgs.ConnectionCacheSpin.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rocon_std_msgs.ConnectionCacheSpin(strObj);
        end
    end
end
