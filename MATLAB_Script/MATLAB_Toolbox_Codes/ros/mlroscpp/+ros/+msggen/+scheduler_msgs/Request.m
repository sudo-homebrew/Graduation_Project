
classdef Request < ros.Message
    %Request MATLAB implementation of scheduler_msgs/Request
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'scheduler_msgs/Request' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '1556d9f8919617c2f52b2a4ab15f6468' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'Resources' 'Availability' 'HoldTime' 'Status' 'Reason' 'Problem' 'Priority' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'resources' 'availability' 'hold_time' 'status' 'reason' 'problem' 'priority' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.uuid_msgs.UniqueID' ...
            'ros.msggen.scheduler_msgs.Resource' ...
            'ros.msg.Time' ...
            'ros.msg.Duration' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        NEW = uint8(0)
        RESERVED = uint8(1)
        WAITING = uint8(2)
        GRANTED = uint8(3)
        PREEMPTING = uint8(4)
        CANCELING = uint8(5)
        CLOSED = uint8(6)
        NONE = uint8(0)
        PREEMPTED = uint8(1)
        BUSY = uint8(2)
        UNAVAILABLE = uint8(3)
        TIMEOUT = uint8(4)
        INVALID = uint8(5)
        BACKGROUNDPRIORITY = int16(-20000)
        LOWPRIORITY = int16(-10000)
        DEFAULTPRIORITY = int16(0)
        HIGHPRIORITY = int16(10000)
        CRITICALPRIORITY = int16(20000)
    end
    properties
        Id
        Resources
        Availability
        HoldTime
        Status
        Reason
        Problem
        Priority
    end
    methods
        function set.Id(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.uuid_msgs.UniqueID'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Id')
            obj.Id = val;
        end
        function set.Resources(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.scheduler_msgs.Resource.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.scheduler_msgs.Resource'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Resources')
            obj.Resources = val;
        end
        function set.Availability(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Availability')
            obj.Availability = val;
        end
        function set.HoldTime(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Duration'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'HoldTime')
            obj.HoldTime = val;
        end
        function set.Status(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Status');
            obj.Status = uint8(val);
        end
        function set.Reason(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Reason');
            obj.Reason = uint8(val);
        end
        function set.Problem(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Problem');
            obj.Problem = char(val);
        end
        function set.Priority(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Request', 'Priority');
            obj.Priority = int16(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.scheduler_msgs.Request.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.scheduler_msgs.Request(strObj);
        end
    end
end
