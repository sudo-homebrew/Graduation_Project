
classdef Resource < ros.Message
    %Resource MATLAB implementation of scheduler_msgs/Resource
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'scheduler_msgs/Resource' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '754fd8dd757d06fa1564264b85a21995' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'Remappings' 'Parameters' 'Rapp' 'Uri' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'remappings' 'parameters' 'rapp' 'uri' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.uuid_msgs.UniqueID' ...
            'ros.msggen.rocon_std_msgs.Remapping' ...
            'ros.msggen.rocon_std_msgs.KeyValue' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Id
        Remappings
        Parameters
        Rapp
        Uri
    end
    methods
        function set.Id(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.uuid_msgs.UniqueID'};
            validateattributes(val, validClasses, validAttributes, 'Resource', 'Id')
            obj.Id = val;
        end
        function set.Remappings(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.rocon_std_msgs.Remapping.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.rocon_std_msgs.Remapping'};
            validateattributes(val, validClasses, validAttributes, 'Resource', 'Remappings')
            obj.Remappings = val;
        end
        function set.Parameters(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.rocon_std_msgs.KeyValue.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.rocon_std_msgs.KeyValue'};
            validateattributes(val, validClasses, validAttributes, 'Resource', 'Parameters')
            obj.Parameters = val;
        end
        function set.Rapp(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Resource', 'Rapp');
            obj.Rapp = char(val);
        end
        function set.Uri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Resource', 'Uri');
            obj.Uri = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.scheduler_msgs.Resource.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.scheduler_msgs.Resource(strObj);
        end
    end
end
