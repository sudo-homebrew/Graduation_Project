
classdef Person < ros.Message
    %Person MATLAB implementation of people_msgs/Person
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'people_msgs/Person' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0b7c0818b76476f3863bd13f4d59f8df' % The MD5 Checksum of the message definition
        PropertyList = { 'Position' 'Velocity' 'Name' 'Reliability' 'Tagnames' 'Tags' } % List of non-constant message properties
        ROSPropertyList = { 'position' 'velocity' 'name' 'reliability' 'tagnames' 'tags' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Position
        Velocity
        Name
        Reliability
        Tagnames
        Tags
    end
    methods
        function set.Position(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Position')
            obj.Position = val;
        end
        function set.Velocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Velocity')
            obj.Velocity = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Name');
            obj.Name = char(val);
        end
        function set.Reliability(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Reliability');
            obj.Reliability = double(val);
        end
        function set.Tagnames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Tagnames');
            obj.Tagnames = cell(val);
        end
        function set.Tags(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Person', 'Tags');
            obj.Tags = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.people_msgs.Person.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.people_msgs.Person(strObj);
        end
    end
end
