
classdef DenseLaserPoint < ros.Message
    %DenseLaserPoint MATLAB implementation of calibration_msgs/DenseLaserPoint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'calibration_msgs/DenseLaserPoint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '12821677bc3daf8fabbb485d5b0cc027' % The MD5 Checksum of the message definition
        PropertyList = { 'Scan' 'Ray' } % List of non-constant message properties
        ROSPropertyList = { 'scan' 'ray' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Scan
        Ray
    end
    methods
        function set.Scan(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DenseLaserPoint', 'Scan');
            obj.Scan = double(val);
        end
        function set.Ray(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DenseLaserPoint', 'Ray');
            obj.Ray = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.calibration_msgs.DenseLaserPoint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.calibration_msgs.DenseLaserPoint(strObj);
        end
    end
end
