
classdef GetJointPropertiesResponse < ros.Message
    %GetJointPropertiesResponse MATLAB implementation of gazebo_msgs/GetJointPropertiesResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/GetJointPropertiesResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'cd7b30a39faa372283dc94c5f6457f82' % The MD5 Checksum of the message definition
        PropertyList = { 'Type' 'Damping' 'Position' 'Rate' 'Success' 'StatusMessage' } % List of non-constant message properties
        ROSPropertyList = { 'type' 'damping' 'position' 'rate' 'success' 'status_message' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        REVOLUTE = uint8(0)
        CONTINUOUS = uint8(1)
        PRISMATIC = uint8(2)
        FIXED = uint8(3)
        BALL = uint8(4)
        UNIVERSAL = uint8(5)
    end
    properties
        Type
        Damping
        Position
        Rate
        Success
        StatusMessage
    end
    methods
        function set.Type(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'Type');
            obj.Type = uint8(val);
        end
        function set.Damping(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'Damping');
            obj.Damping = double(val);
        end
        function set.Position(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'Position');
            obj.Position = double(val);
        end
        function set.Rate(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'Rate');
            obj.Rate = double(val);
        end
        function set.Success(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'Success');
            obj.Success = logical(val);
        end
        function set.StatusMessage(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GetJointPropertiesResponse', 'StatusMessage');
            obj.StatusMessage = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.GetJointPropertiesResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.GetJointPropertiesResponse(strObj);
        end
    end
end
