
classdef GetLightPropertiesResponse < ros.Message
    %GetLightPropertiesResponse MATLAB implementation of gazebo_msgs/GetLightPropertiesResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/GetLightPropertiesResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9a19ddd5aab4c13b7643d1722c709f1f' % The MD5 Checksum of the message definition
        PropertyList = { 'Diffuse' 'AttenuationConstant' 'AttenuationLinear' 'AttenuationQuadratic' 'Success' 'StatusMessage' } % List of non-constant message properties
        ROSPropertyList = { 'diffuse' 'attenuation_constant' 'attenuation_linear' 'attenuation_quadratic' 'success' 'status_message' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.ColorRGBA' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Diffuse
        AttenuationConstant
        AttenuationLinear
        AttenuationQuadratic
        Success
        StatusMessage
    end
    methods
        function set.Diffuse(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.ColorRGBA'};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'Diffuse')
            obj.Diffuse = val;
        end
        function set.AttenuationConstant(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'AttenuationConstant');
            obj.AttenuationConstant = double(val);
        end
        function set.AttenuationLinear(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'AttenuationLinear');
            obj.AttenuationLinear = double(val);
        end
        function set.AttenuationQuadratic(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'AttenuationQuadratic');
            obj.AttenuationQuadratic = double(val);
        end
        function set.Success(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'Success');
            obj.Success = logical(val);
        end
        function set.StatusMessage(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GetLightPropertiesResponse', 'StatusMessage');
            obj.StatusMessage = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.GetLightPropertiesResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.GetLightPropertiesResponse(strObj);
        end
    end
end
