
classdef ApplyJointEffortRequest < ros.Message
    %ApplyJointEffortRequest MATLAB implementation of gazebo_msgs/ApplyJointEffortRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/ApplyJointEffortRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2c3396ab9af67a509ecd2167a8fe41a2' % The MD5 Checksum of the message definition
        PropertyList = { 'StartTime' 'Duration' 'JointName' 'Effort' } % List of non-constant message properties
        ROSPropertyList = { 'start_time' 'duration' 'joint_name' 'effort' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            'ros.msg.Duration' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        StartTime
        Duration
        JointName
        Effort
    end
    methods
        function set.StartTime(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'ApplyJointEffortRequest', 'StartTime')
            obj.StartTime = val;
        end
        function set.Duration(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Duration'};
            validateattributes(val, validClasses, validAttributes, 'ApplyJointEffortRequest', 'Duration')
            obj.Duration = val;
        end
        function set.JointName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ApplyJointEffortRequest', 'JointName');
            obj.JointName = char(val);
        end
        function set.Effort(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ApplyJointEffortRequest', 'Effort');
            obj.Effort = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.ApplyJointEffortRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.ApplyJointEffortRequest(strObj);
        end
    end
end
