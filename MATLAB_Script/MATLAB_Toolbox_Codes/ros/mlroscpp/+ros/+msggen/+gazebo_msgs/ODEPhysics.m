
classdef ODEPhysics < ros.Message
    %ODEPhysics MATLAB implementation of gazebo_msgs/ODEPhysics
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/ODEPhysics' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '667d56ddbd547918c32d1934503dc335' % The MD5 Checksum of the message definition
        PropertyList = { 'AutoDisableBodies' 'SorPgsPreconIters' 'SorPgsIters' 'SorPgsW' 'SorPgsRmsErrorTol' 'ContactSurfaceLayer' 'ContactMaxCorrectingVel' 'Cfm' 'Erp' 'MaxContacts' } % List of non-constant message properties
        ROSPropertyList = { 'auto_disable_bodies' 'sor_pgs_precon_iters' 'sor_pgs_iters' 'sor_pgs_w' 'sor_pgs_rms_error_tol' 'contact_surface_layer' 'contact_max_correcting_vel' 'cfm' 'erp' 'max_contacts' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        AutoDisableBodies
        SorPgsPreconIters
        SorPgsIters
        SorPgsW
        SorPgsRmsErrorTol
        ContactSurfaceLayer
        ContactMaxCorrectingVel
        Cfm
        Erp
        MaxContacts
    end
    methods
        function set.AutoDisableBodies(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'AutoDisableBodies');
            obj.AutoDisableBodies = logical(val);
        end
        function set.SorPgsPreconIters(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'SorPgsPreconIters');
            obj.SorPgsPreconIters = uint32(val);
        end
        function set.SorPgsIters(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'SorPgsIters');
            obj.SorPgsIters = uint32(val);
        end
        function set.SorPgsW(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'SorPgsW');
            obj.SorPgsW = double(val);
        end
        function set.SorPgsRmsErrorTol(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'SorPgsRmsErrorTol');
            obj.SorPgsRmsErrorTol = double(val);
        end
        function set.ContactSurfaceLayer(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'ContactSurfaceLayer');
            obj.ContactSurfaceLayer = double(val);
        end
        function set.ContactMaxCorrectingVel(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'ContactMaxCorrectingVel');
            obj.ContactMaxCorrectingVel = double(val);
        end
        function set.Cfm(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'Cfm');
            obj.Cfm = double(val);
        end
        function set.Erp(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'Erp');
            obj.Erp = double(val);
        end
        function set.MaxContacts(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ODEPhysics', 'MaxContacts');
            obj.MaxContacts = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.ODEPhysics.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.ODEPhysics(strObj);
        end
    end
end
