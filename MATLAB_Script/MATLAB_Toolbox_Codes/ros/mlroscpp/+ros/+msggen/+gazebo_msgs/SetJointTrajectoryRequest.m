
classdef SetJointTrajectoryRequest < ros.Message
    %SetJointTrajectoryRequest MATLAB implementation of gazebo_msgs/SetJointTrajectoryRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/SetJointTrajectoryRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '649dd2eba5ffd358069238825f9f85ab' % The MD5 Checksum of the message definition
        PropertyList = { 'JointTrajectory' 'ModelPose' 'ModelName' 'SetModelPose' 'DisablePhysicsUpdates' } % List of non-constant message properties
        ROSPropertyList = { 'joint_trajectory' 'model_pose' 'model_name' 'set_model_pose' 'disable_physics_updates' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.trajectory_msgs.JointTrajectory' ...
            'ros.msggen.geometry_msgs.Pose' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        JointTrajectory
        ModelPose
        ModelName
        SetModelPose
        DisablePhysicsUpdates
    end
    methods
        function set.JointTrajectory(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.trajectory_msgs.JointTrajectory'};
            validateattributes(val, validClasses, validAttributes, 'SetJointTrajectoryRequest', 'JointTrajectory')
            obj.JointTrajectory = val;
        end
        function set.ModelPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'SetJointTrajectoryRequest', 'ModelPose')
            obj.ModelPose = val;
        end
        function set.ModelName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetJointTrajectoryRequest', 'ModelName');
            obj.ModelName = char(val);
        end
        function set.SetModelPose(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetJointTrajectoryRequest', 'SetModelPose');
            obj.SetModelPose = logical(val);
        end
        function set.DisablePhysicsUpdates(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetJointTrajectoryRequest', 'DisablePhysicsUpdates');
            obj.DisablePhysicsUpdates = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.SetJointTrajectoryRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.SetJointTrajectoryRequest(strObj);
        end
    end
end
