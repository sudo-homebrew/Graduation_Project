
classdef SetPhysicsPropertiesRequest < ros.Message
    %SetPhysicsPropertiesRequest MATLAB implementation of gazebo_msgs/SetPhysicsPropertiesRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/SetPhysicsPropertiesRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'abd9f82732b52b92e9d6bb36e6a82452' % The MD5 Checksum of the message definition
        PropertyList = { 'Gravity' 'OdeConfig' 'TimeStep' 'MaxUpdateRate' } % List of non-constant message properties
        ROSPropertyList = { 'gravity' 'ode_config' 'time_step' 'max_update_rate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.gazebo_msgs.ODEPhysics' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Gravity
        OdeConfig
        TimeStep
        MaxUpdateRate
    end
    methods
        function set.Gravity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'SetPhysicsPropertiesRequest', 'Gravity')
            obj.Gravity = val;
        end
        function set.OdeConfig(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.gazebo_msgs.ODEPhysics'};
            validateattributes(val, validClasses, validAttributes, 'SetPhysicsPropertiesRequest', 'OdeConfig')
            obj.OdeConfig = val;
        end
        function set.TimeStep(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetPhysicsPropertiesRequest', 'TimeStep');
            obj.TimeStep = double(val);
        end
        function set.MaxUpdateRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetPhysicsPropertiesRequest', 'MaxUpdateRate');
            obj.MaxUpdateRate = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.SetPhysicsPropertiesRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.SetPhysicsPropertiesRequest(strObj);
        end
    end
end
