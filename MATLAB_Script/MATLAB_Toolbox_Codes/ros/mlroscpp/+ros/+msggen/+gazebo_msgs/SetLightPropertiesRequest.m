
classdef SetLightPropertiesRequest < ros.Message
    %SetLightPropertiesRequest MATLAB implementation of gazebo_msgs/SetLightPropertiesRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/SetLightPropertiesRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '10d953f2306aec18460eb80dd94fdd47' % The MD5 Checksum of the message definition
        PropertyList = { 'Diffuse' 'Specular' 'Direction' 'Pose' 'LightName' 'CastShadows' 'AttenuationConstant' 'AttenuationLinear' 'AttenuationQuadratic' } % List of non-constant message properties
        ROSPropertyList = { 'diffuse' 'specular' 'direction' 'pose' 'light_name' 'cast_shadows' 'attenuation_constant' 'attenuation_linear' 'attenuation_quadratic' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.ColorRGBA' ...
            'ros.msggen.std_msgs.ColorRGBA' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Pose' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Diffuse
        Specular
        Direction
        Pose
        LightName
        CastShadows
        AttenuationConstant
        AttenuationLinear
        AttenuationQuadratic
    end
    methods
        function set.Diffuse(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.ColorRGBA'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'Diffuse')
            obj.Diffuse = val;
        end
        function set.Specular(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.ColorRGBA'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'Specular')
            obj.Specular = val;
        end
        function set.Direction(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'Direction')
            obj.Direction = val;
        end
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'Pose')
            obj.Pose = val;
        end
        function set.LightName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'LightName');
            obj.LightName = char(val);
        end
        function set.CastShadows(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'CastShadows');
            obj.CastShadows = logical(val);
        end
        function set.AttenuationConstant(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'AttenuationConstant');
            obj.AttenuationConstant = double(val);
        end
        function set.AttenuationLinear(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'AttenuationLinear');
            obj.AttenuationLinear = double(val);
        end
        function set.AttenuationQuadratic(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SetLightPropertiesRequest', 'AttenuationQuadratic');
            obj.AttenuationQuadratic = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.SetLightPropertiesRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.SetLightPropertiesRequest(strObj);
        end
    end
end
