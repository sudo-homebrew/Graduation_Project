
classdef SetModelConfigurationRequest < ros.Message
    %SetModelConfigurationRequest MATLAB implementation of gazebo_msgs/SetModelConfigurationRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'gazebo_msgs/SetModelConfigurationRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '160eae60f51fabff255480c70afa289f' % The MD5 Checksum of the message definition
        PropertyList = { 'ModelName' 'UrdfParamName' 'JointNames' 'JointPositions' } % List of non-constant message properties
        ROSPropertyList = { 'model_name' 'urdf_param_name' 'joint_names' 'joint_positions' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ModelName
        UrdfParamName
        JointNames
        JointPositions
    end
    methods
        function set.ModelName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetModelConfigurationRequest', 'ModelName');
            obj.ModelName = char(val);
        end
        function set.UrdfParamName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SetModelConfigurationRequest', 'UrdfParamName');
            obj.UrdfParamName = char(val);
        end
        function set.JointNames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SetModelConfigurationRequest', 'JointNames');
            obj.JointNames = cell(val);
        end
        function set.JointPositions(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SetModelConfigurationRequest', 'JointPositions');
            obj.JointPositions = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.gazebo_msgs.SetModelConfigurationRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.gazebo_msgs.SetModelConfigurationRequest(strObj);
        end
    end
end
