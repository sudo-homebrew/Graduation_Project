
classdef SynchronizedForces < ros.Message
    %SynchronizedForces MATLAB implementation of jsk_footstep_controller/SynchronizedForces
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'jsk_footstep_controller/SynchronizedForces' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9f34791d0775ccd699ccdfdb8b823128' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'LlegForce' 'RlegForce' 'JointAngles' 'Zmp' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'lleg_force' 'rleg_force' 'joint_angles' 'zmp' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.WrenchStamped' ...
            'ros.msggen.geometry_msgs.WrenchStamped' ...
            'ros.msggen.sensor_msgs.JointState' ...
            'ros.msggen.geometry_msgs.PointStamped' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        LlegForce
        RlegForce
        JointAngles
        Zmp
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'SynchronizedForces', 'Header')
            obj.Header = val;
        end
        function set.LlegForce(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.WrenchStamped'};
            validateattributes(val, validClasses, validAttributes, 'SynchronizedForces', 'LlegForce')
            obj.LlegForce = val;
        end
        function set.RlegForce(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.WrenchStamped'};
            validateattributes(val, validClasses, validAttributes, 'SynchronizedForces', 'RlegForce')
            obj.RlegForce = val;
        end
        function set.JointAngles(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.sensor_msgs.JointState'};
            validateattributes(val, validClasses, validAttributes, 'SynchronizedForces', 'JointAngles')
            obj.JointAngles = val;
        end
        function set.Zmp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PointStamped'};
            validateattributes(val, validClasses, validAttributes, 'SynchronizedForces', 'Zmp')
            obj.Zmp = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.jsk_footstep_controller.SynchronizedForces.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.jsk_footstep_controller.SynchronizedForces(strObj);
        end
    end
end
