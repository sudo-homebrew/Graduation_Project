
classdef RecognizedObject < ros.Message
    %RecognizedObject MATLAB implementation of object_recognition_msgs/RecognizedObject
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'object_recognition_msgs/RecognizedObject' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f92c4cb29ba11f26c5f7219de97e900d' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Type' 'PointClouds' 'BoundingMesh' 'BoundingContours' 'Pose' 'Confidence' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'type' 'point_clouds' 'bounding_mesh' 'bounding_contours' 'pose' 'confidence' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.object_recognition_msgs.ObjectType' ...
            'ros.msg.sensor_msgs.PointCloud2' ...
            'ros.msggen.shape_msgs.Mesh' ...
            'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.PoseWithCovarianceStamped' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Type
        PointClouds
        BoundingMesh
        BoundingContours
        Pose
        Confidence
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'Header')
            obj.Header = val;
        end
        function set.Type(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.object_recognition_msgs.ObjectType'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'Type')
            obj.Type = val;
        end
        function set.PointClouds(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msg.sensor_msgs.PointCloud2.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msg.sensor_msgs.PointCloud2'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'PointClouds')
            obj.PointClouds = val;
        end
        function set.BoundingMesh(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.shape_msgs.Mesh'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'BoundingMesh')
            obj.BoundingMesh = val;
        end
        function set.BoundingContours(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.Point.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'BoundingContours')
            obj.BoundingContours = val;
        end
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseWithCovarianceStamped'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'Pose')
            obj.Pose = val;
        end
        function set.Confidence(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RecognizedObject', 'Confidence');
            obj.Confidence = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.object_recognition_msgs.RecognizedObject.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.object_recognition_msgs.RecognizedObject(strObj);
        end
    end
end
