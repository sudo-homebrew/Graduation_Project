
classdef CylinderMsg < ros.Message
    %CylinderMsg MATLAB implementation of handle_detector/CylinderMsg
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'handle_detector/CylinderMsg' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd942b1ab5090fe359833c2797e326219' % The MD5 Checksum of the message definition
        PropertyList = { 'Pose' 'Axis' 'Normal' 'Radius' 'Extent' } % List of non-constant message properties
        ROSPropertyList = { 'pose' 'axis' 'normal' 'radius' 'extent' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Pose' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Pose
        Axis
        Normal
        Radius
        Extent
    end
    methods
        function set.Pose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'CylinderMsg', 'Pose')
            obj.Pose = val;
        end
        function set.Axis(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'CylinderMsg', 'Axis')
            obj.Axis = val;
        end
        function set.Normal(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'CylinderMsg', 'Normal')
            obj.Normal = val;
        end
        function set.Radius(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CylinderMsg', 'Radius');
            obj.Radius = single(val);
        end
        function set.Extent(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CylinderMsg', 'Extent');
            obj.Extent = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.handle_detector.CylinderMsg.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.handle_detector.CylinderMsg(strObj);
        end
    end
end
