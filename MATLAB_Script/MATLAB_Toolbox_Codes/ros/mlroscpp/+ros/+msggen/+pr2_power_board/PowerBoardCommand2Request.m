
classdef PowerBoardCommand2Request < ros.Message
    %PowerBoardCommand2Request MATLAB implementation of pr2_power_board/PowerBoardCommand2Request
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_power_board/PowerBoardCommand2Request' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a31aee1db4294698375ff2a8cf53fea5' % The MD5 Checksum of the message definition
        PropertyList = { 'Circuit' 'Command' 'ResetStats' 'ResetCircuits' } % List of non-constant message properties
        ROSPropertyList = { 'circuit' 'command' 'reset_stats' 'reset_circuits' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        NUMBEROFCIRCUITS = int32(3)
        BASE = int32(0)
        RIGHTARM = int32(1)
        LEFTARM = int32(2)
    end
    properties
        Circuit
        Command
        ResetStats
        ResetCircuits
    end
    methods
        function set.Circuit(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommand2Request', 'Circuit');
            obj.Circuit = int32(val);
        end
        function set.Command(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommand2Request', 'Command');
            obj.Command = char(val);
        end
        function set.ResetStats(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommand2Request', 'ResetStats');
            obj.ResetStats = logical(val);
        end
        function set.ResetCircuits(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommand2Request', 'ResetCircuits');
            obj.ResetCircuits = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_power_board.PowerBoardCommand2Request.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_power_board.PowerBoardCommand2Request(strObj);
        end
    end
end
