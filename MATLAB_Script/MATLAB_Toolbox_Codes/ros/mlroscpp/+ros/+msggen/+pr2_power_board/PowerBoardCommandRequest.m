
classdef PowerBoardCommandRequest < ros.Message
    %PowerBoardCommandRequest MATLAB implementation of pr2_power_board/PowerBoardCommandRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_power_board/PowerBoardCommandRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9c621f5309bca0033e8eaef81c31500a' % The MD5 Checksum of the message definition
        PropertyList = { 'SerialNumber' 'BreakerNumber' 'Command' 'Flags' } % List of non-constant message properties
        ROSPropertyList = { 'serial_number' 'breaker_number' 'command' 'flags' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        SerialNumber
        BreakerNumber
        Command
        Flags
    end
    methods
        function set.SerialNumber(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommandRequest', 'SerialNumber');
            obj.SerialNumber = uint32(val);
        end
        function set.BreakerNumber(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommandRequest', 'BreakerNumber');
            obj.BreakerNumber = int32(val);
        end
        function set.Command(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommandRequest', 'Command');
            obj.Command = char(val);
        end
        function set.Flags(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PowerBoardCommandRequest', 'Flags');
            obj.Flags = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_power_board.PowerBoardCommandRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_power_board.PowerBoardCommandRequest(strObj);
        end
    end
end
