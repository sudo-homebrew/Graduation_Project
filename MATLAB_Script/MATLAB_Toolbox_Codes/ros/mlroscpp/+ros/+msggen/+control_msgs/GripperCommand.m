
classdef GripperCommand < ros.Message
    %GripperCommand MATLAB implementation of control_msgs/GripperCommand
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'control_msgs/GripperCommand' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '680acaff79486f017132a7f198d40f08' % The MD5 Checksum of the message definition
        PropertyList = { 'Position' 'MaxEffort' } % List of non-constant message properties
        ROSPropertyList = { 'position' 'max_effort' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Position
        MaxEffort
    end
    methods
        function set.Position(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GripperCommand', 'Position');
            obj.Position = double(val);
        end
        function set.MaxEffort(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GripperCommand', 'MaxEffort');
            obj.MaxEffort = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.control_msgs.GripperCommand.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.control_msgs.GripperCommand(strObj);
        end
    end
end
