
classdef PointHeadGoal < ros.Message
    %PointHeadGoal MATLAB implementation of control_msgs/PointHeadGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'control_msgs/PointHeadGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '8b92b1cd5e06c8a94c917dc3209a4c1d' % The MD5 Checksum of the message definition
        PropertyList = { 'Target' 'PointingAxis' 'MinDuration' 'PointingFrame' 'MaxVelocity' } % List of non-constant message properties
        ROSPropertyList = { 'target' 'pointing_axis' 'min_duration' 'pointing_frame' 'max_velocity' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PointStamped' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msg.Duration' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Target
        PointingAxis
        MinDuration
        PointingFrame
        MaxVelocity
    end
    methods
        function set.Target(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PointStamped'};
            validateattributes(val, validClasses, validAttributes, 'PointHeadGoal', 'Target')
            obj.Target = val;
        end
        function set.PointingAxis(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'PointHeadGoal', 'PointingAxis')
            obj.PointingAxis = val;
        end
        function set.MinDuration(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Duration'};
            validateattributes(val, validClasses, validAttributes, 'PointHeadGoal', 'MinDuration')
            obj.MinDuration = val;
        end
        function set.PointingFrame(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PointHeadGoal', 'PointingFrame');
            obj.PointingFrame = char(val);
        end
        function set.MaxVelocity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PointHeadGoal', 'MaxVelocity');
            obj.MaxVelocity = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.control_msgs.PointHeadGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.control_msgs.PointHeadGoal(strObj);
        end
    end
end
