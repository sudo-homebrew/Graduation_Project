
classdef PDDLAction < ros.Message
    %PDDLAction MATLAB implementation of pddl_msgs/PDDLAction
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pddl_msgs/PDDLAction' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b7889bb912b39c8d55cfbda20fd28a0a' % The MD5 Checksum of the message definition
        PropertyList = { 'Name' 'Parameters' 'Precondition' 'Effect' 'OnCondition' 'ActionDuration' } % List of non-constant message properties
        ROSPropertyList = { 'name' 'parameters' 'precondition' 'effect' 'on_condition' 'action_duration' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Name
        Parameters
        Precondition
        Effect
        OnCondition
        ActionDuration
    end
    methods
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'Name');
            obj.Name = char(val);
        end
        function set.Parameters(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'Parameters');
            obj.Parameters = char(val);
        end
        function set.Precondition(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'Precondition');
            obj.Precondition = char(val);
        end
        function set.Effect(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'Effect');
            obj.Effect = char(val);
        end
        function set.OnCondition(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'OnCondition');
            obj.OnCondition = char(val);
        end
        function set.ActionDuration(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PDDLAction', 'ActionDuration');
            obj.ActionDuration = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pddl_msgs.PDDLAction.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pddl_msgs.PDDLAction(strObj);
        end
    end
end
