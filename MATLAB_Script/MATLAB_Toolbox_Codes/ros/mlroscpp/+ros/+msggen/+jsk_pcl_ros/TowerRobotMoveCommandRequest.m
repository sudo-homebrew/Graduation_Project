
classdef TowerRobotMoveCommandRequest < ros.Message
    %TowerRobotMoveCommandRequest MATLAB implementation of jsk_pcl_ros/TowerRobotMoveCommandRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'jsk_pcl_ros/TowerRobotMoveCommandRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'aadba056bdce0494569ab50ecd2ec90c' % The MD5 Checksum of the message definition
        PropertyList = { 'RobotIndex' 'PlateIndex' 'FromTower' 'ToTower' 'OptionCommand' } % List of non-constant message properties
        ROSPropertyList = { 'robot_index' 'plate_index' 'from_tower' 'to_tower' 'option_command' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        ROBOT1 = int8(1)
        ROBOT2 = int8(2)
        ROBOT3 = int8(3)
        PLATESMALL = int8(1)
        PLATEMIDDLE = int8(2)
        PLATELARGE = int8(3)
        TOWERLOWEST = int8(1)
        TOWERMIDDLE = int8(2)
        TOWERHIGHEST = int8(3)
        TOWERLOWEST2 = int8(1)
        OPTIONNONE = int8(0)
        OPTIONMOVEINITIAL = int8(1)
    end
    properties
        RobotIndex
        PlateIndex
        FromTower
        ToTower
        OptionCommand
    end
    methods
        function set.RobotIndex(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TowerRobotMoveCommandRequest', 'RobotIndex');
            obj.RobotIndex = int32(val);
        end
        function set.PlateIndex(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TowerRobotMoveCommandRequest', 'PlateIndex');
            obj.PlateIndex = int32(val);
        end
        function set.FromTower(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TowerRobotMoveCommandRequest', 'FromTower');
            obj.FromTower = int32(val);
        end
        function set.ToTower(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TowerRobotMoveCommandRequest', 'ToTower');
            obj.ToTower = int32(val);
        end
        function set.OptionCommand(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TowerRobotMoveCommandRequest', 'OptionCommand');
            obj.OptionCommand = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.jsk_pcl_ros.TowerRobotMoveCommandRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.jsk_pcl_ros.TowerRobotMoveCommandRequest(strObj);
        end
    end
end
