
classdef Speech < ros.Message
    %Speech MATLAB implementation of data_vis_msgs/Speech
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'data_vis_msgs/Speech' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ce7f1848aa293898a23f5324fdb08f4b' % The MD5 Checksum of the message definition
        PropertyList = { 'Position' 'Id' 'Text' 'Duration' } % List of non-constant message properties
        ROSPropertyList = { 'position' 'id' 'text' 'duration' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Point' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Position
        Id
        Text
        Duration
    end
    methods
        function set.Position(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'Speech', 'Position')
            obj.Position = val;
        end
        function set.Id(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Speech', 'Id');
            obj.Id = char(val);
        end
        function set.Text(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Speech', 'Text');
            obj.Text = char(val);
        end
        function set.Duration(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Speech', 'Duration');
            obj.Duration = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.data_vis_msgs.Speech.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.data_vis_msgs.Speech(strObj);
        end
    end
end
