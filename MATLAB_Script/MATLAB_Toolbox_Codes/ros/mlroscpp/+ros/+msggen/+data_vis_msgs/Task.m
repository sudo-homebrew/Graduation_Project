
classdef Task < ros.Message
    %Task MATLAB implementation of data_vis_msgs/Task
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'data_vis_msgs/Task' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '18773c45de1fab119cc96f82a8cb92ae' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'Parent' 'Color' 'Info' 'Type' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'parent' 'color' 'info' 'type' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Id
        Parent
        Color
        Info
        Type
    end
    methods
        function set.Id(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Task', 'Id');
            obj.Id = int32(val);
        end
        function set.Parent(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Task', 'Parent');
            obj.Parent = int32(val);
        end
        function set.Color(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Task', 'Color');
            obj.Color = char(val);
        end
        function set.Info(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Task', 'Info');
            obj.Info = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Task', 'Type');
            obj.Type = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.data_vis_msgs.Task.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.data_vis_msgs.Task(strObj);
        end
    end
end
