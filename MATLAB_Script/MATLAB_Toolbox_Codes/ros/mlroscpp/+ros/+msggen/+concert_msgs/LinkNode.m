
classdef LinkNode < ros.Message
    %LinkNode MATLAB implementation of concert_msgs/LinkNode
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'concert_msgs/LinkNode' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '8cb53e2248706eb448c74babbdffc381' % The MD5 Checksum of the message definition
        PropertyList = { 'Id' 'Tuple' 'Min' 'Max' 'ForceNameMatching' } % List of non-constant message properties
        ROSPropertyList = { 'id' 'tuple' 'min' 'max' 'force_name_matching' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        UNLIMITEDRESOURCE = int8(-1)
    end
    properties
        Id
        Tuple
        Min
        Max
        ForceNameMatching
    end
    methods
        function set.Id(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'LinkNode', 'Id');
            obj.Id = char(val);
        end
        function set.Tuple(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'LinkNode', 'Tuple');
            obj.Tuple = char(val);
        end
        function set.Min(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LinkNode', 'Min');
            obj.Min = int8(val);
        end
        function set.Max(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LinkNode', 'Max');
            obj.Max = int8(val);
        end
        function set.ForceNameMatching(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'LinkNode', 'ForceNameMatching');
            obj.ForceNameMatching = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.concert_msgs.LinkNode.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.concert_msgs.LinkNode(strObj);
        end
    end
end
