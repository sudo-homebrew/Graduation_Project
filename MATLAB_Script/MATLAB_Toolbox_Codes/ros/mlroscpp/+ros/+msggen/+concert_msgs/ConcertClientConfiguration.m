
classdef ConcertClientConfiguration < ros.Message
    %ConcertClientConfiguration MATLAB implementation of concert_msgs/ConcertClientConfiguration
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'concert_msgs/ConcertClientConfiguration' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '271180ccd464930e6cd371441f8f7bf5' % The MD5 Checksum of the message definition
        PropertyList = { 'Platform' 'System' 'Robot' 'App' } % List of non-constant message properties
        ROSPropertyList = { 'platform' 'system' 'robot' 'app' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Platform
        System
        Robot
        App
    end
    methods
        function set.Platform(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ConcertClientConfiguration', 'Platform');
            obj.Platform = char(val);
        end
        function set.System(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ConcertClientConfiguration', 'System');
            obj.System = char(val);
        end
        function set.Robot(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ConcertClientConfiguration', 'Robot');
            obj.Robot = char(val);
        end
        function set.App(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ConcertClientConfiguration', 'App');
            obj.App = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.concert_msgs.ConcertClientConfiguration.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.concert_msgs.ConcertClientConfiguration(strObj);
        end
    end
end
