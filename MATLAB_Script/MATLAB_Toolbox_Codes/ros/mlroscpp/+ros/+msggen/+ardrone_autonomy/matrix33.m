
classdef matrix33 < ros.Message
    %matrix33 MATLAB implementation of ardrone_autonomy/matrix33
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'ardrone_autonomy/matrix33' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd6abfd8481fcb7c359a8d5d9388fa257' % The MD5 Checksum of the message definition
        PropertyList = { 'M11' 'M12' 'M13' 'M21' 'M22' 'M23' 'M31' 'M32' 'M33' } % List of non-constant message properties
        ROSPropertyList = { 'm11' 'm12' 'm13' 'm21' 'm22' 'm23' 'm31' 'm32' 'm33' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        M11
        M12
        M13
        M21
        M22
        M23
        M31
        M32
        M33
    end
    methods
        function set.M11(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M11');
            obj.M11 = single(val);
        end
        function set.M12(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M12');
            obj.M12 = single(val);
        end
        function set.M13(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M13');
            obj.M13 = single(val);
        end
        function set.M21(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M21');
            obj.M21 = single(val);
        end
        function set.M22(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M22');
            obj.M22 = single(val);
        end
        function set.M23(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M23');
            obj.M23 = single(val);
        end
        function set.M31(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M31');
            obj.M31 = single(val);
        end
        function set.M32(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M32');
            obj.M32 = single(val);
        end
        function set.M33(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'matrix33', 'M33');
            obj.M33 = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.ardrone_autonomy.matrix33.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.ardrone_autonomy.matrix33(strObj);
        end
    end
end
