
classdef navdata_rc_references < ros.Message
    %navdata_rc_references MATLAB implementation of ardrone_autonomy/navdata_rc_references
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'ardrone_autonomy/navdata_rc_references' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '57eebe7ce3b678ed3cfbdcf4646ffe93' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'DroneTime' 'Tag' 'Size' 'RcRefPitch' 'RcRefRoll' 'RcRefYaw' 'RcRefGaz' 'RcRefAg' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'drone_time' 'tag' 'size' 'rc_ref_pitch' 'rc_ref_roll' 'rc_ref_yaw' 'rc_ref_gaz' 'rc_ref_ag' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        DroneTime
        Tag
        Size
        RcRefPitch
        RcRefRoll
        RcRefYaw
        RcRefGaz
        RcRefAg
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'Header')
            obj.Header = val;
        end
        function set.DroneTime(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'DroneTime');
            obj.DroneTime = double(val);
        end
        function set.Tag(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'Tag');
            obj.Tag = uint16(val);
        end
        function set.Size(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'Size');
            obj.Size = uint16(val);
        end
        function set.RcRefPitch(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'RcRefPitch');
            obj.RcRefPitch = int32(val);
        end
        function set.RcRefRoll(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'RcRefRoll');
            obj.RcRefRoll = int32(val);
        end
        function set.RcRefYaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'RcRefYaw');
            obj.RcRefYaw = int32(val);
        end
        function set.RcRefGaz(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'RcRefGaz');
            obj.RcRefGaz = int32(val);
        end
        function set.RcRefAg(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_rc_references', 'RcRefAg');
            obj.RcRefAg = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.ardrone_autonomy.navdata_rc_references.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.ardrone_autonomy.navdata_rc_references(strObj);
        end
    end
end
