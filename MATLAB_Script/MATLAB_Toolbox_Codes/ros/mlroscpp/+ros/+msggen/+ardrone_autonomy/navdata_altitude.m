
classdef navdata_altitude < ros.Message
    %navdata_altitude MATLAB implementation of ardrone_autonomy/navdata_altitude
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'ardrone_autonomy/navdata_altitude' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f0fd1fd20697e6083c6bc3a308a260dc' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'ObsX' 'EstVb' 'DroneTime' 'Tag' 'Size' 'AltitudeVision' 'AltitudeVz' 'AltitudeRef' 'AltitudeRaw' 'ObsAccZ' 'ObsAlt' 'ObsState' 'EstState' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'obs_x' 'est_vb' 'drone_time' 'tag' 'size' 'altitude_vision' 'altitude_vz' 'altitude_ref' 'altitude_raw' 'obs_accZ' 'obs_alt' 'obs_state' 'est_state' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.ardrone_autonomy.vector31' ...
            'ros.msggen.ardrone_autonomy.vector21' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        ObsX
        EstVb
        DroneTime
        Tag
        Size
        AltitudeVision
        AltitudeVz
        AltitudeRef
        AltitudeRaw
        ObsAccZ
        ObsAlt
        ObsState
        EstState
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'Header')
            obj.Header = val;
        end
        function set.ObsX(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.ardrone_autonomy.vector31'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'ObsX')
            obj.ObsX = val;
        end
        function set.EstVb(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.ardrone_autonomy.vector21'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'EstVb')
            obj.EstVb = val;
        end
        function set.DroneTime(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'DroneTime');
            obj.DroneTime = double(val);
        end
        function set.Tag(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'Tag');
            obj.Tag = uint16(val);
        end
        function set.Size(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'Size');
            obj.Size = uint16(val);
        end
        function set.AltitudeVision(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'AltitudeVision');
            obj.AltitudeVision = int32(val);
        end
        function set.AltitudeVz(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'AltitudeVz');
            obj.AltitudeVz = single(val);
        end
        function set.AltitudeRef(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'AltitudeRef');
            obj.AltitudeRef = int32(val);
        end
        function set.AltitudeRaw(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'AltitudeRaw');
            obj.AltitudeRaw = int32(val);
        end
        function set.ObsAccZ(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'ObsAccZ');
            obj.ObsAccZ = single(val);
        end
        function set.ObsAlt(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'ObsAlt');
            obj.ObsAlt = single(val);
        end
        function set.ObsState(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'ObsState');
            obj.ObsState = uint32(val);
        end
        function set.EstState(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'navdata_altitude', 'EstState');
            obj.EstState = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.ardrone_autonomy.navdata_altitude.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.ardrone_autonomy.navdata_altitude(strObj);
        end
    end
end
