
classdef JointValue < ros.Message
    %JointValue MATLAB implementation of brics_actuator/JointValue
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'brics_actuator/JointValue' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'c8dad5a006889ad7de711a684999f0c6' % The MD5 Checksum of the message definition
        PropertyList = { 'TimeStamp' 'JointUri' 'Unit' 'Value' } % List of non-constant message properties
        ROSPropertyList = { 'timeStamp' 'joint_uri' 'unit' 'value' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        TimeStamp
        JointUri
        Unit
        Value
    end
    methods
        function set.TimeStamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'JointValue', 'TimeStamp')
            obj.TimeStamp = val;
        end
        function set.JointUri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'JointValue', 'JointUri');
            obj.JointUri = char(val);
        end
        function set.Unit(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'JointValue', 'Unit');
            obj.Unit = char(val);
        end
        function set.Value(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'JointValue', 'Value');
            obj.Value = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.brics_actuator.JointValue.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.brics_actuator.JointValue(strObj);
        end
    end
end
