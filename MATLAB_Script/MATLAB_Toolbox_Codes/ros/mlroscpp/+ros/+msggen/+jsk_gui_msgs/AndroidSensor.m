
classdef AndroidSensor < ros.Message
    %AndroidSensor MATLAB implementation of jsk_gui_msgs/AndroidSensor
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'jsk_gui_msgs/AndroidSensor' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd832dbe3be7e7f061d963f2188f1a407' % The MD5 Checksum of the message definition
        PropertyList = { 'AccelX' 'AccelY' 'AccelZ' 'OrientationX' 'OrientationY' 'OrientationZ' } % List of non-constant message properties
        ROSPropertyList = { 'accel_x' 'accel_y' 'accel_z' 'orientation_x' 'orientation_y' 'orientation_z' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        AccelX
        AccelY
        AccelZ
        OrientationX
        OrientationY
        OrientationZ
    end
    methods
        function set.AccelX(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'AccelX');
            obj.AccelX = double(val);
        end
        function set.AccelY(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'AccelY');
            obj.AccelY = double(val);
        end
        function set.AccelZ(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'AccelZ');
            obj.AccelZ = double(val);
        end
        function set.OrientationX(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'OrientationX');
            obj.OrientationX = double(val);
        end
        function set.OrientationY(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'OrientationY');
            obj.OrientationY = double(val);
        end
        function set.OrientationZ(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'AndroidSensor', 'OrientationZ');
            obj.OrientationZ = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.jsk_gui_msgs.AndroidSensor.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.jsk_gui_msgs.AndroidSensor(strObj);
        end
    end
end
