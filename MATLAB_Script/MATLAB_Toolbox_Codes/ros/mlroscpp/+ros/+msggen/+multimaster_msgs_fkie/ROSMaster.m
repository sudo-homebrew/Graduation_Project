
classdef ROSMaster < ros.Message
    %ROSMaster MATLAB implementation of multimaster_msgs_fkie/ROSMaster
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'multimaster_msgs_fkie/ROSMaster' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '08ea76968a3be2b8b1c6550b39616f72' % The MD5 Checksum of the message definition
        PropertyList = { 'Name' 'Uri' 'Timestamp' 'TimestampLocal' 'Online' 'DiscovererName' 'Monitoruri' } % List of non-constant message properties
        ROSPropertyList = { 'name' 'uri' 'timestamp' 'timestamp_local' 'online' 'discoverer_name' 'monitoruri' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Name
        Uri
        Timestamp
        TimestampLocal
        Online
        DiscovererName
        Monitoruri
    end
    methods
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Name');
            obj.Name = char(val);
        end
        function set.Uri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Uri');
            obj.Uri = char(val);
        end
        function set.Timestamp(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Timestamp');
            obj.Timestamp = double(val);
        end
        function set.TimestampLocal(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'TimestampLocal');
            obj.TimestampLocal = double(val);
        end
        function set.Online(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Online');
            obj.Online = logical(val);
        end
        function set.DiscovererName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'DiscovererName');
            obj.DiscovererName = char(val);
        end
        function set.Monitoruri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Monitoruri');
            obj.Monitoruri = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.multimaster_msgs_fkie.ROSMaster.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.multimaster_msgs_fkie.ROSMaster(strObj);
        end
    end
end
