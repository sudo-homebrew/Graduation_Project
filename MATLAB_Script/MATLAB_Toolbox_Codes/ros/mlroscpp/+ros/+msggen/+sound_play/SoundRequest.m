
classdef SoundRequest < ros.Message
    %SoundRequest MATLAB implementation of sound_play/SoundRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'sound_play/SoundRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd098ce4a040686259137ece23a625167' % The MD5 Checksum of the message definition
        PropertyList = { 'Sound' 'Command' 'Volume' 'Arg' 'Arg2' } % List of non-constant message properties
        ROSPropertyList = { 'sound' 'command' 'volume' 'arg' 'arg2' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        BACKINGUP = int8(1)
        NEEDSUNPLUGGING = int8(2)
        NEEDSPLUGGING = int8(3)
        NEEDSUNPLUGGINGBADLY = int8(4)
        NEEDSPLUGGINGBADLY = int8(5)
        ALL = int8(-1)
        PLAYFILE = int8(-2)
        SAY = int8(-3)
        PLAYSTOP = int8(0)
        PLAYONCE = int8(1)
        PLAYSTART = int8(2)
    end
    properties
        Sound
        Command
        Volume
        Arg
        Arg2
    end
    methods
        function set.Sound(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SoundRequest', 'Sound');
            obj.Sound = int8(val);
        end
        function set.Command(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SoundRequest', 'Command');
            obj.Command = int8(val);
        end
        function set.Volume(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SoundRequest', 'Volume');
            obj.Volume = single(val);
        end
        function set.Arg(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SoundRequest', 'Arg');
            obj.Arg = char(val);
        end
        function set.Arg2(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SoundRequest', 'Arg2');
            obj.Arg2 = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.sound_play.SoundRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.sound_play.SoundRequest(strObj);
        end
    end
end
