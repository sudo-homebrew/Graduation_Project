
classdef RawFTData < ros.Message
    %RawFTData MATLAB implementation of ethercat_hardware/RawFTData
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'ethercat_hardware/RawFTData' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '85f5ed45095367bfb8fb2e57954c0b89' % The MD5 Checksum of the message definition
        PropertyList = { 'Samples' 'SampleCount' 'MissedSamples' } % List of non-constant message properties
        ROSPropertyList = { 'samples' 'sample_count' 'missed_samples' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.ethercat_hardware.RawFTDataSample' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Samples
        SampleCount
        MissedSamples
    end
    methods
        function set.Samples(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.ethercat_hardware.RawFTDataSample.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.ethercat_hardware.RawFTDataSample'};
            validateattributes(val, validClasses, validAttributes, 'RawFTData', 'Samples')
            obj.Samples = val;
        end
        function set.SampleCount(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RawFTData', 'SampleCount');
            obj.SampleCount = int64(val);
        end
        function set.MissedSamples(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RawFTData', 'MissedSamples');
            obj.MissedSamples = int64(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.ethercat_hardware.RawFTData.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.ethercat_hardware.RawFTData(strObj);
        end
    end
end
