
classdef PlannerInterfaceResponse < ros.Message
    %PlannerInterfaceResponse MATLAB implementation of bwi_planning_common/PlannerInterfaceResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'bwi_planning_common/PlannerInterfaceResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '4b369ca08113322eccf2b5371446d8fc' % The MD5 Checksum of the message definition
        PropertyList = { 'Observations' 'Success' 'Status' } % List of non-constant message properties
        ROSPropertyList = { 'observations' 'success' 'status' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.bwi_planning_common.PlannerAtom' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Observations
        Success
        Status
    end
    methods
        function set.Observations(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.bwi_planning_common.PlannerAtom.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.bwi_planning_common.PlannerAtom'};
            validateattributes(val, validClasses, validAttributes, 'PlannerInterfaceResponse', 'Observations')
            obj.Observations = val;
        end
        function set.Success(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PlannerInterfaceResponse', 'Success');
            obj.Success = logical(val);
        end
        function set.Status(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PlannerInterfaceResponse', 'Status');
            obj.Status = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.bwi_planning_common.PlannerInterfaceResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.bwi_planning_common.PlannerInterfaceResponse(strObj);
        end
    end
end
