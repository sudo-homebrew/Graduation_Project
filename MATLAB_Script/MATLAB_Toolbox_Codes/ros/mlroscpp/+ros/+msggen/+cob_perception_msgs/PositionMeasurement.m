
classdef PositionMeasurement < ros.Message
    %PositionMeasurement MATLAB implementation of cob_perception_msgs/PositionMeasurement
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'cob_perception_msgs/PositionMeasurement' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'a1ad9f58d180ee0dd8bd6c516af86714' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Pos' 'Vel' 'Name' 'ObjectId' 'Reliability' 'Covariance' 'Initialization' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'pos' 'vel' 'name' 'object_id' 'reliability' 'covariance' 'initialization' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Pos
        Vel
        Name
        ObjectId
        Reliability
        Covariance
        Initialization
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Header')
            obj.Header = val;
        end
        function set.Pos(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Pos')
            obj.Pos = val;
        end
        function set.Vel(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Vel')
            obj.Vel = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Name');
            obj.Name = char(val);
        end
        function set.ObjectId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'ObjectId');
            obj.ObjectId = char(val);
        end
        function set.Reliability(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Reliability');
            obj.Reliability = double(val);
        end
        function set.Covariance(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 9};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Covariance');
            obj.Covariance = double(val);
        end
        function set.Initialization(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PositionMeasurement', 'Initialization');
            obj.Initialization = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.cob_perception_msgs.PositionMeasurement.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.cob_perception_msgs.PositionMeasurement(strObj);
        end
    end
end
