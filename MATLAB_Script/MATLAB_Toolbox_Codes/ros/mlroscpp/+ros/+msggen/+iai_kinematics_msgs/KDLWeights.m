
classdef KDLWeights < ros.Message
    %KDLWeights MATLAB implementation of iai_kinematics_msgs/KDLWeights
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'iai_kinematics_msgs/KDLWeights' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '986315cd29a99987092b708377dfd2ce' % The MD5 Checksum of the message definition
        PropertyList = { 'Mode' 'WeightTs' 'WeightJs' 'Lambda' } % List of non-constant message properties
        ROSPropertyList = { 'mode' 'weight_ts' 'weight_js' 'lambda' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        INVALIDMODE = int8(0)
        SETTS = int8(1)
        SETJS = int8(2)
        SETLAMBDA = int8(4)
        SETTSJS = int8(3)
    end
    properties
        Mode
        WeightTs
        WeightJs
        Lambda
    end
    methods
        function set.Mode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KDLWeights', 'Mode');
            obj.Mode = int8(val);
        end
        function set.WeightTs(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 36};
            validateattributes(val, validClasses, validAttributes, 'KDLWeights', 'WeightTs');
            obj.WeightTs = double(val);
        end
        function set.WeightJs(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'KDLWeights', 'WeightJs');
            obj.WeightJs = double(val);
        end
        function set.Lambda(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'KDLWeights', 'Lambda');
            obj.Lambda = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.iai_kinematics_msgs.KDLWeights.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.iai_kinematics_msgs.KDLWeights(strObj);
        end
    end
end
