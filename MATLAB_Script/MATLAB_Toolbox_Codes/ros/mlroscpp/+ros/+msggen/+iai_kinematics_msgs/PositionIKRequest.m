
classdef PositionIKRequest < ros.Message
    %PositionIKRequest MATLAB implementation of iai_kinematics_msgs/PositionIKRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'iai_kinematics_msgs/PositionIKRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '737bb756c6253bdd460b1383d0b12dac' % The MD5 Checksum of the message definition
        PropertyList = { 'PoseStamped' 'IkSeedState' 'RobotState' 'IkLinkName' } % List of non-constant message properties
        ROSPropertyList = { 'pose_stamped' 'ik_seed_state' 'robot_state' 'ik_link_name' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.iai_kinematics_msgs.RobotState' ...
            'ros.msggen.iai_kinematics_msgs.RobotState' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        PoseStamped
        IkSeedState
        RobotState
        IkLinkName
    end
    methods
        function set.PoseStamped(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'PositionIKRequest', 'PoseStamped')
            obj.PoseStamped = val;
        end
        function set.IkSeedState(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.iai_kinematics_msgs.RobotState'};
            validateattributes(val, validClasses, validAttributes, 'PositionIKRequest', 'IkSeedState')
            obj.IkSeedState = val;
        end
        function set.RobotState(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.iai_kinematics_msgs.RobotState'};
            validateattributes(val, validClasses, validAttributes, 'PositionIKRequest', 'RobotState')
            obj.RobotState = val;
        end
        function set.IkLinkName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PositionIKRequest', 'IkLinkName');
            obj.IkLinkName = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.iai_kinematics_msgs.PositionIKRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.iai_kinematics_msgs.PositionIKRequest(strObj);
        end
    end
end
