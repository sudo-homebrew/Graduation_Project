
classdef MultiDOFJointState < ros.Message
    %MultiDOFJointState MATLAB implementation of iai_kinematics_msgs/MultiDOFJointState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'iai_kinematics_msgs/MultiDOFJointState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ddd04f13c06870db031db8d5c0a6379d' % The MD5 Checksum of the message definition
        PropertyList = { 'Stamp' 'Poses' 'JointNames' 'FrameIds' 'ChildFrameIds' } % List of non-constant message properties
        ROSPropertyList = { 'stamp' 'poses' 'joint_names' 'frame_ids' 'child_frame_ids' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            'ros.msggen.geometry_msgs.Pose' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Stamp
        Poses
        JointNames
        FrameIds
        ChildFrameIds
    end
    methods
        function set.Stamp(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'MultiDOFJointState', 'Stamp')
            obj.Stamp = val;
        end
        function set.Poses(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.Pose.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.Pose'};
            validateattributes(val, validClasses, validAttributes, 'MultiDOFJointState', 'Poses')
            obj.Poses = val;
        end
        function set.JointNames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'MultiDOFJointState', 'JointNames');
            obj.JointNames = cell(val);
        end
        function set.FrameIds(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'MultiDOFJointState', 'FrameIds');
            obj.FrameIds = cell(val);
        end
        function set.ChildFrameIds(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'MultiDOFJointState', 'ChildFrameIds');
            obj.ChildFrameIds = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.iai_kinematics_msgs.MultiDOFJointState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.iai_kinematics_msgs.MultiDOFJointState(strObj);
        end
    end
end
