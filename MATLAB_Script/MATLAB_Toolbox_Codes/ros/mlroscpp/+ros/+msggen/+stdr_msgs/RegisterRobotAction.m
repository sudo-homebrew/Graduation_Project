
classdef RegisterRobotAction < ros.Message
    %RegisterRobotAction MATLAB implementation of stdr_msgs/RegisterRobotAction
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'stdr_msgs/RegisterRobotAction' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b39b50bd76f14707645fb1a5dcce213f' % The MD5 Checksum of the message definition
        PropertyList = { 'ActionGoal' 'ActionResult' 'ActionFeedback' } % List of non-constant message properties
        ROSPropertyList = { 'action_goal' 'action_result' 'action_feedback' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.stdr_msgs.RegisterRobotActionGoal' ...
            'ros.msggen.stdr_msgs.RegisterRobotActionResult' ...
            'ros.msggen.stdr_msgs.RegisterRobotActionFeedback' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ActionGoal
        ActionResult
        ActionFeedback
    end
    methods
        function set.ActionGoal(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.stdr_msgs.RegisterRobotActionGoal'};
            validateattributes(val, validClasses, validAttributes, 'RegisterRobotAction', 'ActionGoal')
            obj.ActionGoal = val;
        end
        function set.ActionResult(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.stdr_msgs.RegisterRobotActionResult'};
            validateattributes(val, validClasses, validAttributes, 'RegisterRobotAction', 'ActionResult')
            obj.ActionResult = val;
        end
        function set.ActionFeedback(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.stdr_msgs.RegisterRobotActionFeedback'};
            validateattributes(val, validClasses, validAttributes, 'RegisterRobotAction', 'ActionFeedback')
            obj.ActionFeedback = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.stdr_msgs.RegisterRobotAction.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.stdr_msgs.RegisterRobotAction(strObj);
        end
    end
end
