
classdef JTCartesianControllerState < ros.Message
    %JTCartesianControllerState MATLAB implementation of robot_mechanism_controllers/JTCartesianControllerState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robot_mechanism_controllers/JTCartesianControllerState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '6ecdaa599ea0d27643819ae4cd4c43d0' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'X' 'XDesi' 'XDesiFiltered' 'XErr' 'Xd' 'XdDesi' 'F' 'J' 'N' 'TauPose' 'TauPosture' 'Tau' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'x' 'x_desi' 'x_desi_filtered' 'x_err' 'xd' 'xd_desi' 'F' 'J' 'N' 'tau_pose' 'tau_posture' 'tau' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.Twist' ...
            'ros.msggen.geometry_msgs.Twist' ...
            'ros.msggen.geometry_msgs.Twist' ...
            'ros.msggen.geometry_msgs.Wrench' ...
            'ros.msggen.std_msgs.Float64MultiArray' ...
            'ros.msggen.std_msgs.Float64MultiArray' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        X
        XDesi
        XDesiFiltered
        XErr
        Xd
        XdDesi
        F
        J
        N
        TauPose
        TauPosture
        Tau
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'Header')
            obj.Header = val;
        end
        function set.X(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'X')
            obj.X = val;
        end
        function set.XDesi(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'XDesi')
            obj.XDesi = val;
        end
        function set.XDesiFiltered(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'XDesiFiltered')
            obj.XDesiFiltered = val;
        end
        function set.XErr(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Twist'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'XErr')
            obj.XErr = val;
        end
        function set.Xd(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Twist'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'Xd')
            obj.Xd = val;
        end
        function set.XdDesi(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Twist'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'XdDesi')
            obj.XdDesi = val;
        end
        function set.F(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Wrench'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'F')
            obj.F = val;
        end
        function set.J(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Float64MultiArray'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'J')
            obj.J = val;
        end
        function set.N(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Float64MultiArray'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'N')
            obj.N = val;
        end
        function set.TauPose(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'TauPose');
            obj.TauPose = double(val);
        end
        function set.TauPosture(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'TauPosture');
            obj.TauPosture = double(val);
        end
        function set.Tau(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = double.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'JTCartesianControllerState', 'Tau');
            obj.Tau = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robot_mechanism_controllers.JTCartesianControllerState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robot_mechanism_controllers.JTCartesianControllerState(strObj);
        end
    end
end
