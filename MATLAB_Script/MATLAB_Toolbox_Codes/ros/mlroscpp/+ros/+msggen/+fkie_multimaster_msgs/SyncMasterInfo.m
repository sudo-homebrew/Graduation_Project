
classdef SyncMasterInfo < ros.Message
    %SyncMasterInfo MATLAB implementation of fkie_multimaster_msgs/SyncMasterInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'fkie_multimaster_msgs/SyncMasterInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ba4b02792114bcc4bae507c60dd14d66' % The MD5 Checksum of the message definition
        PropertyList = { 'Publisher' 'Subscriber' 'Services' 'Masteruri' 'Nodes' } % List of non-constant message properties
        ROSPropertyList = { 'publisher' 'subscriber' 'services' 'masteruri' 'nodes' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.fkie_multimaster_msgs.SyncTopicInfo' ...
            'ros.msggen.fkie_multimaster_msgs.SyncTopicInfo' ...
            'ros.msggen.fkie_multimaster_msgs.SyncServiceInfo' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Publisher
        Subscriber
        Services
        Masteruri
        Nodes
    end
    methods
        function set.Publisher(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.fkie_multimaster_msgs.SyncTopicInfo.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.fkie_multimaster_msgs.SyncTopicInfo'};
            validateattributes(val, validClasses, validAttributes, 'SyncMasterInfo', 'Publisher')
            obj.Publisher = val;
        end
        function set.Subscriber(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.fkie_multimaster_msgs.SyncTopicInfo.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.fkie_multimaster_msgs.SyncTopicInfo'};
            validateattributes(val, validClasses, validAttributes, 'SyncMasterInfo', 'Subscriber')
            obj.Subscriber = val;
        end
        function set.Services(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.fkie_multimaster_msgs.SyncServiceInfo.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.fkie_multimaster_msgs.SyncServiceInfo'};
            validateattributes(val, validClasses, validAttributes, 'SyncMasterInfo', 'Services')
            obj.Services = val;
        end
        function set.Masteruri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SyncMasterInfo', 'Masteruri');
            obj.Masteruri = char(val);
        end
        function set.Nodes(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'SyncMasterInfo', 'Nodes');
            obj.Nodes = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.fkie_multimaster_msgs.SyncMasterInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.fkie_multimaster_msgs.SyncMasterInfo(strObj);
        end
    end
end
