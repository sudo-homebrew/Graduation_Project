
classdef ROSMaster < ros.Message
    %ROSMaster MATLAB implementation of fkie_multimaster_msgs/ROSMaster
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'fkie_multimaster_msgs/ROSMaster' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0789d85e02ce55a78b1df2459150a275' % The MD5 Checksum of the message definition
        PropertyList = { 'LastChange' 'LastChangeLocal' 'Name' 'Uri' 'Online' 'DiscovererName' 'Monitoruri' } % List of non-constant message properties
        ROSPropertyList = { 'last_change' 'last_change_local' 'name' 'uri' 'online' 'discoverer_name' 'monitoruri' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msg.Time' ...
            'ros.msg.Time' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LastChange
        LastChangeLocal
        Name
        Uri
        Online
        DiscovererName
        Monitoruri
    end
    methods
        function set.LastChange(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'LastChange')
            obj.LastChange = val;
        end
        function set.LastChangeLocal(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.Time'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'LastChangeLocal')
            obj.LastChangeLocal = val;
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Name');
            obj.Name = char(val);
        end
        function set.Uri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Uri');
            obj.Uri = char(val);
        end
        function set.Online(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Online');
            obj.Online = logical(val);
        end
        function set.DiscovererName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'DiscovererName');
            obj.DiscovererName = char(val);
        end
        function set.Monitoruri(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ROSMaster', 'Monitoruri');
            obj.Monitoruri = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.fkie_multimaster_msgs.ROSMaster.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.fkie_multimaster_msgs.ROSMaster(strObj);
        end
    end
end
