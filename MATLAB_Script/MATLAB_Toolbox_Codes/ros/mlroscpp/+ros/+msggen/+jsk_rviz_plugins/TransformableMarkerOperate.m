
classdef TransformableMarkerOperate < ros.Message
    %TransformableMarkerOperate MATLAB implementation of jsk_rviz_plugins/TransformableMarkerOperate
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'jsk_rviz_plugins/TransformableMarkerOperate' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '3f5042567d7e11634fa94e4b5452169c' % The MD5 Checksum of the message definition
        PropertyList = { 'Type' 'Action' 'FrameId' 'Name' 'Description' 'MeshResource' 'MeshUseEmbeddedMaterials' } % List of non-constant message properties
        ROSPropertyList = { 'type' 'action' 'frame_id' 'name' 'description' 'mesh_resource' 'mesh_use_embedded_materials' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        BOX = uint8(0)
        CYLINDER = uint8(1)
        TORUS = uint8(2)
        MESHRESOURCE = uint8(3)
        INSERT = uint8(0)
        ERASE = uint8(1)
        ERASEALL = uint8(2)
        ERASEFOCUS = uint8(3)
        COPY = uint8(4)
    end
    properties
        Type
        Action
        FrameId
        Name
        Description
        MeshResource
        MeshUseEmbeddedMaterials
    end
    methods
        function set.Type(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'Type');
            obj.Type = int32(val);
        end
        function set.Action(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'Action');
            obj.Action = int32(val);
        end
        function set.FrameId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'FrameId');
            obj.FrameId = char(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'Name');
            obj.Name = char(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'Description');
            obj.Description = char(val);
        end
        function set.MeshResource(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'MeshResource');
            obj.MeshResource = char(val);
        end
        function set.MeshUseEmbeddedMaterials(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TransformableMarkerOperate', 'MeshUseEmbeddedMaterials');
            obj.MeshUseEmbeddedMaterials = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.jsk_rviz_plugins.TransformableMarkerOperate.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.jsk_rviz_plugins.TransformableMarkerOperate(strObj);
        end
    end
end
