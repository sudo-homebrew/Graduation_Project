
classdef OverlayMenu < ros.Message
    %OverlayMenu MATLAB implementation of jsk_rviz_plugins/OverlayMenu
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'jsk_rviz_plugins/OverlayMenu' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '517426ba068ca022d86cf2c56c98889f' % The MD5 Checksum of the message definition
        PropertyList = { 'BgColor' 'FgColor' 'Action' 'CurrentIndex' 'Menus' 'Title' } % List of non-constant message properties
        ROSPropertyList = { 'bg_color' 'fg_color' 'action' 'current_index' 'menus' 'title' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.ColorRGBA' ...
            'ros.msggen.std_msgs.ColorRGBA' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        ACTIONSELECT = int32(0)
        ACTIONCLOSE = int32(1)
    end
    properties
        BgColor
        FgColor
        Action
        CurrentIndex
        Menus
        Title
    end
    methods
        function set.BgColor(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.ColorRGBA'};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'BgColor')
            obj.BgColor = val;
        end
        function set.FgColor(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.ColorRGBA'};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'FgColor')
            obj.FgColor = val;
        end
        function set.Action(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'Action');
            obj.Action = int32(val);
        end
        function set.CurrentIndex(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'CurrentIndex');
            obj.CurrentIndex = uint32(val);
        end
        function set.Menus(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'Menus');
            obj.Menus = cell(val);
        end
        function set.Title(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'OverlayMenu', 'Title');
            obj.Title = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.jsk_rviz_plugins.OverlayMenu.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.jsk_rviz_plugins.OverlayMenu(strObj);
        end
    end
end
