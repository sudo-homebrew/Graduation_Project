
classdef PanoramaImg < ros.Message
    %PanoramaImg MATLAB implementation of turtlebot_msgs/PanoramaImg
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'turtlebot_msgs/PanoramaImg' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'aedf66295b374a7249a786af27aecc87' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Image' 'PanoId' 'Latitude' 'Longitude' 'Heading' 'GeoTag' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'image' 'pano_id' 'latitude' 'longitude' 'heading' 'geo_tag' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msg.sensor_msgs.Image' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Image
        PanoId
        Latitude
        Longitude
        Heading
        GeoTag
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'Header')
            obj.Header = val;
        end
        function set.Image(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.sensor_msgs.Image'};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'Image')
            obj.Image = val;
        end
        function set.PanoId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'PanoId');
            obj.PanoId = char(val);
        end
        function set.Latitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'Latitude');
            obj.Latitude = double(val);
        end
        function set.Longitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'Longitude');
            obj.Longitude = double(val);
        end
        function set.Heading(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'Heading');
            obj.Heading = double(val);
        end
        function set.GeoTag(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PanoramaImg', 'GeoTag');
            obj.GeoTag = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.turtlebot_msgs.PanoramaImg.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.turtlebot_msgs.PanoramaImg(strObj);
        end
    end
end
