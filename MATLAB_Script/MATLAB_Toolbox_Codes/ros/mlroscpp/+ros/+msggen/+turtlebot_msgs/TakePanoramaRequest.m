
classdef TakePanoramaRequest < ros.Message
    %TakePanoramaRequest MATLAB implementation of turtlebot_msgs/TakePanoramaRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'turtlebot_msgs/TakePanoramaRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f52c694c82704221735cc576c7587ecc' % The MD5 Checksum of the message definition
        PropertyList = { 'Mode' 'PanoAngle' 'SnapInterval' 'RotVel' } % List of non-constant message properties
        ROSPropertyList = { 'mode' 'pano_angle' 'snap_interval' 'rot_vel' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        SNAPANDROTATE = uint8(0)
        CONTINUOUS = uint8(1)
        STOP = uint8(2)
    end
    properties
        Mode
        PanoAngle
        SnapInterval
        RotVel
    end
    methods
        function set.Mode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TakePanoramaRequest', 'Mode');
            obj.Mode = uint8(val);
        end
        function set.PanoAngle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TakePanoramaRequest', 'PanoAngle');
            obj.PanoAngle = single(val);
        end
        function set.SnapInterval(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TakePanoramaRequest', 'SnapInterval');
            obj.SnapInterval = single(val);
        end
        function set.RotVel(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'TakePanoramaRequest', 'RotVel');
            obj.RotVel = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.turtlebot_msgs.TakePanoramaRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.turtlebot_msgs.TakePanoramaRequest(strObj);
        end
    end
end
