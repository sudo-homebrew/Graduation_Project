
classdef ParamDescription < ros.Message
    %ParamDescription MATLAB implementation of dynamic_reconfigure/ParamDescription
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'dynamic_reconfigure/ParamDescription' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7434fcb9348c13054e0c3b267c8cb34d' % The MD5 Checksum of the message definition
        PropertyList = { 'Name' 'Type' 'Level' 'Description' 'EditMethod' } % List of non-constant message properties
        ROSPropertyList = { 'name' 'type' 'level' 'description' 'edit_method' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Name
        Type
        Level
        Description
        EditMethod
    end
    methods
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ParamDescription', 'Name');
            obj.Name = char(val);
        end
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ParamDescription', 'Type');
            obj.Type = char(val);
        end
        function set.Level(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ParamDescription', 'Level');
            obj.Level = uint32(val);
        end
        function set.Description(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ParamDescription', 'Description');
            obj.Description = char(val);
        end
        function set.EditMethod(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ParamDescription', 'EditMethod');
            obj.EditMethod = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.dynamic_reconfigure.ParamDescription.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.dynamic_reconfigure.ParamDescription(strObj);
        end
    end
end
