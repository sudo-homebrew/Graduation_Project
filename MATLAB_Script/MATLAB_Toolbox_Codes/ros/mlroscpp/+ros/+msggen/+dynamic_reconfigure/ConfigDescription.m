
classdef ConfigDescription < ros.Message
    %ConfigDescription MATLAB implementation of dynamic_reconfigure/ConfigDescription
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'dynamic_reconfigure/ConfigDescription' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '757ce9d44ba8ddd801bb30bc456f946f' % The MD5 Checksum of the message definition
        PropertyList = { 'Groups' 'Max' 'Min' 'Dflt' } % List of non-constant message properties
        ROSPropertyList = { 'groups' 'max' 'min' 'dflt' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.dynamic_reconfigure.Group' ...
            'ros.msggen.dynamic_reconfigure.Config' ...
            'ros.msggen.dynamic_reconfigure.Config' ...
            'ros.msggen.dynamic_reconfigure.Config' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Groups
        Max
        Min
        Dflt
    end
    methods
        function set.Groups(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.dynamic_reconfigure.Group.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.dynamic_reconfigure.Group'};
            validateattributes(val, validClasses, validAttributes, 'ConfigDescription', 'Groups')
            obj.Groups = val;
        end
        function set.Max(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.dynamic_reconfigure.Config'};
            validateattributes(val, validClasses, validAttributes, 'ConfigDescription', 'Max')
            obj.Max = val;
        end
        function set.Min(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.dynamic_reconfigure.Config'};
            validateattributes(val, validClasses, validAttributes, 'ConfigDescription', 'Min')
            obj.Min = val;
        end
        function set.Dflt(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.dynamic_reconfigure.Config'};
            validateattributes(val, validClasses, validAttributes, 'ConfigDescription', 'Dflt')
            obj.Dflt = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.dynamic_reconfigure.ConfigDescription.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.dynamic_reconfigure.ConfigDescription(strObj);
        end
    end
end
