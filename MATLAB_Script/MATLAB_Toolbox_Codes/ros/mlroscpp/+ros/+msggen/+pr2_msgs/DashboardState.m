
classdef DashboardState < ros.Message
    %DashboardState MATLAB implementation of pr2_msgs/DashboardState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_msgs/DashboardState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'db0cd0d535d75e0f6257b20c403e87f5' % The MD5 Checksum of the message definition
        PropertyList = { 'MotorsHalted' 'PowerBoardState' 'PowerState' 'AccessPoint' 'MotorsHaltedValid' 'PowerBoardStateValid' 'PowerStateValid' 'AccessPointValid' } % List of non-constant message properties
        ROSPropertyList = { 'motors_halted' 'power_board_state' 'power_state' 'access_point' 'motors_halted_valid' 'power_board_state_valid' 'power_state_valid' 'access_point_valid' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Bool' ...
            'ros.msggen.pr2_msgs.PowerBoardState' ...
            'ros.msggen.pr2_msgs.PowerState' ...
            'ros.msggen.pr2_msgs.AccessPoint' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        MotorsHalted
        PowerBoardState
        PowerState
        AccessPoint
        MotorsHaltedValid
        PowerBoardStateValid
        PowerStateValid
        AccessPointValid
    end
    methods
        function set.MotorsHalted(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Bool'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'MotorsHalted')
            obj.MotorsHalted = val;
        end
        function set.PowerBoardState(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.pr2_msgs.PowerBoardState'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'PowerBoardState')
            obj.PowerBoardState = val;
        end
        function set.PowerState(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.pr2_msgs.PowerState'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'PowerState')
            obj.PowerState = val;
        end
        function set.AccessPoint(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.pr2_msgs.AccessPoint'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'AccessPoint')
            obj.AccessPoint = val;
        end
        function set.MotorsHaltedValid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'MotorsHaltedValid');
            obj.MotorsHaltedValid = logical(val);
        end
        function set.PowerBoardStateValid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'PowerBoardStateValid');
            obj.PowerBoardStateValid = logical(val);
        end
        function set.PowerStateValid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'PowerStateValid');
            obj.PowerStateValid = logical(val);
        end
        function set.AccessPointValid(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DashboardState', 'AccessPointValid');
            obj.AccessPointValid = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_msgs.DashboardState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_msgs.DashboardState(strObj);
        end
    end
end
