
classdef GPUStatus < ros.Message
    %GPUStatus MATLAB implementation of pr2_msgs/GPUStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_msgs/GPUStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '4c74e5474b8aade04e56108262099c6e' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'ProductName' 'PciDeviceId' 'PciLocation' 'Display' 'DriverVersion' 'Temperature' 'FanSpeed' 'GpuUsage' 'MemoryUsage' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'product_name' 'pci_device_id' 'pci_location' 'display' 'driver_version' 'temperature' 'fan_speed' 'gpu_usage' 'memory_usage' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        ProductName
        PciDeviceId
        PciLocation
        Display
        DriverVersion
        Temperature
        FanSpeed
        GpuUsage
        MemoryUsage
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'Header')
            obj.Header = val;
        end
        function set.ProductName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'ProductName');
            obj.ProductName = char(val);
        end
        function set.PciDeviceId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'PciDeviceId');
            obj.PciDeviceId = char(val);
        end
        function set.PciLocation(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'PciLocation');
            obj.PciLocation = char(val);
        end
        function set.Display(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'Display');
            obj.Display = char(val);
        end
        function set.DriverVersion(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'DriverVersion');
            obj.DriverVersion = char(val);
        end
        function set.Temperature(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'Temperature');
            obj.Temperature = single(val);
        end
        function set.FanSpeed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'FanSpeed');
            obj.FanSpeed = single(val);
        end
        function set.GpuUsage(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'GpuUsage');
            obj.GpuUsage = single(val);
        end
        function set.MemoryUsage(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GPUStatus', 'MemoryUsage');
            obj.MemoryUsage = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_msgs.GPUStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_msgs.GPUStatus(strObj);
        end
    end
end
