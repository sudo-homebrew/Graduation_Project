
classdef BatteryState < ros.Message
    %BatteryState MATLAB implementation of pr2_msgs/BatteryState
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'pr2_msgs/BatteryState' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '00e9f996c2fc26700fd25abcd8422db0' % The MD5 Checksum of the message definition
        PropertyList = { 'LastTimeBattery' 'BatReg' 'BatRegFlag' 'BatRegTime' } % List of non-constant message properties
        ROSPropertyList = { 'lastTimeBattery' 'batReg' 'batRegFlag' 'batRegTime' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LastTimeBattery
        BatReg
        BatRegFlag
        BatRegTime
    end
    methods
        function set.LastTimeBattery(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BatteryState', 'LastTimeBattery');
            obj.LastTimeBattery = int32(val);
        end
        function set.BatReg(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 48};
            validateattributes(val, validClasses, validAttributes, 'BatteryState', 'BatReg');
            obj.BatReg = uint16(val);
        end
        function set.BatRegFlag(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 48};
            validateattributes(val, validClasses, validAttributes, 'BatteryState', 'BatRegFlag');
            obj.BatRegFlag = uint16(val);
        end
        function set.BatRegTime(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 48};
            validateattributes(val, validClasses, validAttributes, 'BatteryState', 'BatRegTime');
            obj.BatRegTime = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.pr2_msgs.BatteryState.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.pr2_msgs.BatteryState(strObj);
        end
    end
end
