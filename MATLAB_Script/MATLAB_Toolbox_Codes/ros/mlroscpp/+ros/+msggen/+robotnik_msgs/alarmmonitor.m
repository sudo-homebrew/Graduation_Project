
classdef alarmmonitor < ros.Message
    %alarmmonitor MATLAB implementation of robotnik_msgs/alarmmonitor
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/alarmmonitor' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'bb3d91213f2300b7fc9bb9063b1a7b1e' % The MD5 Checksum of the message definition
        PropertyList = { 'Type' 'Display' 'Component' 'Hmi' 'Group' 'Text' 'SecondsActive' } % List of non-constant message properties
        ROSPropertyList = { 'type' 'display' 'component' 'hmi' 'group' 'text' 'seconds_active' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Type
        Display
        Component
        Hmi
        Group
        Text
        SecondsActive
    end
    methods
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Type');
            obj.Type = char(val);
        end
        function set.Display(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Display');
            obj.Display = int32(val);
        end
        function set.Component(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Component');
            obj.Component = char(val);
        end
        function set.Hmi(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Hmi');
            obj.Hmi = logical(val);
        end
        function set.Group(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Group');
            obj.Group = char(val);
        end
        function set.Text(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'Text');
            obj.Text = char(val);
        end
        function set.SecondsActive(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'alarmmonitor', 'SecondsActive');
            obj.SecondsActive = uint64(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.alarmmonitor.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.alarmmonitor(strObj);
        end
    end
end
