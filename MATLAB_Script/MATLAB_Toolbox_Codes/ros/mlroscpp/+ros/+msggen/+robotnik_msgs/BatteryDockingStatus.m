
classdef BatteryDockingStatus < ros.Message
    %BatteryDockingStatus MATLAB implementation of robotnik_msgs/BatteryDockingStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/BatteryDockingStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd7c3a4e25e4a4a665c4a1dd0862edfc2' % The MD5 Checksum of the message definition
        PropertyList = { 'OperationMode' 'ContactRelayStatus' 'ChargerRelayStatus' } % List of non-constant message properties
        ROSPropertyList = { 'operation_mode' 'contact_relay_status' 'charger_relay_status' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        MODEDISABLED = 'disabled';
        MODEAUTOHW = 'automatic_hw';
        MODEAUTOSW = 'automatic_sw';
        MODEMANUALSW = 'manual_sw';
    end
    properties
        OperationMode
        ContactRelayStatus
        ChargerRelayStatus
    end
    methods
        function set.OperationMode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'BatteryDockingStatus', 'OperationMode');
            obj.OperationMode = char(val);
        end
        function set.ContactRelayStatus(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BatteryDockingStatus', 'ContactRelayStatus');
            obj.ContactRelayStatus = logical(val);
        end
        function set.ChargerRelayStatus(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'BatteryDockingStatus', 'ChargerRelayStatus');
            obj.ChargerRelayStatus = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.BatteryDockingStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.BatteryDockingStatus(strObj);
        end
    end
end
