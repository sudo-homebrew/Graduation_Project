
classdef set_ptzRequest < ros.Message
    %set_ptzRequest MATLAB implementation of robotnik_msgs/set_ptzRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/set_ptzRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '84c4d3942670b5782592e834a63c50ba' % The MD5 Checksum of the message definition
        PropertyList = { 'Pan' 'Tilt' 'Zoom' 'Relative' } % List of non-constant message properties
        ROSPropertyList = { 'pan' 'tilt' 'zoom' 'relative' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Pan
        Tilt
        Zoom
        Relative
    end
    methods
        function set.Pan(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'set_ptzRequest', 'Pan');
            obj.Pan = single(val);
        end
        function set.Tilt(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'set_ptzRequest', 'Tilt');
            obj.Tilt = single(val);
        end
        function set.Zoom(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'set_ptzRequest', 'Zoom');
            obj.Zoom = single(val);
        end
        function set.Relative(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'set_ptzRequest', 'Relative');
            obj.Relative = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.set_ptzRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.set_ptzRequest(strObj);
        end
    end
end
