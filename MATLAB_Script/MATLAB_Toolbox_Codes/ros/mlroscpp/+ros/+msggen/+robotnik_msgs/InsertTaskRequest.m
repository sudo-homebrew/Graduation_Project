
classdef InsertTaskRequest < ros.Message
    %InsertTaskRequest MATLAB implementation of robotnik_msgs/InsertTaskRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/InsertTaskRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '415fc1cb1de92194825450f4e7e89346' % The MD5 Checksum of the message definition
        PropertyList = { 'IdSubmission' 'DescriptionTask' 'DatatimeStart' } % List of non-constant message properties
        ROSPropertyList = { 'id_submission' 'description_task' 'datatime_start' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        IdSubmission
        DescriptionTask
        DatatimeStart
    end
    methods
        function set.IdSubmission(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'InsertTaskRequest', 'IdSubmission');
            obj.IdSubmission = int32(val);
        end
        function set.DescriptionTask(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'InsertTaskRequest', 'DescriptionTask');
            obj.DescriptionTask = char(val);
        end
        function set.DatatimeStart(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'InsertTaskRequest', 'DatatimeStart');
            obj.DatatimeStart = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.InsertTaskRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.InsertTaskRequest(strObj);
        end
    end
end
