
classdef QueryAlarm < ros.Message
    %QueryAlarm MATLAB implementation of robotnik_msgs/QueryAlarm
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/QueryAlarm' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'f3c7e9979cb91a050b98067ffb98adff' % The MD5 Checksum of the message definition
        PropertyList = { 'AlmId' 'AlmComponent' 'AlmType' 'AlmGroup' 'AlmDescription' 'AlmStartTime' 'AlmEndTime' } % List of non-constant message properties
        ROSPropertyList = { 'alm_id' 'alm_component' 'alm_type' 'alm_group' 'alm_description' 'alm_start_time' 'alm_end_time' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        AlmId
        AlmComponent
        AlmType
        AlmGroup
        AlmDescription
        AlmStartTime
        AlmEndTime
    end
    methods
        function set.AlmId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmId');
            obj.AlmId = int32(val);
        end
        function set.AlmComponent(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmComponent');
            obj.AlmComponent = char(val);
        end
        function set.AlmType(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmType');
            obj.AlmType = char(val);
        end
        function set.AlmGroup(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmGroup');
            obj.AlmGroup = char(val);
        end
        function set.AlmDescription(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmDescription');
            obj.AlmDescription = char(val);
        end
        function set.AlmStartTime(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmStartTime');
            obj.AlmStartTime = char(val);
        end
        function set.AlmEndTime(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'QueryAlarm', 'AlmEndTime');
            obj.AlmEndTime = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.QueryAlarm.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.QueryAlarm(strObj);
        end
    end
end
