
classdef ElevatorStatus < ros.Message
    %ElevatorStatus MATLAB implementation of robotnik_msgs/ElevatorStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/ElevatorStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '4718bff9866c729031e595e6565fdb82' % The MD5 Checksum of the message definition
        PropertyList = { 'State' 'Position' 'Height' } % List of non-constant message properties
        ROSPropertyList = { 'state' 'position' 'height' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        RAISING = 'raising';
        LOWERING = 'lowering';
        IDLE = 'idle';
        ERRORGIO = 'error_getting_io';
        ERRORSIO = 'error_setting_io';
        ERRORTIMEOUT = 'error_timeout_in_action';
        UP = 'up';
        DOWN = 'down';
        UNKNOWN = 'unknown';
    end
    properties
        State
        Position
        Height
    end
    methods
        function set.State(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ElevatorStatus', 'State');
            obj.State = char(val);
        end
        function set.Position(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ElevatorStatus', 'Position');
            obj.Position = char(val);
        end
        function set.Height(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'ElevatorStatus', 'Height');
            obj.Height = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.ElevatorStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.ElevatorStatus(strObj);
        end
    end
end
