
classdef ack_alarmRequest < ros.Message
    %ack_alarmRequest MATLAB implementation of robotnik_msgs/ack_alarmRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/ack_alarmRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '08bf6c7af230042c74ae53f2fec1793e' % The MD5 Checksum of the message definition
        PropertyList = { 'Type' 'Group' } % List of non-constant message properties
        ROSPropertyList = { 'type' 'group' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Type
        Group
    end
    methods
        function set.Type(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ack_alarmRequest', 'Type');
            obj.Type = char(val);
        end
        function set.Group(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'ack_alarmRequest', 'Group');
            obj.Group = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.ack_alarmRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.ack_alarmRequest(strObj);
        end
    end
end
