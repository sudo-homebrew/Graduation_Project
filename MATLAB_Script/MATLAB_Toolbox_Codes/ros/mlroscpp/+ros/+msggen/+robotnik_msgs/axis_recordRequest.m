
classdef axis_recordRequest < ros.Message
    %axis_recordRequest MATLAB implementation of robotnik_msgs/axis_recordRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'robotnik_msgs/axis_recordRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '39a90fb80eeb30fd1922ed05ed1384be' % The MD5 Checksum of the message definition
        PropertyList = { 'Action' 'Directory' 'Profile' 'Id' } % List of non-constant message properties
        ROSPropertyList = { 'action' 'directory' 'profile' 'id' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Action
        Directory
        Profile
        Id
    end
    methods
        function set.Action(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'axis_recordRequest', 'Action');
            obj.Action = int8(val);
        end
        function set.Directory(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'axis_recordRequest', 'Directory');
            obj.Directory = char(val);
        end
        function set.Profile(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'axis_recordRequest', 'Profile');
            obj.Profile = char(val);
        end
        function set.Id(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'axis_recordRequest', 'Id');
            obj.Id = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.robotnik_msgs.axis_recordRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.robotnik_msgs.axis_recordRequest(strObj);
        end
    end
end
