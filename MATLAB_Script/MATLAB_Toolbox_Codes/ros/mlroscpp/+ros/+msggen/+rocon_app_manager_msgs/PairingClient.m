
classdef PairingClient < ros.Message
    %PairingClient MATLAB implementation of rocon_app_manager_msgs/PairingClient
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rocon_app_manager_msgs/PairingClient' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '0a8112672c3fbf73cb62ec78d67e41bb' % The MD5 Checksum of the message definition
        PropertyList = { 'ManagerData' 'AppData' 'ClientType' } % List of non-constant message properties
        ROSPropertyList = { 'manager_data' 'app_data' 'client_type' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.rocon_app_manager_msgs.KeyValue' ...
            'ros.msggen.rocon_app_manager_msgs.KeyValue' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        ManagerData
        AppData
        ClientType
    end
    methods
        function set.ManagerData(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.rocon_app_manager_msgs.KeyValue.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.rocon_app_manager_msgs.KeyValue'};
            validateattributes(val, validClasses, validAttributes, 'PairingClient', 'ManagerData')
            obj.ManagerData = val;
        end
        function set.AppData(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.rocon_app_manager_msgs.KeyValue.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.rocon_app_manager_msgs.KeyValue'};
            validateattributes(val, validClasses, validAttributes, 'PairingClient', 'AppData')
            obj.AppData = val;
        end
        function set.ClientType(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PairingClient', 'ClientType');
            obj.ClientType = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rocon_app_manager_msgs.PairingClient.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rocon_app_manager_msgs.PairingClient(strObj);
        end
    end
end
