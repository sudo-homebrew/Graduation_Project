
classdef PlatformInfo < ros.Message
    %PlatformInfo MATLAB implementation of rocon_app_manager_msgs/PlatformInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rocon_app_manager_msgs/PlatformInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '18db61d835a2c85545a016989914665e' % The MD5 Checksum of the message definition
        PropertyList = { 'Icon' 'Platform' 'System' 'Robot' 'Name' } % List of non-constant message properties
        ROSPropertyList = { 'icon' 'platform' 'system' 'robot' 'name' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.rocon_app_manager_msgs.Icon' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
        PLATFORMANY = '*';
        PLATFORMLINUX = 'linux';
        PLATFORMWINDOZE = 'windoze';
        PLATFORMANDROID = 'android';
        SYSTEMCUSTOM = 'custom';
        SYSTEMROS = 'ros';
        SYSTEMOPROS = 'opros';
        ROBOTANY = '*';
        ROBOTPC = 'pc';
        ROBOTROBOSEM = 'robosem';
        ROBOTKOBUKI = 'kobuki';
        ROBOTTURTLEBOT = 'turtlebot';
    end
    properties
        Icon
        Platform
        System
        Robot
        Name
    end
    methods
        function set.Icon(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.rocon_app_manager_msgs.Icon'};
            validateattributes(val, validClasses, validAttributes, 'PlatformInfo', 'Icon')
            obj.Icon = val;
        end
        function set.Platform(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PlatformInfo', 'Platform');
            obj.Platform = char(val);
        end
        function set.System(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PlatformInfo', 'System');
            obj.System = char(val);
        end
        function set.Robot(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PlatformInfo', 'Robot');
            obj.Robot = char(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'PlatformInfo', 'Name');
            obj.Name = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rocon_app_manager_msgs.PlatformInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rocon_app_manager_msgs.PlatformInfo(strObj);
        end
    end
end
