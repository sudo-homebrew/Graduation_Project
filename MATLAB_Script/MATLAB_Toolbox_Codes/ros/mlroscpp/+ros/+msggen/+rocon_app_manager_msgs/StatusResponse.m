
classdef StatusResponse < ros.Message
    %StatusResponse MATLAB implementation of rocon_app_manager_msgs/StatusResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rocon_app_manager_msgs/StatusResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '549cefdd5ebd893b04e084dde8f31530' % The MD5 Checksum of the message definition
        PropertyList = { 'Application' 'ApplicationNamespace' 'RemoteController' 'ApplicationStatus' } % List of non-constant message properties
        ROSPropertyList = { 'application' 'application_namespace' 'remote_controller' 'application_status' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.rocon_app_manager_msgs.App' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Application
        ApplicationNamespace
        RemoteController
        ApplicationStatus
    end
    methods
        function set.Application(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.rocon_app_manager_msgs.App'};
            validateattributes(val, validClasses, validAttributes, 'StatusResponse', 'Application')
            obj.Application = val;
        end
        function set.ApplicationNamespace(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'StatusResponse', 'ApplicationNamespace');
            obj.ApplicationNamespace = char(val);
        end
        function set.RemoteController(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'StatusResponse', 'RemoteController');
            obj.RemoteController = char(val);
        end
        function set.ApplicationStatus(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'StatusResponse', 'ApplicationStatus');
            obj.ApplicationStatus = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rocon_app_manager_msgs.StatusResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rocon_app_manager_msgs.StatusResponse(strObj);
        end
    end
end
