
classdef joint < ros.Message
    %joint MATLAB implementation of sr_robot_msgs/joint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'sr_robot_msgs/joint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '4f0c5e71dfc214020935c3116ed47d6f' % The MD5 Checksum of the message definition
        PropertyList = { 'JointName' 'JointPosition' 'JointTarget' 'JointTorque' 'JointTemperature' 'JointCurrent' 'ErrorFlag' } % List of non-constant message properties
        ROSPropertyList = { 'joint_name' 'joint_position' 'joint_target' 'joint_torque' 'joint_temperature' 'joint_current' 'error_flag' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        JointName
        JointPosition
        JointTarget
        JointTorque
        JointTemperature
        JointCurrent
        ErrorFlag
    end
    methods
        function set.JointName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointName');
            obj.JointName = char(val);
        end
        function set.JointPosition(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointPosition');
            obj.JointPosition = double(val);
        end
        function set.JointTarget(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointTarget');
            obj.JointTarget = double(val);
        end
        function set.JointTorque(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointTorque');
            obj.JointTorque = double(val);
        end
        function set.JointTemperature(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointTemperature');
            obj.JointTemperature = double(val);
        end
        function set.JointCurrent(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'joint', 'JointCurrent');
            obj.JointCurrent = double(val);
        end
        function set.ErrorFlag(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'joint', 'ErrorFlag');
            obj.ErrorFlag = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.sr_robot_msgs.joint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.sr_robot_msgs.joint(strObj);
        end
    end
end
