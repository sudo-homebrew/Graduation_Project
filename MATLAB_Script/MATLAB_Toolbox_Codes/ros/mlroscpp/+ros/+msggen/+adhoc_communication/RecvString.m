
classdef RecvString < ros.Message
    %RecvString MATLAB implementation of adhoc_communication/RecvString
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'adhoc_communication/RecvString' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '357efa7118aea6ce32be041203afb4ca' % The MD5 Checksum of the message definition
        PropertyList = { 'SrcRobot' 'Data' } % List of non-constant message properties
        ROSPropertyList = { 'src_robot' 'data' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        SrcRobot
        Data
    end
    methods
        function set.SrcRobot(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RecvString', 'SrcRobot');
            obj.SrcRobot = char(val);
        end
        function set.Data(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RecvString', 'Data');
            obj.Data = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.adhoc_communication.RecvString.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.adhoc_communication.RecvString(strObj);
        end
    end
end
