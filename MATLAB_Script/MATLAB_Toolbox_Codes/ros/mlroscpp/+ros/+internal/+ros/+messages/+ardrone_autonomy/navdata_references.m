function [data, info] = navdata_references
%navdata_references gives an empty data for ardrone_autonomy/navdata_references

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'ardrone_autonomy/navdata_references';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.DroneTime, info.DroneTime] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Tag, info.Tag] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Size, info.Size] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.RefTheta, info.RefTheta] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefPhi, info.RefPhi] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefThetaI, info.RefThetaI] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefPhiI, info.RefPhiI] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefPitch, info.RefPitch] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefRoll, info.RefRoll] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefYaw, info.RefYaw] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RefPsi, info.RefPsi] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.VxRef, info.VxRef] = ros.internal.ros.messages.ros.default_type('single',1);
[data.VyRef, info.VyRef] = ros.internal.ros.messages.ros.default_type('single',1);
[data.ThetaMod, info.ThetaMod] = ros.internal.ros.messages.ros.default_type('single',1);
[data.PhiMod, info.PhiMod] = ros.internal.ros.messages.ros.default_type('single',1);
[data.KVX, info.KVX] = ros.internal.ros.messages.ros.default_type('single',1);
[data.KVY, info.KVY] = ros.internal.ros.messages.ros.default_type('single',1);
[data.KMode, info.KMode] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.UiTime, info.UiTime] = ros.internal.ros.messages.ros.default_type('single',1);
[data.UiTheta, info.UiTheta] = ros.internal.ros.messages.ros.default_type('single',1);
[data.UiPhi, info.UiPhi] = ros.internal.ros.messages.ros.default_type('single',1);
[data.UiPsi, info.UiPsi] = ros.internal.ros.messages.ros.default_type('single',1);
[data.UiPsiAccuracy, info.UiPsiAccuracy] = ros.internal.ros.messages.ros.default_type('single',1);
[data.UiSeq, info.UiSeq] = ros.internal.ros.messages.ros.default_type('int32',1);
info.MessageType = 'ardrone_autonomy/navdata_references';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,30);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'drone_time';
info.MatPath{8} = 'tag';
info.MatPath{9} = 'size';
info.MatPath{10} = 'ref_theta';
info.MatPath{11} = 'ref_phi';
info.MatPath{12} = 'ref_theta_I';
info.MatPath{13} = 'ref_phi_I';
info.MatPath{14} = 'ref_pitch';
info.MatPath{15} = 'ref_roll';
info.MatPath{16} = 'ref_yaw';
info.MatPath{17} = 'ref_psi';
info.MatPath{18} = 'vx_ref';
info.MatPath{19} = 'vy_ref';
info.MatPath{20} = 'theta_mod';
info.MatPath{21} = 'phi_mod';
info.MatPath{22} = 'k_v_x';
info.MatPath{23} = 'k_v_y';
info.MatPath{24} = 'k_mode';
info.MatPath{25} = 'ui_time';
info.MatPath{26} = 'ui_theta';
info.MatPath{27} = 'ui_phi';
info.MatPath{28} = 'ui_psi';
info.MatPath{29} = 'ui_psi_accuracy';
info.MatPath{30} = 'ui_seq';
