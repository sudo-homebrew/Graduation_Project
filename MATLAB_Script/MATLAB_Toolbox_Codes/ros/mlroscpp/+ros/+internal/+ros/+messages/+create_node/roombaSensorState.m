function [data, info] = roombaSensorState
%RoombaSensorState gives an empty data for create_node/RoombaSensorState

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'create_node/RoombaSensorState';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.CHARGINGNOTCHARGING, info.CHARGINGNOTCHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.CHARGINGCHARGINGRECOVERY, info.CHARGINGCHARGINGRECOVERY] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.CHARGINGCHARGING, info.CHARGINGCHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.CHARGINGTRICKLECHARGING, info.CHARGINGTRICKLECHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 3);
[data.CHARGINGWAITING, info.CHARGINGWAITING] = ros.internal.ros.messages.ros.default_type('uint8',1, 4);
[data.CHARGINGCHARGINGERROR, info.CHARGINGCHARGINGERROR] = ros.internal.ros.messages.ros.default_type('uint8',1, 5);
[data.BumpsWheeldrops, info.BumpsWheeldrops] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Wall, info.Wall] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CliffLeft, info.CliffLeft] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CliffFrontLeft, info.CliffFrontLeft] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CliffFrontRight, info.CliffFrontRight] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CliffRight, info.CliffRight] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.VirtualWall, info.VirtualWall] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.MotorOvercurrents, info.MotorOvercurrents] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.DirtDetectorLeft, info.DirtDetectorLeft] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.DirtDetectorRight, info.DirtDetectorRight] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.RemoteOpcode, info.RemoteOpcode] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Buttons, info.Buttons] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Distance, info.Distance] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.Angle, info.Angle] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.ChargingState, info.ChargingState] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Voltage, info.Voltage] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Current, info.Current] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.Temperature, info.Temperature] = ros.internal.ros.messages.ros.default_type('int8',1);
[data.Charge, info.Charge] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Capacity, info.Capacity] = ros.internal.ros.messages.ros.default_type('uint16',1);
info.MessageType = 'create_node/RoombaSensorState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,32);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'CHARGING_NOT_CHARGING';
info.MatPath{8} = 'CHARGING_CHARGING_RECOVERY';
info.MatPath{9} = 'CHARGING_CHARGING';
info.MatPath{10} = 'CHARGING_TRICKLE_CHARGING';
info.MatPath{11} = 'CHARGING_WAITING';
info.MatPath{12} = 'CHARGING_CHARGING_ERROR';
info.MatPath{13} = 'bumps_wheeldrops';
info.MatPath{14} = 'wall';
info.MatPath{15} = 'cliff_left';
info.MatPath{16} = 'cliff_front_left';
info.MatPath{17} = 'cliff_front_right';
info.MatPath{18} = 'cliff_right';
info.MatPath{19} = 'virtual_wall';
info.MatPath{20} = 'motor_overcurrents';
info.MatPath{21} = 'dirt_detector_left';
info.MatPath{22} = 'dirt_detector_right';
info.MatPath{23} = 'remote_opcode';
info.MatPath{24} = 'buttons';
info.MatPath{25} = 'distance';
info.MatPath{26} = 'angle';
info.MatPath{27} = 'charging_state';
info.MatPath{28} = 'voltage';
info.MatPath{29} = 'current';
info.MatPath{30} = 'temperature';
info.MatPath{31} = 'charge';
info.MatPath{32} = 'capacity';
