function [data, info] = jointControllerState
%JointControllerState gives an empty data for sr_robot_msgs/JointControllerState

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'sr_robot_msgs/JointControllerState';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.SetPoint, info.SetPoint] = ros.internal.ros.messages.ros.default_type('double',1);
[data.ProcessValue, info.ProcessValue] = ros.internal.ros.messages.ros.default_type('double',1);
[data.ProcessValueDot, info.ProcessValueDot] = ros.internal.ros.messages.ros.default_type('double',1);
[data.CommandedVelocity, info.CommandedVelocity] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Error, info.Error] = ros.internal.ros.messages.ros.default_type('double',1);
[data.TimeStep, info.TimeStep] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Command, info.Command] = ros.internal.ros.messages.ros.default_type('double',1);
[data.MeasuredEffort, info.MeasuredEffort] = ros.internal.ros.messages.ros.default_type('double',1);
[data.FrictionCompensation, info.FrictionCompensation] = ros.internal.ros.messages.ros.default_type('double',1);
[data.PositionP, info.PositionP] = ros.internal.ros.messages.ros.default_type('double',1);
[data.PositionI, info.PositionI] = ros.internal.ros.messages.ros.default_type('double',1);
[data.PositionD, info.PositionD] = ros.internal.ros.messages.ros.default_type('double',1);
[data.PositionIClamp, info.PositionIClamp] = ros.internal.ros.messages.ros.default_type('double',1);
[data.VelocityP, info.VelocityP] = ros.internal.ros.messages.ros.default_type('double',1);
[data.VelocityI, info.VelocityI] = ros.internal.ros.messages.ros.default_type('double',1);
[data.VelocityD, info.VelocityD] = ros.internal.ros.messages.ros.default_type('double',1);
[data.VelocityIClamp, info.VelocityIClamp] = ros.internal.ros.messages.ros.default_type('double',1);
info.MessageType = 'sr_robot_msgs/JointControllerState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,23);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'set_point';
info.MatPath{8} = 'process_value';
info.MatPath{9} = 'process_value_dot';
info.MatPath{10} = 'commanded_velocity';
info.MatPath{11} = 'error';
info.MatPath{12} = 'time_step';
info.MatPath{13} = 'command';
info.MatPath{14} = 'measured_effort';
info.MatPath{15} = 'friction_compensation';
info.MatPath{16} = 'position_p';
info.MatPath{17} = 'position_i';
info.MatPath{18} = 'position_d';
info.MatPath{19} = 'position_i_clamp';
info.MatPath{20} = 'velocity_p';
info.MatPath{21} = 'velocity_i';
info.MatPath{22} = 'velocity_d';
info.MatPath{23} = 'velocity_i_clamp';
