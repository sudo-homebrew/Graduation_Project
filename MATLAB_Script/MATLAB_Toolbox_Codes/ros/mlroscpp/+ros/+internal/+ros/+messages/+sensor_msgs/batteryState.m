function [data, info] = batteryState
%BatteryState gives an empty data for sensor_msgs/BatteryState

% Copyright 2019-2020 The MathWorks, Inc.
%#codegen
data = struct();
data.MessageType = 'sensor_msgs/BatteryState';
[data.POWERSUPPLYSTATUSUNKNOWN, info.POWERSUPPLYSTATUSUNKNOWN] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.POWERSUPPLYSTATUSCHARGING, info.POWERSUPPLYSTATUSCHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.POWERSUPPLYSTATUSDISCHARGING, info.POWERSUPPLYSTATUSDISCHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.POWERSUPPLYSTATUSNOTCHARGING, info.POWERSUPPLYSTATUSNOTCHARGING] = ros.internal.ros.messages.ros.default_type('uint8',1, 3);
[data.POWERSUPPLYSTATUSFULL, info.POWERSUPPLYSTATUSFULL] = ros.internal.ros.messages.ros.default_type('uint8',1, 4);
[data.POWERSUPPLYHEALTHUNKNOWN, info.POWERSUPPLYHEALTHUNKNOWN] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.POWERSUPPLYHEALTHGOOD, info.POWERSUPPLYHEALTHGOOD] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.POWERSUPPLYHEALTHOVERHEAT, info.POWERSUPPLYHEALTHOVERHEAT] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.POWERSUPPLYHEALTHDEAD, info.POWERSUPPLYHEALTHDEAD] = ros.internal.ros.messages.ros.default_type('uint8',1, 3);
[data.POWERSUPPLYHEALTHOVERVOLTAGE, info.POWERSUPPLYHEALTHOVERVOLTAGE] = ros.internal.ros.messages.ros.default_type('uint8',1, 4);
[data.POWERSUPPLYHEALTHUNSPECFAILURE, info.POWERSUPPLYHEALTHUNSPECFAILURE] = ros.internal.ros.messages.ros.default_type('uint8',1, 5);
[data.POWERSUPPLYHEALTHCOLD, info.POWERSUPPLYHEALTHCOLD] = ros.internal.ros.messages.ros.default_type('uint8',1, 6);
[data.POWERSUPPLYHEALTHWATCHDOGTIMEREXPIRE, info.POWERSUPPLYHEALTHWATCHDOGTIMEREXPIRE] = ros.internal.ros.messages.ros.default_type('uint8',1, 7);
[data.POWERSUPPLYHEALTHSAFETYTIMEREXPIRE, info.POWERSUPPLYHEALTHSAFETYTIMEREXPIRE] = ros.internal.ros.messages.ros.default_type('uint8',1, 8);
[data.POWERSUPPLYTECHNOLOGYUNKNOWN, info.POWERSUPPLYTECHNOLOGYUNKNOWN] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.POWERSUPPLYTECHNOLOGYNIMH, info.POWERSUPPLYTECHNOLOGYNIMH] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.POWERSUPPLYTECHNOLOGYLION, info.POWERSUPPLYTECHNOLOGYLION] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.POWERSUPPLYTECHNOLOGYLIPO, info.POWERSUPPLYTECHNOLOGYLIPO] = ros.internal.ros.messages.ros.default_type('uint8',1, 3);
[data.POWERSUPPLYTECHNOLOGYLIFE, info.POWERSUPPLYTECHNOLOGYLIFE] = ros.internal.ros.messages.ros.default_type('uint8',1, 4);
[data.POWERSUPPLYTECHNOLOGYNICD, info.POWERSUPPLYTECHNOLOGYNICD] = ros.internal.ros.messages.ros.default_type('uint8',1, 5);
[data.POWERSUPPLYTECHNOLOGYLIMN, info.POWERSUPPLYTECHNOLOGYLIMN] = ros.internal.ros.messages.ros.default_type('uint8',1, 6);
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.Voltage, info.Voltage] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Temperature, info.Temperature] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Current, info.Current] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Charge, info.Charge] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Capacity, info.Capacity] = ros.internal.ros.messages.ros.default_type('single',1);
[data.DesignCapacity, info.DesignCapacity] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Percentage, info.Percentage] = ros.internal.ros.messages.ros.default_type('single',1);
[data.PowerSupplyStatus, info.PowerSupplyStatus] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.PowerSupplyHealth, info.PowerSupplyHealth] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.PowerSupplyTechnology, info.PowerSupplyTechnology] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Present, info.Present] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CellVoltage, info.CellVoltage] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.CellTemperature, info.CellTemperature] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.Location, info.Location] = ros.internal.ros.messages.ros.char('string',0);
[data.SerialNumber, info.SerialNumber] = ros.internal.ros.messages.ros.char('string',0);
info.MessageType = 'sensor_msgs/BatteryState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,42);
info.MatPath{1} = 'POWER_SUPPLY_STATUS_UNKNOWN';
info.MatPath{2} = 'POWER_SUPPLY_STATUS_CHARGING';
info.MatPath{3} = 'POWER_SUPPLY_STATUS_DISCHARGING';
info.MatPath{4} = 'POWER_SUPPLY_STATUS_NOT_CHARGING';
info.MatPath{5} = 'POWER_SUPPLY_STATUS_FULL';
info.MatPath{6} = 'POWER_SUPPLY_HEALTH_UNKNOWN';
info.MatPath{7} = 'POWER_SUPPLY_HEALTH_GOOD';
info.MatPath{8} = 'POWER_SUPPLY_HEALTH_OVERHEAT';
info.MatPath{9} = 'POWER_SUPPLY_HEALTH_DEAD';
info.MatPath{10} = 'POWER_SUPPLY_HEALTH_OVERVOLTAGE';
info.MatPath{11} = 'POWER_SUPPLY_HEALTH_UNSPEC_FAILURE';
info.MatPath{12} = 'POWER_SUPPLY_HEALTH_COLD';
info.MatPath{13} = 'POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE';
info.MatPath{14} = 'POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE';
info.MatPath{15} = 'POWER_SUPPLY_TECHNOLOGY_UNKNOWN';
info.MatPath{16} = 'POWER_SUPPLY_TECHNOLOGY_NIMH';
info.MatPath{17} = 'POWER_SUPPLY_TECHNOLOGY_LION';
info.MatPath{18} = 'POWER_SUPPLY_TECHNOLOGY_LIPO';
info.MatPath{19} = 'POWER_SUPPLY_TECHNOLOGY_LIFE';
info.MatPath{20} = 'POWER_SUPPLY_TECHNOLOGY_NICD';
info.MatPath{21} = 'POWER_SUPPLY_TECHNOLOGY_LIMN';
info.MatPath{22} = 'header';
info.MatPath{23} = 'header.seq';
info.MatPath{24} = 'header.stamp';
info.MatPath{25} = 'header.stamp.sec';
info.MatPath{26} = 'header.stamp.nsec';
info.MatPath{27} = 'header.frame_id';
info.MatPath{28} = 'voltage';
info.MatPath{29} = 'temperature';
info.MatPath{30} = 'current';
info.MatPath{31} = 'charge';
info.MatPath{32} = 'capacity';
info.MatPath{33} = 'design_capacity';
info.MatPath{34} = 'percentage';
info.MatPath{35} = 'power_supply_status';
info.MatPath{36} = 'power_supply_health';
info.MatPath{37} = 'power_supply_technology';
info.MatPath{38} = 'present';
info.MatPath{39} = 'cell_voltage';
info.MatPath{40} = 'cell_temperature';
info.MatPath{41} = 'location';
info.MatPath{42} = 'serial_number';
