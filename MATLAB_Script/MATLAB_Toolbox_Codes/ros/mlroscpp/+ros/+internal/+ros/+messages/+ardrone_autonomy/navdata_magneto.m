function [data, info] = navdata_magneto
%navdata_magneto gives an empty data for ardrone_autonomy/navdata_magneto

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'ardrone_autonomy/navdata_magneto';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.DroneTime, info.DroneTime] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Tag, info.Tag] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Size, info.Size] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Mx, info.Mx] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.My, info.My] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.Mz, info.Mz] = ros.internal.ros.messages.ros.default_type('int16',1);
[data.MagnetoRaw, info.MagnetoRaw] = ros.internal.ros.messages.ardrone_autonomy.vector31;
info.MagnetoRaw.MLdataType = 'struct';
[data.MagnetoRectified, info.MagnetoRectified] = ros.internal.ros.messages.ardrone_autonomy.vector31;
info.MagnetoRectified.MLdataType = 'struct';
[data.MagnetoOffset, info.MagnetoOffset] = ros.internal.ros.messages.ardrone_autonomy.vector31;
info.MagnetoOffset.MLdataType = 'struct';
[data.HeadingUnwrapped, info.HeadingUnwrapped] = ros.internal.ros.messages.ros.default_type('single',1);
[data.HeadingGyroUnwrapped, info.HeadingGyroUnwrapped] = ros.internal.ros.messages.ros.default_type('single',1);
[data.HeadingFusionUnwrapped, info.HeadingFusionUnwrapped] = ros.internal.ros.messages.ros.default_type('single',1);
[data.MagnetoCalibrationOk, info.MagnetoCalibrationOk] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.MagnetoState, info.MagnetoState] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.MagnetoRadius, info.MagnetoRadius] = ros.internal.ros.messages.ros.default_type('single',1);
[data.ErrorMean, info.ErrorMean] = ros.internal.ros.messages.ros.default_type('single',1);
[data.ErrorVar, info.ErrorVar] = ros.internal.ros.messages.ros.default_type('single',1);
info.MessageType = 'ardrone_autonomy/navdata_magneto';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,32);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'drone_time';
info.MatPath{8} = 'tag';
info.MatPath{9} = 'size';
info.MatPath{10} = 'mx';
info.MatPath{11} = 'my';
info.MatPath{12} = 'mz';
info.MatPath{13} = 'magneto_raw';
info.MatPath{14} = 'magneto_raw.x';
info.MatPath{15} = 'magneto_raw.y';
info.MatPath{16} = 'magneto_raw.z';
info.MatPath{17} = 'magneto_rectified';
info.MatPath{18} = 'magneto_rectified.x';
info.MatPath{19} = 'magneto_rectified.y';
info.MatPath{20} = 'magneto_rectified.z';
info.MatPath{21} = 'magneto_offset';
info.MatPath{22} = 'magneto_offset.x';
info.MatPath{23} = 'magneto_offset.y';
info.MatPath{24} = 'magneto_offset.z';
info.MatPath{25} = 'heading_unwrapped';
info.MatPath{26} = 'heading_gyro_unwrapped';
info.MatPath{27} = 'heading_fusion_unwrapped';
info.MatPath{28} = 'magneto_calibration_ok';
info.MatPath{29} = 'magneto_state';
info.MatPath{30} = 'magneto_radius';
info.MatPath{31} = 'error_mean';
info.MatPath{32} = 'error_var';
