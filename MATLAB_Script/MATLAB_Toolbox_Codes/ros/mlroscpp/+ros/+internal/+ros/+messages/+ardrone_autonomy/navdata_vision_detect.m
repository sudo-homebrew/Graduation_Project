function [data, info] = navdata_vision_detect
%navdata_vision_detect gives an empty data for ardrone_autonomy/navdata_vision_detect

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'ardrone_autonomy/navdata_vision_detect';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.DroneTime, info.DroneTime] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Tag, info.Tag] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Size, info.Size] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.NbDetected, info.NbDetected] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.Type, info.Type] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.Xc, info.Xc] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.Yc, info.Yc] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.Width, info.Width] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.Height, info.Height] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.Dist, info.Dist] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.OrientationAngle, info.OrientationAngle] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.Rotation, info.Rotation] = ros.internal.ros.messages.ardrone_autonomy.matrix33;
info.Rotation.MLdataType = 'struct';
info.Rotation.MaxLen = NaN;
info.Rotation.MinLen = 0;
data.Rotation = data.Rotation([],1);
[data.Translation, info.Translation] = ros.internal.ros.messages.ardrone_autonomy.vector31;
info.Translation.MLdataType = 'struct';
info.Translation.MaxLen = NaN;
info.Translation.MinLen = 0;
data.Translation = data.Translation([],1);
[data.CameraSource, info.CameraSource] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
info.MessageType = 'ardrone_autonomy/navdata_vision_detect';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,32);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'drone_time';
info.MatPath{8} = 'tag';
info.MatPath{9} = 'size';
info.MatPath{10} = 'nb_detected';
info.MatPath{11} = 'type';
info.MatPath{12} = 'xc';
info.MatPath{13} = 'yc';
info.MatPath{14} = 'width';
info.MatPath{15} = 'height';
info.MatPath{16} = 'dist';
info.MatPath{17} = 'orientation_angle';
info.MatPath{18} = 'rotation';
info.MatPath{19} = 'rotation.m11';
info.MatPath{20} = 'rotation.m12';
info.MatPath{21} = 'rotation.m13';
info.MatPath{22} = 'rotation.m21';
info.MatPath{23} = 'rotation.m22';
info.MatPath{24} = 'rotation.m23';
info.MatPath{25} = 'rotation.m31';
info.MatPath{26} = 'rotation.m32';
info.MatPath{27} = 'rotation.m33';
info.MatPath{28} = 'translation';
info.MatPath{29} = 'translation.x';
info.MatPath{30} = 'translation.y';
info.MatPath{31} = 'translation.z';
info.MatPath{32} = 'camera_source';
