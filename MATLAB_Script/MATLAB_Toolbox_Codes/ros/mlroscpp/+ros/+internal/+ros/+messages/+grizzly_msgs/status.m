function [data, info] = status
%Status gives an empty data for grizzly_msgs/Status

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'grizzly_msgs/Status';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.HardwareId, info.HardwareId] = ros.internal.ros.messages.ros.char('string',0);
[data.McuUptime, info.McuUptime] = ros.internal.ros.messages.ros.duration;
info.McuUptime.MLdataType = 'struct';
[data.ConnectionUptime, info.ConnectionUptime] = ros.internal.ros.messages.ros.duration;
info.ConnectionUptime.MLdataType = 'struct';
[data.McuTemperature, info.McuTemperature] = ros.internal.ros.messages.ros.default_type('single',1);
[data.StopEngaged, info.StopEngaged] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.ExternalStopEngaged, info.ExternalStopEngaged] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.MeasuredBattery, info.MeasuredBattery] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Measured48v, info.Measured48v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Measured24v, info.Measured24v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Measured12v, info.Measured12v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.CurrentBattery, info.CurrentBattery] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Current48v, info.Current48v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Current24v, info.Current24v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.Current12v, info.Current12v] = ros.internal.ros.messages.ros.default_type('single',1);
[data.CurrentComputer, info.CurrentComputer] = ros.internal.ros.messages.ros.default_type('single',1);
[data.CurrentBatteryPeak, info.CurrentBatteryPeak] = ros.internal.ros.messages.ros.default_type('single',1);
[data.TotalPowerConsumed, info.TotalPowerConsumed] = ros.internal.ros.messages.ros.default_type('double',1);
info.MessageType = 'grizzly_msgs/Status';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,27);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'hardware_id';
info.MatPath{8} = 'mcu_uptime';
info.MatPath{9} = 'mcu_uptime.sec';
info.MatPath{10} = 'mcu_uptime.nsec';
info.MatPath{11} = 'connection_uptime';
info.MatPath{12} = 'connection_uptime.sec';
info.MatPath{13} = 'connection_uptime.nsec';
info.MatPath{14} = 'mcu_temperature';
info.MatPath{15} = 'stop_engaged';
info.MatPath{16} = 'external_stop_engaged';
info.MatPath{17} = 'measured_battery';
info.MatPath{18} = 'measured_48v';
info.MatPath{19} = 'measured_24v';
info.MatPath{20} = 'measured_12v';
info.MatPath{21} = 'current_battery';
info.MatPath{22} = 'current_48v';
info.MatPath{23} = 'current_24v';
info.MatPath{24} = 'current_12v';
info.MatPath{25} = 'current_computer';
info.MatPath{26} = 'current_battery_peak';
info.MatPath{27} = 'total_power_consumed';
