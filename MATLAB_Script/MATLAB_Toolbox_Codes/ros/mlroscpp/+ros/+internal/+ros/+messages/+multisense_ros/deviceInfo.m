function [data, info] = deviceInfo
%DeviceInfo gives an empty data for multisense_ros/DeviceInfo

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'multisense_ros/DeviceInfo';
[data.DeviceName, info.DeviceName] = ros.internal.ros.messages.ros.char('string',0);
[data.BuildDate, info.BuildDate] = ros.internal.ros.messages.ros.char('string',0);
[data.SerialNumber, info.SerialNumber] = ros.internal.ros.messages.ros.char('string',0);
[data.DeviceRevision, info.DeviceRevision] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.NumberOfPcbs, info.NumberOfPcbs] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.PcbSerialNumbers, info.PcbSerialNumbers] = ros.internal.ros.messages.ros.default_type('uint32',NaN);
[data.PcbNames, info.PcbNames] = ros.internal.ros.messages.ros.char('string',NaN);
[data.ImagerName, info.ImagerName] = ros.internal.ros.messages.ros.char('string',0);
[data.ImagerType, info.ImagerType] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.ImagerWidth, info.ImagerWidth] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.ImagerHeight, info.ImagerHeight] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.LensName, info.LensName] = ros.internal.ros.messages.ros.char('string',0);
[data.LensType, info.LensType] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.NominalBaseline, info.NominalBaseline] = ros.internal.ros.messages.ros.default_type('single',1);
[data.NominalFocalLength, info.NominalFocalLength] = ros.internal.ros.messages.ros.default_type('single',1);
[data.NominalRelativeAperture, info.NominalRelativeAperture] = ros.internal.ros.messages.ros.default_type('single',1);
[data.LightingType, info.LightingType] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.NumberOfLights, info.NumberOfLights] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.LaserName, info.LaserName] = ros.internal.ros.messages.ros.char('string',0);
[data.LaserType, info.LaserType] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.MotorName, info.MotorName] = ros.internal.ros.messages.ros.char('string',0);
[data.MotorType, info.MotorType] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.MotorGearReduction, info.MotorGearReduction] = ros.internal.ros.messages.ros.default_type('single',1);
[data.ApiBuildDate, info.ApiBuildDate] = ros.internal.ros.messages.ros.char('string',0);
[data.ApiVersion, info.ApiVersion] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.FirmwareBuildDate, info.FirmwareBuildDate] = ros.internal.ros.messages.ros.char('string',0);
[data.FirmwareVersion, info.FirmwareVersion] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.BitstreamVersion, info.BitstreamVersion] = ros.internal.ros.messages.ros.default_type('uint64',1);
[data.BitstreamMagic, info.BitstreamMagic] = ros.internal.ros.messages.ros.default_type('uint64',1);
[data.FpgaDna, info.FpgaDna] = ros.internal.ros.messages.ros.default_type('uint64',1);
info.MessageType = 'multisense_ros/DeviceInfo';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,30);
info.MatPath{1} = 'deviceName';
info.MatPath{2} = 'buildDate';
info.MatPath{3} = 'serialNumber';
info.MatPath{4} = 'deviceRevision';
info.MatPath{5} = 'numberOfPcbs';
info.MatPath{6} = 'pcbSerialNumbers';
info.MatPath{7} = 'pcbNames';
info.MatPath{8} = 'imagerName';
info.MatPath{9} = 'imagerType';
info.MatPath{10} = 'imagerWidth';
info.MatPath{11} = 'imagerHeight';
info.MatPath{12} = 'lensName';
info.MatPath{13} = 'lensType';
info.MatPath{14} = 'nominalBaseline';
info.MatPath{15} = 'nominalFocalLength';
info.MatPath{16} = 'nominalRelativeAperture';
info.MatPath{17} = 'lightingType';
info.MatPath{18} = 'numberOfLights';
info.MatPath{19} = 'laserName';
info.MatPath{20} = 'laserType';
info.MatPath{21} = 'motorName';
info.MatPath{22} = 'motorType';
info.MatPath{23} = 'motorGearReduction';
info.MatPath{24} = 'apiBuildDate';
info.MatPath{25} = 'apiVersion';
info.MatPath{26} = 'firmwareBuildDate';
info.MatPath{27} = 'firmwareVersion';
info.MatPath{28} = 'bitstreamVersion';
info.MatPath{29} = 'bitstreamMagic';
info.MatPath{30} = 'fpgaDna';
