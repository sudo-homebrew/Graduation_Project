function [data, info] = endEffectorState
%EndEffectorState gives an empty data for baxter_core_msgs/EndEffectorState

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'baxter_core_msgs/EndEffectorState';
[data.Timestamp, info.Timestamp] = ros.internal.ros.messages.ros.time;
info.Timestamp.MLdataType = 'struct';
[data.Id, info.Id] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.STATEFALSE, info.STATEFALSE] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.STATETRUE, info.STATETRUE] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.STATEUNKNOWN, info.STATEUNKNOWN] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.Enabled, info.Enabled] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Calibrated, info.Calibrated] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Ready, info.Ready] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Moving, info.Moving] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Gripping, info.Gripping] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Missed, info.Missed] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Error, info.Error] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Reverse, info.Reverse] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Position, info.Position] = ros.internal.ros.messages.ros.default_type('single',1);
[data.POSITIONCLOSED, info.POSITIONCLOSED] = ros.internal.ros.messages.ros.default_type('single',1, 0);
[data.POSITIONOPEN, info.POSITIONOPEN] = ros.internal.ros.messages.ros.default_type('single',1, 100);
[data.Force, info.Force] = ros.internal.ros.messages.ros.default_type('single',1);
[data.FORCEMIN, info.FORCEMIN] = ros.internal.ros.messages.ros.default_type('single',1, 0);
[data.FORCEMAX, info.FORCEMAX] = ros.internal.ros.messages.ros.default_type('single',1, 100);
[data.State, info.State] = ros.internal.ros.messages.ros.char('string',0);
[data.Command, info.Command] = ros.internal.ros.messages.ros.char('string',0);
[data.CommandSender, info.CommandSender] = ros.internal.ros.messages.ros.char('string',0);
[data.CommandSequence, info.CommandSequence] = ros.internal.ros.messages.ros.default_type('uint32',1);
info.MessageType = 'baxter_core_msgs/EndEffectorState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,25);
info.MatPath{1} = 'timestamp';
info.MatPath{2} = 'timestamp.sec';
info.MatPath{3} = 'timestamp.nsec';
info.MatPath{4} = 'id';
info.MatPath{5} = 'STATE_FALSE';
info.MatPath{6} = 'STATE_TRUE';
info.MatPath{7} = 'STATE_UNKNOWN';
info.MatPath{8} = 'enabled';
info.MatPath{9} = 'calibrated';
info.MatPath{10} = 'ready';
info.MatPath{11} = 'moving';
info.MatPath{12} = 'gripping';
info.MatPath{13} = 'missed';
info.MatPath{14} = 'error';
info.MatPath{15} = 'reverse';
info.MatPath{16} = 'position';
info.MatPath{17} = 'POSITION_CLOSED';
info.MatPath{18} = 'POSITION_OPEN';
info.MatPath{19} = 'force';
info.MatPath{20} = 'FORCE_MIN';
info.MatPath{21} = 'FORCE_MAX';
info.MatPath{22} = 'state';
info.MatPath{23} = 'command';
info.MatPath{24} = 'command_sender';
info.MatPath{25} = 'command_sequence';
