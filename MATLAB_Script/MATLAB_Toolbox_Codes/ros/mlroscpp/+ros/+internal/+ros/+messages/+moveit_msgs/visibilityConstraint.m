function [data, info] = visibilityConstraint
%VisibilityConstraint gives an empty data for moveit_msgs/VisibilityConstraint

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'moveit_msgs/VisibilityConstraint';
[data.TargetRadius, info.TargetRadius] = ros.internal.ros.messages.ros.default_type('double',1);
[data.TargetPose, info.TargetPose] = ros.internal.ros.messages.geometry_msgs.poseStamped;
info.TargetPose.MLdataType = 'struct';
[data.ConeSides, info.ConeSides] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.SensorPose, info.SensorPose] = ros.internal.ros.messages.geometry_msgs.poseStamped;
info.SensorPose.MLdataType = 'struct';
[data.MaxViewAngle, info.MaxViewAngle] = ros.internal.ros.messages.ros.default_type('double',1);
[data.MaxRangeAngle, info.MaxRangeAngle] = ros.internal.ros.messages.ros.default_type('double',1);
[data.SENSORZ, info.SENSORZ] = ros.internal.ros.messages.ros.default_type('uint8',1, 0);
[data.SENSORY, info.SENSORY] = ros.internal.ros.messages.ros.default_type('uint8',1, 1);
[data.SENSORX, info.SENSORX] = ros.internal.ros.messages.ros.default_type('uint8',1, 2);
[data.SensorViewDirection, info.SensorViewDirection] = ros.internal.ros.messages.ros.default_type('uint8',1);
[data.Weight, info.Weight] = ros.internal.ros.messages.ros.default_type('double',1);
info.MessageType = 'moveit_msgs/VisibilityConstraint';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,43);
info.MatPath{1} = 'target_radius';
info.MatPath{2} = 'target_pose';
info.MatPath{3} = 'target_pose.header';
info.MatPath{4} = 'target_pose.header.seq';
info.MatPath{5} = 'target_pose.header.stamp';
info.MatPath{6} = 'target_pose.header.stamp.sec';
info.MatPath{7} = 'target_pose.header.stamp.nsec';
info.MatPath{8} = 'target_pose.header.frame_id';
info.MatPath{9} = 'target_pose.pose';
info.MatPath{10} = 'target_pose.pose.position';
info.MatPath{11} = 'target_pose.pose.position.x';
info.MatPath{12} = 'target_pose.pose.position.y';
info.MatPath{13} = 'target_pose.pose.position.z';
info.MatPath{14} = 'target_pose.pose.orientation';
info.MatPath{15} = 'target_pose.pose.orientation.x';
info.MatPath{16} = 'target_pose.pose.orientation.y';
info.MatPath{17} = 'target_pose.pose.orientation.z';
info.MatPath{18} = 'target_pose.pose.orientation.w';
info.MatPath{19} = 'cone_sides';
info.MatPath{20} = 'sensor_pose';
info.MatPath{21} = 'sensor_pose.header';
info.MatPath{22} = 'sensor_pose.header.seq';
info.MatPath{23} = 'sensor_pose.header.stamp';
info.MatPath{24} = 'sensor_pose.header.stamp.sec';
info.MatPath{25} = 'sensor_pose.header.stamp.nsec';
info.MatPath{26} = 'sensor_pose.header.frame_id';
info.MatPath{27} = 'sensor_pose.pose';
info.MatPath{28} = 'sensor_pose.pose.position';
info.MatPath{29} = 'sensor_pose.pose.position.x';
info.MatPath{30} = 'sensor_pose.pose.position.y';
info.MatPath{31} = 'sensor_pose.pose.position.z';
info.MatPath{32} = 'sensor_pose.pose.orientation';
info.MatPath{33} = 'sensor_pose.pose.orientation.x';
info.MatPath{34} = 'sensor_pose.pose.orientation.y';
info.MatPath{35} = 'sensor_pose.pose.orientation.z';
info.MatPath{36} = 'sensor_pose.pose.orientation.w';
info.MatPath{37} = 'max_view_angle';
info.MatPath{38} = 'max_range_angle';
info.MatPath{39} = 'SENSOR_Z';
info.MatPath{40} = 'SENSOR_Y';
info.MatPath{41} = 'SENSOR_X';
info.MatPath{42} = 'sensor_view_direction';
info.MatPath{43} = 'weight';
