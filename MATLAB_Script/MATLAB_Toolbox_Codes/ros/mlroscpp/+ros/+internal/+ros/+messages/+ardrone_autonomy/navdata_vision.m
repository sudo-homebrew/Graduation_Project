function [data, info] = navdata_vision
%navdata_vision gives an empty data for ardrone_autonomy/navdata_vision

% Copyright 2019-2020 The MathWorks, Inc.
data = struct();
data.MessageType = 'ardrone_autonomy/navdata_vision';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.DroneTime, info.DroneTime] = ros.internal.ros.messages.ros.default_type('double',1);
[data.Tag, info.Tag] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.Size, info.Size] = ros.internal.ros.messages.ros.default_type('uint16',1);
[data.VisionState, info.VisionState] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.VisionMisc, info.VisionMisc] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.VisionPhiTrim, info.VisionPhiTrim] = ros.internal.ros.messages.ros.default_type('single',1);
[data.VisionPhiRefProp, info.VisionPhiRefProp] = ros.internal.ros.messages.ros.default_type('single',1);
[data.VisionThetaTrim, info.VisionThetaTrim] = ros.internal.ros.messages.ros.default_type('single',1);
[data.VisionThetaRefProp, info.VisionThetaRefProp] = ros.internal.ros.messages.ros.default_type('single',1);
[data.NewRawPicture, info.NewRawPicture] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.ThetaCapture, info.ThetaCapture] = ros.internal.ros.messages.ros.default_type('single',1);
[data.PhiCapture, info.PhiCapture] = ros.internal.ros.messages.ros.default_type('single',1);
[data.PsiCapture, info.PsiCapture] = ros.internal.ros.messages.ros.default_type('single',1);
[data.AltitudeCapture, info.AltitudeCapture] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.TimeCapture, info.TimeCapture] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.BodyV, info.BodyV] = ros.internal.ros.messages.ardrone_autonomy.vector31;
info.BodyV.MLdataType = 'struct';
[data.DeltaPhi, info.DeltaPhi] = ros.internal.ros.messages.ros.default_type('single',1);
[data.DeltaTheta, info.DeltaTheta] = ros.internal.ros.messages.ros.default_type('single',1);
[data.DeltaPsi, info.DeltaPsi] = ros.internal.ros.messages.ros.default_type('single',1);
[data.GoldDefined, info.GoldDefined] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.GoldReset, info.GoldReset] = ros.internal.ros.messages.ros.default_type('uint32',1);
[data.GoldX, info.GoldX] = ros.internal.ros.messages.ros.default_type('single',1);
[data.GoldY, info.GoldY] = ros.internal.ros.messages.ros.default_type('single',1);
info.MessageType = 'ardrone_autonomy/navdata_vision';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,32);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'drone_time';
info.MatPath{8} = 'tag';
info.MatPath{9} = 'size';
info.MatPath{10} = 'vision_state';
info.MatPath{11} = 'vision_misc';
info.MatPath{12} = 'vision_phi_trim';
info.MatPath{13} = 'vision_phi_ref_prop';
info.MatPath{14} = 'vision_theta_trim';
info.MatPath{15} = 'vision_theta_ref_prop';
info.MatPath{16} = 'new_raw_picture';
info.MatPath{17} = 'theta_capture';
info.MatPath{18} = 'phi_capture';
info.MatPath{19} = 'psi_capture';
info.MatPath{20} = 'altitude_capture';
info.MatPath{21} = 'time_capture';
info.MatPath{22} = 'body_v';
info.MatPath{23} = 'body_v.x';
info.MatPath{24} = 'body_v.y';
info.MatPath{25} = 'body_v.z';
info.MatPath{26} = 'delta_phi';
info.MatPath{27} = 'delta_theta';
info.MatPath{28} = 'delta_psi';
info.MatPath{29} = 'gold_defined';
info.MatPath{30} = 'gold_reset';
info.MatPath{31} = 'gold_x';
info.MatPath{32} = 'gold_y';
