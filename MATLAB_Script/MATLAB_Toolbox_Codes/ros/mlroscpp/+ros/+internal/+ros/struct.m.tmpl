function [data, info] = {% msgInfo.msgStructGenFileName %}
%{% [msgInfo.msgName] %} gives an empty data for {% MessageType %}

% Copyright 2019-2020 The MathWorks, Inc.
%#codegen
data = struct();
{% var PRECISION = 15 %}
data.MessageType = '{%MessageType%}';
{% for i = numel(fieldNames) %}
{% var field = msgFields.(fieldNames{i}) %}
{% var count = field.count %}
{% var flag = 0 %}
{% if count == 0 %}
{% var flag = 1 %}
{% var count = 1 %}
{% endif %}
{% if isfield(field,'MessageType') %}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = {%field.msgInfo.msgStructGen%};
info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}.MLdataType = 'struct';
{% if isnan(count) %}
info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}.MaxLen = NaN;
info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}.MinLen = 0;
data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%} = data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}([],1);
{% endif %}
{% if count > 1 %}
info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}.MaxLen = {% num2str(count)%};
info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}.MinLen = {% num2str(count)%};
{% endif %}
{% endif %}
{% if isfield(field,'MLdataType') && ~isequal(field.MLdataType,'struct') && (~isfield(field,'fieldNames') || isempty(field.fieldNames)) %}
{% if ~isequal(field.MLdataType,'char') && ~isequal(field.MLdataType,'string')%}
{% if isnan(field.constantValue)%}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.default_type('{%field.MLdataType%}',{%num2str(count)%});
{% endif %}
{% if ~isnan(field.constantValue)%}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.default_type('{%field.MLdataType%}',1, {%num2str(field.constantValue, PRECISION)%});
{% endif %}
{% endif %}
{% if isequal(field.MLdataType,'string') || isequal(field.MLdataType,'char') && (((isnumeric(field.constantValue) && isnan(field.constantValue))||(~isnumeric(field.constantValue) && isempty(field.constantValue))) && ((isnumeric(field.defaultValue) && isnan(field.defaultValue))||(~isnumeric(field.defaultValue) && isempty(field.defaultValue)))) %}
{% if isequal(flag, 0)%}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.char('{%field.MLdataType%}',{%num2str(count)%});
{% endif %}
{% if isequal(flag, 1)%}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.char('{%field.MLdataType%}',0);
{% endif %}
{% endif %}
{% if ischar(field.constantValue) %}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.char('{%field.MLdataType%}',1,'{%field.constantValue%}');
{% endif %}
{% if isequal(field.MLdataType,'string') && ~isnumeric(field.constantValue) && ~isempty(field.constantValue) %}
[data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, info.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}] = ros.internal.ros.messages.ros.char('{%field.MLdataType%}',1,'{%num2str(field.constantValue)%}');
{% endif %}
{% endif %}
{% endfor %}
{% for i = numel(fieldNames) %}
{% var field = msgFields.(fieldNames{i}) %}
{% if  ~isnan(field.count) && field.count ~= 0 && isfield(field,'MLdataType') && isequal(field.MLdataType,'struct') %}
val = [];
for i = 1:{% num2str(field.count) %}
    val = vertcat(data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%}, val); %#ok<AGROW>
end
data.{%ros.internal.utilities.convertROSFieldsToClassFields(fieldNames{i},MessageType)%} = val;
{% endif %}
{% endfor %}
info.MessageType = '{% MessageType %}';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,{% num2str(numel(order)) %});
{% for i = numel(order) %}
info.MatPath{{%num2str(i)%}} = '{%msgpath{i}%}';
{% endfor %}
