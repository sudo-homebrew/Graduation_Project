// Generated by gencpp from file ml_classifiers/LoadClassifier.msg
// DO NOT EDIT!


#ifndef ML_CLASSIFIERS_MESSAGE_LOADCLASSIFIER_H
#define ML_CLASSIFIERS_MESSAGE_LOADCLASSIFIER_H

#include <ros/service_traits.h>


#include <ml_classifiers/LoadClassifierRequest.h>
#include <ml_classifiers/LoadClassifierResponse.h>


namespace ml_classifiers
{

struct LoadClassifier
{

typedef LoadClassifierRequest Request;
typedef LoadClassifierResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LoadClassifier
} // namespace ml_classifiers


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ml_classifiers::LoadClassifier > {
  static const char* value()
  {
    return "dea635b620b3bfb9b0fcfcd745a28947";
  }

  static const char* value(const ::ml_classifiers::LoadClassifier&) { return value(); }
};

template<>
struct DataType< ::ml_classifiers::LoadClassifier > {
  static const char* value()
  {
    return "ml_classifiers/LoadClassifier";
  }

  static const char* value(const ::ml_classifiers::LoadClassifier&) { return value(); }
};


// service_traits::MD5Sum< ::ml_classifiers::LoadClassifierRequest> should match 
// service_traits::MD5Sum< ::ml_classifiers::LoadClassifier > 
template<>
struct MD5Sum< ::ml_classifiers::LoadClassifierRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ml_classifiers::LoadClassifier >::value();
  }
  static const char* value(const ::ml_classifiers::LoadClassifierRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ml_classifiers::LoadClassifierRequest> should match 
// service_traits::DataType< ::ml_classifiers::LoadClassifier > 
template<>
struct DataType< ::ml_classifiers::LoadClassifierRequest>
{
  static const char* value()
  {
    return DataType< ::ml_classifiers::LoadClassifier >::value();
  }
  static const char* value(const ::ml_classifiers::LoadClassifierRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ml_classifiers::LoadClassifierResponse> should match 
// service_traits::MD5Sum< ::ml_classifiers::LoadClassifier > 
template<>
struct MD5Sum< ::ml_classifiers::LoadClassifierResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ml_classifiers::LoadClassifier >::value();
  }
  static const char* value(const ::ml_classifiers::LoadClassifierResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ml_classifiers::LoadClassifierResponse> should match 
// service_traits::DataType< ::ml_classifiers::LoadClassifier > 
template<>
struct DataType< ::ml_classifiers::LoadClassifierResponse>
{
  static const char* value()
  {
    return DataType< ::ml_classifiers::LoadClassifier >::value();
  }
  static const char* value(const ::ml_classifiers::LoadClassifierResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ML_CLASSIFIERS_MESSAGE_LOADCLASSIFIER_H
