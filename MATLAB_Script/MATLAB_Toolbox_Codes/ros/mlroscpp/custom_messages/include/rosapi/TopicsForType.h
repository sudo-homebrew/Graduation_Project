// Generated by gencpp from file rosapi/TopicsForType.msg
// DO NOT EDIT!


#ifndef ROSAPI_MESSAGE_TOPICSFORTYPE_H
#define ROSAPI_MESSAGE_TOPICSFORTYPE_H

#include <ros/service_traits.h>


#include <rosapi/TopicsForTypeRequest.h>
#include <rosapi/TopicsForTypeResponse.h>


namespace rosapi
{

struct TopicsForType
{

typedef TopicsForTypeRequest Request;
typedef TopicsForTypeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TopicsForType
} // namespace rosapi


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rosapi::TopicsForType > {
  static const char* value()
  {
    return "56f77ff6da756dd27c1ed16ec721072a";
  }

  static const char* value(const ::rosapi::TopicsForType&) { return value(); }
};

template<>
struct DataType< ::rosapi::TopicsForType > {
  static const char* value()
  {
    return "rosapi/TopicsForType";
  }

  static const char* value(const ::rosapi::TopicsForType&) { return value(); }
};


// service_traits::MD5Sum< ::rosapi::TopicsForTypeRequest> should match 
// service_traits::MD5Sum< ::rosapi::TopicsForType > 
template<>
struct MD5Sum< ::rosapi::TopicsForTypeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rosapi::TopicsForType >::value();
  }
  static const char* value(const ::rosapi::TopicsForTypeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosapi::TopicsForTypeRequest> should match 
// service_traits::DataType< ::rosapi::TopicsForType > 
template<>
struct DataType< ::rosapi::TopicsForTypeRequest>
{
  static const char* value()
  {
    return DataType< ::rosapi::TopicsForType >::value();
  }
  static const char* value(const ::rosapi::TopicsForTypeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rosapi::TopicsForTypeResponse> should match 
// service_traits::MD5Sum< ::rosapi::TopicsForType > 
template<>
struct MD5Sum< ::rosapi::TopicsForTypeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rosapi::TopicsForType >::value();
  }
  static const char* value(const ::rosapi::TopicsForTypeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosapi::TopicsForTypeResponse> should match 
// service_traits::DataType< ::rosapi::TopicsForType > 
template<>
struct DataType< ::rosapi::TopicsForTypeResponse>
{
  static const char* value()
  {
    return DataType< ::rosapi::TopicsForType >::value();
  }
  static const char* value(const ::rosapi::TopicsForTypeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROSAPI_MESSAGE_TOPICSFORTYPE_H
