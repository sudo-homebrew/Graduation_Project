// Generated by gencpp from file shared_serial/Connect.msg
// DO NOT EDIT!


#ifndef SHARED_SERIAL_MESSAGE_CONNECT_H
#define SHARED_SERIAL_MESSAGE_CONNECT_H

#include <ros/service_traits.h>


#include <shared_serial/ConnectRequest.h>
#include <shared_serial/ConnectResponse.h>


namespace shared_serial
{

struct Connect
{

typedef ConnectRequest Request;
typedef ConnectResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Connect
} // namespace shared_serial


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::shared_serial::Connect > {
  static const char* value()
  {
    return "0f077aa46d26c0b33419647f84d73b59";
  }

  static const char* value(const ::shared_serial::Connect&) { return value(); }
};

template<>
struct DataType< ::shared_serial::Connect > {
  static const char* value()
  {
    return "shared_serial/Connect";
  }

  static const char* value(const ::shared_serial::Connect&) { return value(); }
};


// service_traits::MD5Sum< ::shared_serial::ConnectRequest> should match 
// service_traits::MD5Sum< ::shared_serial::Connect > 
template<>
struct MD5Sum< ::shared_serial::ConnectRequest>
{
  static const char* value()
  {
    return MD5Sum< ::shared_serial::Connect >::value();
  }
  static const char* value(const ::shared_serial::ConnectRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::shared_serial::ConnectRequest> should match 
// service_traits::DataType< ::shared_serial::Connect > 
template<>
struct DataType< ::shared_serial::ConnectRequest>
{
  static const char* value()
  {
    return DataType< ::shared_serial::Connect >::value();
  }
  static const char* value(const ::shared_serial::ConnectRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::shared_serial::ConnectResponse> should match 
// service_traits::MD5Sum< ::shared_serial::Connect > 
template<>
struct MD5Sum< ::shared_serial::ConnectResponse>
{
  static const char* value()
  {
    return MD5Sum< ::shared_serial::Connect >::value();
  }
  static const char* value(const ::shared_serial::ConnectResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::shared_serial::ConnectResponse> should match 
// service_traits::DataType< ::shared_serial::Connect > 
template<>
struct DataType< ::shared_serial::ConnectResponse>
{
  static const char* value()
  {
    return DataType< ::shared_serial::Connect >::value();
  }
  static const char* value(const ::shared_serial::ConnectResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SHARED_SERIAL_MESSAGE_CONNECT_H
