// Generated by gencpp from file pr2_self_test_msgs/ConfirmConfResponse.msg
// DO NOT EDIT!


#ifndef PR2_SELF_TEST_MSGS_MESSAGE_CONFIRMCONFRESPONSE_H
#define PR2_SELF_TEST_MSGS_MESSAGE_CONFIRMCONFRESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace pr2_self_test_msgs
{
template <class ContainerAllocator>
struct ConfirmConfResponse_
{
  typedef ConfirmConfResponse_<ContainerAllocator> Type;

  ConfirmConfResponse_()
    : retry(0)  {
    }
  ConfirmConfResponse_(const ContainerAllocator& _alloc)
    : retry(0)  {
  (void)_alloc;
    }



   typedef int8_t _retry_type;
  _retry_type retry;



  enum {
 
    RETRY = 0,
 
    FAIL = 1,
  };


  typedef boost::shared_ptr< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> const> ConstPtr;

}; // struct ConfirmConfResponse_

typedef ::pr2_self_test_msgs::ConfirmConfResponse_<std::allocator<void> > ConfirmConfResponse;

typedef boost::shared_ptr< ::pr2_self_test_msgs::ConfirmConfResponse > ConfirmConfResponsePtr;
typedef boost::shared_ptr< ::pr2_self_test_msgs::ConfirmConfResponse const> ConfirmConfResponseConstPtr;

// constants requiring out of line definition

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace pr2_self_test_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'pr2_self_test_msgs': ['/mathworks/home/pmurali/Documents/P/matlab_msg_gen_ros1/glnxa64/src/pr2_self_test_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1339814/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "07d0ea23359e60111f462db0c7458414";
  }

  static const char* value(const ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x07d0ea23359e6011ULL;
  static const uint64_t static_value2 = 0x1f462db0c7458414ULL;
};

template<class ContainerAllocator>
struct DataType< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "pr2_self_test_msgs/ConfirmConfResponse";
  }

  static const char* value(const ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "byte RETRY = 0\n"
"byte FAIL = 1\n"
"\n"
"byte retry\n"
;
  }

  static const char* value(const ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.retry);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ConfirmConfResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::pr2_self_test_msgs::ConfirmConfResponse_<ContainerAllocator>& v)
  {
    s << indent << "retry: ";
    Printer<int8_t>::stream(s, indent + "  ", v.retry);
  }
};

} // namespace message_operations
} // namespace ros

#endif // PR2_SELF_TEST_MSGS_MESSAGE_CONFIRMCONFRESPONSE_H
