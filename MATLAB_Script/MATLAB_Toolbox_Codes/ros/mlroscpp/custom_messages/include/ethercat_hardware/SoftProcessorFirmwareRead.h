// Generated by gencpp from file ethercat_hardware/SoftProcessorFirmwareRead.msg
// DO NOT EDIT!


#ifndef ETHERCAT_HARDWARE_MESSAGE_SOFTPROCESSORFIRMWAREREAD_H
#define ETHERCAT_HARDWARE_MESSAGE_SOFTPROCESSORFIRMWAREREAD_H

#include <ros/service_traits.h>


#include <ethercat_hardware/SoftProcessorFirmwareReadRequest.h>
#include <ethercat_hardware/SoftProcessorFirmwareReadResponse.h>


namespace ethercat_hardware
{

struct SoftProcessorFirmwareRead
{

typedef SoftProcessorFirmwareReadRequest Request;
typedef SoftProcessorFirmwareReadResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SoftProcessorFirmwareRead
} // namespace ethercat_hardware


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareRead > {
  static const char* value()
  {
    return "52ad83cdf3a5cf0a74166c7d411fc0aa";
  }

  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareRead&) { return value(); }
};

template<>
struct DataType< ::ethercat_hardware::SoftProcessorFirmwareRead > {
  static const char* value()
  {
    return "ethercat_hardware/SoftProcessorFirmwareRead";
  }

  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareRead&) { return value(); }
};


// service_traits::MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareReadRequest> should match 
// service_traits::MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareRead > 
template<>
struct MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareReadRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareRead >::value();
  }
  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareReadRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ethercat_hardware::SoftProcessorFirmwareReadRequest> should match 
// service_traits::DataType< ::ethercat_hardware::SoftProcessorFirmwareRead > 
template<>
struct DataType< ::ethercat_hardware::SoftProcessorFirmwareReadRequest>
{
  static const char* value()
  {
    return DataType< ::ethercat_hardware::SoftProcessorFirmwareRead >::value();
  }
  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareReadRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareReadResponse> should match 
// service_traits::MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareRead > 
template<>
struct MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareReadResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ethercat_hardware::SoftProcessorFirmwareRead >::value();
  }
  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareReadResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ethercat_hardware::SoftProcessorFirmwareReadResponse> should match 
// service_traits::DataType< ::ethercat_hardware::SoftProcessorFirmwareRead > 
template<>
struct DataType< ::ethercat_hardware::SoftProcessorFirmwareReadResponse>
{
  static const char* value()
  {
    return DataType< ::ethercat_hardware::SoftProcessorFirmwareRead >::value();
  }
  static const char* value(const ::ethercat_hardware::SoftProcessorFirmwareReadResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ETHERCAT_HARDWARE_MESSAGE_SOFTPROCESSORFIRMWAREREAD_H
