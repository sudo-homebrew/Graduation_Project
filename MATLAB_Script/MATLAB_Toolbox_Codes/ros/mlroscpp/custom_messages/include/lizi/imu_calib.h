// Generated by gencpp from file lizi/imu_calib.msg
// DO NOT EDIT!


#ifndef LIZI_MESSAGE_IMU_CALIB_H
#define LIZI_MESSAGE_IMU_CALIB_H

#include <ros/service_traits.h>


#include <lizi/imu_calibRequest.h>
#include <lizi/imu_calibResponse.h>


namespace lizi
{

struct imu_calib
{

typedef imu_calibRequest Request;
typedef imu_calibResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct imu_calib
} // namespace lizi


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lizi::imu_calib > {
  static const char* value()
  {
    return "0dce049a176069675a0c664de0822e2c";
  }

  static const char* value(const ::lizi::imu_calib&) { return value(); }
};

template<>
struct DataType< ::lizi::imu_calib > {
  static const char* value()
  {
    return "lizi/imu_calib";
  }

  static const char* value(const ::lizi::imu_calib&) { return value(); }
};


// service_traits::MD5Sum< ::lizi::imu_calibRequest> should match 
// service_traits::MD5Sum< ::lizi::imu_calib > 
template<>
struct MD5Sum< ::lizi::imu_calibRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lizi::imu_calib >::value();
  }
  static const char* value(const ::lizi::imu_calibRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lizi::imu_calibRequest> should match 
// service_traits::DataType< ::lizi::imu_calib > 
template<>
struct DataType< ::lizi::imu_calibRequest>
{
  static const char* value()
  {
    return DataType< ::lizi::imu_calib >::value();
  }
  static const char* value(const ::lizi::imu_calibRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lizi::imu_calibResponse> should match 
// service_traits::MD5Sum< ::lizi::imu_calib > 
template<>
struct MD5Sum< ::lizi::imu_calibResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lizi::imu_calib >::value();
  }
  static const char* value(const ::lizi::imu_calibResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lizi::imu_calibResponse> should match 
// service_traits::DataType< ::lizi::imu_calib > 
template<>
struct DataType< ::lizi::imu_calibResponse>
{
  static const char* value()
  {
    return DataType< ::lizi::imu_calib >::value();
  }
  static const char* value(const ::lizi::imu_calibResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LIZI_MESSAGE_IMU_CALIB_H
