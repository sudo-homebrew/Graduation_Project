// Generated by gencpp from file jsk_topic_tools/PassthroughDuration.msg
// DO NOT EDIT!


#ifndef JSK_TOPIC_TOOLS_MESSAGE_PASSTHROUGHDURATION_H
#define JSK_TOPIC_TOOLS_MESSAGE_PASSTHROUGHDURATION_H

#include <ros/service_traits.h>


#include <jsk_topic_tools/PassthroughDurationRequest.h>
#include <jsk_topic_tools/PassthroughDurationResponse.h>


namespace jsk_topic_tools
{

struct PassthroughDuration
{

typedef PassthroughDurationRequest Request;
typedef PassthroughDurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PassthroughDuration
} // namespace jsk_topic_tools


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::jsk_topic_tools::PassthroughDuration > {
  static const char* value()
  {
    return "2aa5b5d494c682527e9e9161e1fa58ac";
  }

  static const char* value(const ::jsk_topic_tools::PassthroughDuration&) { return value(); }
};

template<>
struct DataType< ::jsk_topic_tools::PassthroughDuration > {
  static const char* value()
  {
    return "jsk_topic_tools/PassthroughDuration";
  }

  static const char* value(const ::jsk_topic_tools::PassthroughDuration&) { return value(); }
};


// service_traits::MD5Sum< ::jsk_topic_tools::PassthroughDurationRequest> should match
// service_traits::MD5Sum< ::jsk_topic_tools::PassthroughDuration >
template<>
struct MD5Sum< ::jsk_topic_tools::PassthroughDurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::jsk_topic_tools::PassthroughDuration >::value();
  }
  static const char* value(const ::jsk_topic_tools::PassthroughDurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::jsk_topic_tools::PassthroughDurationRequest> should match
// service_traits::DataType< ::jsk_topic_tools::PassthroughDuration >
template<>
struct DataType< ::jsk_topic_tools::PassthroughDurationRequest>
{
  static const char* value()
  {
    return DataType< ::jsk_topic_tools::PassthroughDuration >::value();
  }
  static const char* value(const ::jsk_topic_tools::PassthroughDurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::jsk_topic_tools::PassthroughDurationResponse> should match
// service_traits::MD5Sum< ::jsk_topic_tools::PassthroughDuration >
template<>
struct MD5Sum< ::jsk_topic_tools::PassthroughDurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::jsk_topic_tools::PassthroughDuration >::value();
  }
  static const char* value(const ::jsk_topic_tools::PassthroughDurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::jsk_topic_tools::PassthroughDurationResponse> should match
// service_traits::DataType< ::jsk_topic_tools::PassthroughDuration >
template<>
struct DataType< ::jsk_topic_tools::PassthroughDurationResponse>
{
  static const char* value()
  {
    return DataType< ::jsk_topic_tools::PassthroughDuration >::value();
  }
  static const char* value(const ::jsk_topic_tools::PassthroughDurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // JSK_TOPIC_TOOLS_MESSAGE_PASSTHROUGHDURATION_H
