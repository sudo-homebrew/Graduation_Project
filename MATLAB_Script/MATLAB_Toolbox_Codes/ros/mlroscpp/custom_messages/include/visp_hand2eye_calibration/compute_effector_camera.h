// Generated by gencpp from file visp_hand2eye_calibration/compute_effector_camera.msg
// DO NOT EDIT!


#ifndef VISP_HAND2EYE_CALIBRATION_MESSAGE_COMPUTE_EFFECTOR_CAMERA_H
#define VISP_HAND2EYE_CALIBRATION_MESSAGE_COMPUTE_EFFECTOR_CAMERA_H

#include <ros/service_traits.h>


#include <visp_hand2eye_calibration/compute_effector_cameraRequest.h>
#include <visp_hand2eye_calibration/compute_effector_cameraResponse.h>


namespace visp_hand2eye_calibration
{

struct compute_effector_camera
{

typedef compute_effector_cameraRequest Request;
typedef compute_effector_cameraResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct compute_effector_camera
} // namespace visp_hand2eye_calibration


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::visp_hand2eye_calibration::compute_effector_camera > {
  static const char* value()
  {
    return "e28a9ea34e6e135a6309cbdf6fb0ad0d";
  }

  static const char* value(const ::visp_hand2eye_calibration::compute_effector_camera&) { return value(); }
};

template<>
struct DataType< ::visp_hand2eye_calibration::compute_effector_camera > {
  static const char* value()
  {
    return "visp_hand2eye_calibration/compute_effector_camera";
  }

  static const char* value(const ::visp_hand2eye_calibration::compute_effector_camera&) { return value(); }
};


// service_traits::MD5Sum< ::visp_hand2eye_calibration::compute_effector_cameraRequest> should match 
// service_traits::MD5Sum< ::visp_hand2eye_calibration::compute_effector_camera > 
template<>
struct MD5Sum< ::visp_hand2eye_calibration::compute_effector_cameraRequest>
{
  static const char* value()
  {
    return MD5Sum< ::visp_hand2eye_calibration::compute_effector_camera >::value();
  }
  static const char* value(const ::visp_hand2eye_calibration::compute_effector_cameraRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::visp_hand2eye_calibration::compute_effector_cameraRequest> should match 
// service_traits::DataType< ::visp_hand2eye_calibration::compute_effector_camera > 
template<>
struct DataType< ::visp_hand2eye_calibration::compute_effector_cameraRequest>
{
  static const char* value()
  {
    return DataType< ::visp_hand2eye_calibration::compute_effector_camera >::value();
  }
  static const char* value(const ::visp_hand2eye_calibration::compute_effector_cameraRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::visp_hand2eye_calibration::compute_effector_cameraResponse> should match 
// service_traits::MD5Sum< ::visp_hand2eye_calibration::compute_effector_camera > 
template<>
struct MD5Sum< ::visp_hand2eye_calibration::compute_effector_cameraResponse>
{
  static const char* value()
  {
    return MD5Sum< ::visp_hand2eye_calibration::compute_effector_camera >::value();
  }
  static const char* value(const ::visp_hand2eye_calibration::compute_effector_cameraResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::visp_hand2eye_calibration::compute_effector_cameraResponse> should match 
// service_traits::DataType< ::visp_hand2eye_calibration::compute_effector_camera > 
template<>
struct DataType< ::visp_hand2eye_calibration::compute_effector_cameraResponse>
{
  static const char* value()
  {
    return DataType< ::visp_hand2eye_calibration::compute_effector_camera >::value();
  }
  static const char* value(const ::visp_hand2eye_calibration::compute_effector_cameraResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISP_HAND2EYE_CALIBRATION_MESSAGE_COMPUTE_EFFECTOR_CAMERA_H
