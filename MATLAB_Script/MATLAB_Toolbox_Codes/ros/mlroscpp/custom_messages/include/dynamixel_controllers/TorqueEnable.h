// Generated by gencpp from file dynamixel_controllers/TorqueEnable.msg
// DO NOT EDIT!


#ifndef DYNAMIXEL_CONTROLLERS_MESSAGE_TORQUEENABLE_H
#define DYNAMIXEL_CONTROLLERS_MESSAGE_TORQUEENABLE_H

#include <ros/service_traits.h>


#include <dynamixel_controllers/TorqueEnableRequest.h>
#include <dynamixel_controllers/TorqueEnableResponse.h>


namespace dynamixel_controllers
{

struct TorqueEnable
{

typedef TorqueEnableRequest Request;
typedef TorqueEnableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TorqueEnable
} // namespace dynamixel_controllers


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dynamixel_controllers::TorqueEnable > {
  static const char* value()
  {
    return "e44dc96db32bd58b5a896c2c5bf316d0";
  }

  static const char* value(const ::dynamixel_controllers::TorqueEnable&) { return value(); }
};

template<>
struct DataType< ::dynamixel_controllers::TorqueEnable > {
  static const char* value()
  {
    return "dynamixel_controllers/TorqueEnable";
  }

  static const char* value(const ::dynamixel_controllers::TorqueEnable&) { return value(); }
};


// service_traits::MD5Sum< ::dynamixel_controllers::TorqueEnableRequest> should match 
// service_traits::MD5Sum< ::dynamixel_controllers::TorqueEnable > 
template<>
struct MD5Sum< ::dynamixel_controllers::TorqueEnableRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dynamixel_controllers::TorqueEnable >::value();
  }
  static const char* value(const ::dynamixel_controllers::TorqueEnableRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dynamixel_controllers::TorqueEnableRequest> should match 
// service_traits::DataType< ::dynamixel_controllers::TorqueEnable > 
template<>
struct DataType< ::dynamixel_controllers::TorqueEnableRequest>
{
  static const char* value()
  {
    return DataType< ::dynamixel_controllers::TorqueEnable >::value();
  }
  static const char* value(const ::dynamixel_controllers::TorqueEnableRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dynamixel_controllers::TorqueEnableResponse> should match 
// service_traits::MD5Sum< ::dynamixel_controllers::TorqueEnable > 
template<>
struct MD5Sum< ::dynamixel_controllers::TorqueEnableResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dynamixel_controllers::TorqueEnable >::value();
  }
  static const char* value(const ::dynamixel_controllers::TorqueEnableResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dynamixel_controllers::TorqueEnableResponse> should match 
// service_traits::DataType< ::dynamixel_controllers::TorqueEnable > 
template<>
struct DataType< ::dynamixel_controllers::TorqueEnableResponse>
{
  static const char* value()
  {
    return DataType< ::dynamixel_controllers::TorqueEnable >::value();
  }
  static const char* value(const ::dynamixel_controllers::TorqueEnableResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DYNAMIXEL_CONTROLLERS_MESSAGE_TORQUEENABLE_H
