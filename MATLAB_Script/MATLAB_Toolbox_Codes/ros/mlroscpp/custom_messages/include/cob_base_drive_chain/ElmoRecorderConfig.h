// Generated by gencpp from file cob_base_drive_chain/ElmoRecorderConfig.msg
// DO NOT EDIT!


#ifndef COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERCONFIG_H
#define COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERCONFIG_H

#include <ros/service_traits.h>


#include <cob_base_drive_chain/ElmoRecorderConfigRequest.h>
#include <cob_base_drive_chain/ElmoRecorderConfigResponse.h>


namespace cob_base_drive_chain
{

struct ElmoRecorderConfig
{

typedef ElmoRecorderConfigRequest Request;
typedef ElmoRecorderConfigResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ElmoRecorderConfig
} // namespace cob_base_drive_chain


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfig > {
  static const char* value()
  {
    return "6628984158bd91781b20dd0ee7c71147";
  }

  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfig&) { return value(); }
};

template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderConfig > {
  static const char* value()
  {
    return "cob_base_drive_chain/ElmoRecorderConfig";
  }

  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfig&) { return value(); }
};


// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfigRequest> should match 
// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfig > 
template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfigRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfig >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfigRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderConfigRequest> should match 
// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderConfig > 
template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderConfigRequest>
{
  static const char* value()
  {
    return DataType< ::cob_base_drive_chain::ElmoRecorderConfig >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfigRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfigResponse> should match 
// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfig > 
template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfigResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cob_base_drive_chain::ElmoRecorderConfig >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfigResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderConfigResponse> should match 
// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderConfig > 
template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderConfigResponse>
{
  static const char* value()
  {
    return DataType< ::cob_base_drive_chain::ElmoRecorderConfig >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderConfigResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERCONFIG_H
