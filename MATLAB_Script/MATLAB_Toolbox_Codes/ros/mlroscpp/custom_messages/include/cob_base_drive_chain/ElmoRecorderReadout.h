// Generated by gencpp from file cob_base_drive_chain/ElmoRecorderReadout.msg
// DO NOT EDIT!


#ifndef COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERREADOUT_H
#define COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERREADOUT_H

#include <ros/service_traits.h>


#include <cob_base_drive_chain/ElmoRecorderReadoutRequest.h>
#include <cob_base_drive_chain/ElmoRecorderReadoutResponse.h>


namespace cob_base_drive_chain
{

struct ElmoRecorderReadout
{

typedef ElmoRecorderReadoutRequest Request;
typedef ElmoRecorderReadoutResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ElmoRecorderReadout
} // namespace cob_base_drive_chain


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadout > {
  static const char* value()
  {
    return "58d03a96e0b56a380d625c18335fb081";
  }

  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadout&) { return value(); }
};

template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderReadout > {
  static const char* value()
  {
    return "cob_base_drive_chain/ElmoRecorderReadout";
  }

  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadout&) { return value(); }
};


// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadoutRequest> should match 
// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadout > 
template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadoutRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadout >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadoutRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderReadoutRequest> should match 
// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderReadout > 
template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderReadoutRequest>
{
  static const char* value()
  {
    return DataType< ::cob_base_drive_chain::ElmoRecorderReadout >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadoutRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadoutResponse> should match 
// service_traits::MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadout > 
template<>
struct MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadoutResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cob_base_drive_chain::ElmoRecorderReadout >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadoutResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderReadoutResponse> should match 
// service_traits::DataType< ::cob_base_drive_chain::ElmoRecorderReadout > 
template<>
struct DataType< ::cob_base_drive_chain::ElmoRecorderReadoutResponse>
{
  static const char* value()
  {
    return DataType< ::cob_base_drive_chain::ElmoRecorderReadout >::value();
  }
  static const char* value(const ::cob_base_drive_chain::ElmoRecorderReadoutResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COB_BASE_DRIVE_CHAIN_MESSAGE_ELMORECORDERREADOUT_H
