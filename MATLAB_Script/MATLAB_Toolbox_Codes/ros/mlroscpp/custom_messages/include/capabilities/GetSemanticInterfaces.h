// Generated by gencpp from file capabilities/GetSemanticInterfaces.msg
// DO NOT EDIT!


#ifndef CAPABILITIES_MESSAGE_GETSEMANTICINTERFACES_H
#define CAPABILITIES_MESSAGE_GETSEMANTICINTERFACES_H

#include <ros/service_traits.h>


#include <capabilities/GetSemanticInterfacesRequest.h>
#include <capabilities/GetSemanticInterfacesResponse.h>


namespace capabilities
{

struct GetSemanticInterfaces
{

typedef GetSemanticInterfacesRequest Request;
typedef GetSemanticInterfacesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetSemanticInterfaces
} // namespace capabilities


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::capabilities::GetSemanticInterfaces > {
  static const char* value()
  {
    return "2b0794f4415a7884148fc328bd6bc7d3";
  }

  static const char* value(const ::capabilities::GetSemanticInterfaces&) { return value(); }
};

template<>
struct DataType< ::capabilities::GetSemanticInterfaces > {
  static const char* value()
  {
    return "capabilities/GetSemanticInterfaces";
  }

  static const char* value(const ::capabilities::GetSemanticInterfaces&) { return value(); }
};


// service_traits::MD5Sum< ::capabilities::GetSemanticInterfacesRequest> should match
// service_traits::MD5Sum< ::capabilities::GetSemanticInterfaces >
template<>
struct MD5Sum< ::capabilities::GetSemanticInterfacesRequest>
{
  static const char* value()
  {
    return MD5Sum< ::capabilities::GetSemanticInterfaces >::value();
  }
  static const char* value(const ::capabilities::GetSemanticInterfacesRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::capabilities::GetSemanticInterfacesRequest> should match
// service_traits::DataType< ::capabilities::GetSemanticInterfaces >
template<>
struct DataType< ::capabilities::GetSemanticInterfacesRequest>
{
  static const char* value()
  {
    return DataType< ::capabilities::GetSemanticInterfaces >::value();
  }
  static const char* value(const ::capabilities::GetSemanticInterfacesRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::capabilities::GetSemanticInterfacesResponse> should match
// service_traits::MD5Sum< ::capabilities::GetSemanticInterfaces >
template<>
struct MD5Sum< ::capabilities::GetSemanticInterfacesResponse>
{
  static const char* value()
  {
    return MD5Sum< ::capabilities::GetSemanticInterfaces >::value();
  }
  static const char* value(const ::capabilities::GetSemanticInterfacesResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::capabilities::GetSemanticInterfacesResponse> should match
// service_traits::DataType< ::capabilities::GetSemanticInterfaces >
template<>
struct DataType< ::capabilities::GetSemanticInterfacesResponse>
{
  static const char* value()
  {
    return DataType< ::capabilities::GetSemanticInterfaces >::value();
  }
  static const char* value(const ::capabilities::GetSemanticInterfacesResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAPABILITIES_MESSAGE_GETSEMANTICINTERFACES_H
