// Generated by gencpp from file rosbridge_library/TestRequestOnly.msg
// DO NOT EDIT!


#ifndef ROSBRIDGE_LIBRARY_MESSAGE_TESTREQUESTONLY_H
#define ROSBRIDGE_LIBRARY_MESSAGE_TESTREQUESTONLY_H

#include <ros/service_traits.h>


#include <rosbridge_library/TestRequestOnlyRequest.h>
#include <rosbridge_library/TestRequestOnlyResponse.h>


namespace rosbridge_library
{

struct TestRequestOnly
{

typedef TestRequestOnlyRequest Request;
typedef TestRequestOnlyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TestRequestOnly
} // namespace rosbridge_library


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rosbridge_library::TestRequestOnly > {
  static const char* value()
  {
    return "da5909fbe378aeaf85e547e830cc1bb7";
  }

  static const char* value(const ::rosbridge_library::TestRequestOnly&) { return value(); }
};

template<>
struct DataType< ::rosbridge_library::TestRequestOnly > {
  static const char* value()
  {
    return "rosbridge_library/TestRequestOnly";
  }

  static const char* value(const ::rosbridge_library::TestRequestOnly&) { return value(); }
};


// service_traits::MD5Sum< ::rosbridge_library::TestRequestOnlyRequest> should match 
// service_traits::MD5Sum< ::rosbridge_library::TestRequestOnly > 
template<>
struct MD5Sum< ::rosbridge_library::TestRequestOnlyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rosbridge_library::TestRequestOnly >::value();
  }
  static const char* value(const ::rosbridge_library::TestRequestOnlyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosbridge_library::TestRequestOnlyRequest> should match 
// service_traits::DataType< ::rosbridge_library::TestRequestOnly > 
template<>
struct DataType< ::rosbridge_library::TestRequestOnlyRequest>
{
  static const char* value()
  {
    return DataType< ::rosbridge_library::TestRequestOnly >::value();
  }
  static const char* value(const ::rosbridge_library::TestRequestOnlyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rosbridge_library::TestRequestOnlyResponse> should match 
// service_traits::MD5Sum< ::rosbridge_library::TestRequestOnly > 
template<>
struct MD5Sum< ::rosbridge_library::TestRequestOnlyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rosbridge_library::TestRequestOnly >::value();
  }
  static const char* value(const ::rosbridge_library::TestRequestOnlyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosbridge_library::TestRequestOnlyResponse> should match 
// service_traits::DataType< ::rosbridge_library::TestRequestOnly > 
template<>
struct DataType< ::rosbridge_library::TestRequestOnlyResponse>
{
  static const char* value()
  {
    return DataType< ::rosbridge_library::TestRequestOnly >::value();
  }
  static const char* value(const ::rosbridge_library::TestRequestOnlyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROSBRIDGE_LIBRARY_MESSAGE_TESTREQUESTONLY_H
