// Generated by gencpp from file applanix_msgs/GNSSDGPSStatus.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATUS_H
#define APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATUS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <applanix_msgs/TimeDistance.h>
#include <applanix_msgs/GNSSDGPSChannelStatus.h>
#include <applanix_msgs/GNSSDGPSChannelStatus.h>

namespace applanix_msgs
{
template <class ContainerAllocator>
struct GNSSDGPSStatus_
{
  typedef GNSSDGPSStatus_<ContainerAllocator> Type;

  GNSSDGPSStatus_()
    : td()
    , mode(0)
    , channel_0()
    , channel_1()
    , user_id_code(0)
    , user_access(0)
    , state(0)  {
    }
  GNSSDGPSStatus_(const ContainerAllocator& _alloc)
    : td(_alloc)
    , mode(0)
    , channel_0(_alloc)
    , channel_1(_alloc)
    , user_id_code(0)
    , user_access(0)
    , state(0)  {
  (void)_alloc;
    }



   typedef  ::applanix_msgs::TimeDistance_<ContainerAllocator>  _td_type;
  _td_type td;

   typedef uint8_t _mode_type;
  _mode_type mode;

   typedef  ::applanix_msgs::GNSSDGPSChannelStatus_<ContainerAllocator>  _channel_0_type;
  _channel_0_type channel_0;

   typedef  ::applanix_msgs::GNSSDGPSChannelStatus_<ContainerAllocator>  _channel_1_type;
  _channel_1_type channel_1;

   typedef uint64_t _user_id_code_type;
  _user_id_code_type user_id_code;

   typedef uint8_t _user_access_type;
  _user_access_type user_access;

   typedef uint8_t _state_type;
  _state_type state;



  enum {
    MODE_MANUAL_GPS = 0u,
    MODE_MANUAL_DGPS = 1u,
    MODE_DIFFERENTIAL_AUTO = 2u,
    MODE_UNKNOWN = 3u,
    USER_ACCESS_INFO_UNAVAILABLE = 0u,
    USER_OMNISTAR_DISABLED = 1u,
    USER_OMNISTAR_ENABLED = 2u,
    USER_LANDSTAR_DISABLED = 3u,
    USER_LANDSTAR_ENABLED = 4u,
    STATE_INIT_0 = 0u,
    STATE_INIT_1 = 1u,
    STATE_INIT_2 = 2u,
    STATE_INIT_3 = 3u,
    STATE_INIT_4 = 4u,
    STATE_INIT_COMPLETE = 5u,
    STATE_USER_ACCESS_CONFIRMED = 6u,
    STATE_RTCM_DATA_RECEIVED = 7u,
    STATE_DECODER_RESET_DETECTED = 8u,
    STATE_DECODER_UNAVAILABLE = 9u,
    STATE_NO_NEW_RTCM_DATA = 10u,
    STATE_NEED_UPDATE_FROM_MASTER = 11u,
    STATE_OFFSHORE_OPERATION_PROHIBITED = 12u,
    STATE_INVALID_OPERATING_REGION = 13u,
    STATE_INVALID_SATELLITE_LINK = 14u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> const> ConstPtr;

}; // struct GNSSDGPSStatus_

typedef ::applanix_msgs::GNSSDGPSStatus_<std::allocator<void> > GNSSDGPSStatus;

typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStatus > GNSSDGPSStatusPtr;
typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStatus const> GNSSDGPSStatusConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "e2533637a63b63e4d4385cf8f136e39a";
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xe2533637a63b63e4ULL;
  static const uint64_t static_value2 = 0xd4385cf8f136e39aULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GNSSDGPSStatus";
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Group 25\n"
"TimeDistance td\n"
"\n"
"uint8 MODE_MANUAL_GPS=0\n"
"uint8 MODE_MANUAL_DGPS=1\n"
"uint8 MODE_DIFFERENTIAL_AUTO=2\n"
"uint8 MODE_UNKNOWN=3\n"
"uint8 mode\n"
"\n"
"GNSSDGPSChannelStatus channel_0\n"
"GNSSDGPSChannelStatus channel_1\n"
"\n"
"# Service provider information\n"
"uint64 user_id_code\n"
"\n"
"uint8 USER_ACCESS_INFO_UNAVAILABLE=0\n"
"uint8 USER_OMNISTAR_DISABLED=1\n"
"uint8 USER_OMNISTAR_ENABLED=2\n"
"uint8 USER_LANDSTAR_DISABLED=3\n"
"uint8 USER_LANDSTAR_ENABLED=4\n"
"uint8 user_access\n"
"\n"
"uint8 STATE_INIT_0=0\n"
"uint8 STATE_INIT_1=1\n"
"uint8 STATE_INIT_2=2\n"
"uint8 STATE_INIT_3=3\n"
"uint8 STATE_INIT_4=4\n"
"uint8 STATE_INIT_COMPLETE=5\n"
"uint8 STATE_USER_ACCESS_CONFIRMED=6\n"
"uint8 STATE_RTCM_DATA_RECEIVED=7\n"
"uint8 STATE_DECODER_RESET_DETECTED=8\n"
"uint8 STATE_DECODER_UNAVAILABLE=9\n"
"uint8 STATE_NO_NEW_RTCM_DATA=10\n"
"uint8 STATE_NEED_UPDATE_FROM_MASTER=11\n"
"uint8 STATE_OFFSHORE_OPERATION_PROHIBITED=12\n"
"uint8 STATE_INVALID_OPERATING_REGION=13\n"
"uint8 STATE_INVALID_SATELLITE_LINK=14\n"
"uint8 state\n"
"\n"
"================================================================================\n"
"MSG: applanix_msgs/TimeDistance\n"
"float64 time1\n"
"float64 time2\n"
"float64 distance\n"
"uint8 time_types\n"
"uint8 distance_type\n"
"\n"
"================================================================================\n"
"MSG: applanix_msgs/GNSSDGPSChannelStatus\n"
"# Part of Group 25.\n"
"# TODO: enums\n"
"\n"
"float64 frequency\n"
"uint8 acquisition_mode\n"
"uint8 status\n"
"uint8 rtcm\n"
"uint8 snr\n"
"uint8 data_rate\n"
"uint8 lock\n"
"uint8 dgps_source_auto_switching\n"
"uint8 provider\n"
"\n"
;
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.td);
      stream.next(m.mode);
      stream.next(m.channel_0);
      stream.next(m.channel_1);
      stream.next(m.user_id_code);
      stream.next(m.user_access);
      stream.next(m.state);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GNSSDGPSStatus_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GNSSDGPSStatus_<ContainerAllocator>& v)
  {
    s << indent << "td: ";
    s << std::endl;
    Printer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >::stream(s, indent + "  ", v.td);
    s << indent << "mode: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.mode);
    s << indent << "channel_0: ";
    s << std::endl;
    Printer< ::applanix_msgs::GNSSDGPSChannelStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.channel_0);
    s << indent << "channel_1: ";
    s << std::endl;
    Printer< ::applanix_msgs::GNSSDGPSChannelStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.channel_1);
    s << indent << "user_id_code: ";
    Printer<uint64_t>::stream(s, indent + "  ", v.user_id_code);
    s << indent << "user_access: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.user_access);
    s << indent << "state: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.state);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATUS_H
