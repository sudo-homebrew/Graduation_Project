// Generated by gencpp from file applanix_msgs/BaseGNSSSetup.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_BASEGNSSSETUP_H
#define APPLANIX_MSGS_MESSAGE_BASEGNSSSETUP_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct BaseGNSSSetup_
{
  typedef BaseGNSSSetup_<ContainerAllocator> Type;

  BaseGNSSSetup_()
    : transaction(0)
    , base_gnss_input_type(0)
    , line_control(0)
    , modem_control(0)
    , connection_control(0)
    , phone_number()
    , num_redials(0)
    , modem_command_string()
    , modem_init_string()
    , data_timeout_length(0)
    , datum(0)  {
      phone_number.assign(0);

      modem_command_string.assign(0);

      modem_init_string.assign(0);
  }
  BaseGNSSSetup_(const ContainerAllocator& _alloc)
    : transaction(0)
    , base_gnss_input_type(0)
    , line_control(0)
    , modem_control(0)
    , connection_control(0)
    , phone_number()
    , num_redials(0)
    , modem_command_string()
    , modem_init_string()
    , data_timeout_length(0)
    , datum(0)  {
  (void)_alloc;
      phone_number.assign(0);

      modem_command_string.assign(0);

      modem_init_string.assign(0);
  }



   typedef uint16_t _transaction_type;
  _transaction_type transaction;

   typedef uint16_t _base_gnss_input_type_type;
  _base_gnss_input_type_type base_gnss_input_type;

   typedef uint8_t _line_control_type;
  _line_control_type line_control;

   typedef uint8_t _modem_control_type;
  _modem_control_type modem_control;

   typedef uint8_t _connection_control_type;
  _connection_control_type connection_control;

   typedef boost::array<uint8_t, 32>  _phone_number_type;
  _phone_number_type phone_number;

   typedef uint8_t _num_redials_type;
  _num_redials_type num_redials;

   typedef boost::array<uint8_t, 64>  _modem_command_string_type;
  _modem_command_string_type modem_command_string;

   typedef boost::array<uint8_t, 128>  _modem_init_string_type;
  _modem_init_string_type modem_init_string;

   typedef uint16_t _data_timeout_length_type;
  _data_timeout_length_type data_timeout_length;

   typedef uint16_t _datum_type;
  _datum_type datum;



  enum {
    TYPE_NONE = 0u,
    TYPE_RTCM_1 = 1u,
    TYPE_RTCM_3 = 2u,
    TYPE_CMR = 3u,
    DATUM_WGS84 = 0u,
    DATUM_NAD83 = 1u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> const> ConstPtr;

}; // struct BaseGNSSSetup_

typedef ::applanix_msgs::BaseGNSSSetup_<std::allocator<void> > BaseGNSSSetup;

typedef boost::shared_ptr< ::applanix_msgs::BaseGNSSSetup > BaseGNSSSetupPtr;
typedef boost::shared_ptr< ::applanix_msgs::BaseGNSSSetup const> BaseGNSSSetupConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "d1009e68ee977cbe61164b28eb218883";
  }

  static const char* value(const ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xd1009e68ee977cbeULL;
  static const uint64_t static_value2 = 0x61164b28eb218883ULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/BaseGNSSSetup";
  }

  static const char* value(const ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint16 transaction\n"
"\n"
"# TODO: enums\n"
"uint16 TYPE_NONE=0\n"
"uint16 TYPE_RTCM_1=1\n"
"uint16 TYPE_RTCM_3=2\n"
"uint16 TYPE_CMR=3\n"
"uint16 base_gnss_input_type\n"
"\n"
"uint8 line_control\n"
"\n"
"uint8 modem_control\n"
"\n"
"uint8 connection_control\n"
"\n"
"uint8[32] phone_number\n"
"\n"
"uint8 num_redials\n"
"\n"
"uint8[64] modem_command_string\n"
"\n"
"uint8[128] modem_init_string\n"
"\n"
"uint16 data_timeout_length\n"
"\n"
"uint16 DATUM_WGS84=0\n"
"uint16 DATUM_NAD83=1\n"
"uint16 datum\n"
;
  }

  static const char* value(const ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.transaction);
      stream.next(m.base_gnss_input_type);
      stream.next(m.line_control);
      stream.next(m.modem_control);
      stream.next(m.connection_control);
      stream.next(m.phone_number);
      stream.next(m.num_redials);
      stream.next(m.modem_command_string);
      stream.next(m.modem_init_string);
      stream.next(m.data_timeout_length);
      stream.next(m.datum);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct BaseGNSSSetup_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::BaseGNSSSetup_<ContainerAllocator>& v)
  {
    s << indent << "transaction: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.transaction);
    s << indent << "base_gnss_input_type: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.base_gnss_input_type);
    s << indent << "line_control: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.line_control);
    s << indent << "modem_control: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.modem_control);
    s << indent << "connection_control: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.connection_control);
    s << indent << "phone_number[]" << std::endl;
    for (size_t i = 0; i < v.phone_number.size(); ++i)
    {
      s << indent << "  phone_number[" << i << "]: ";
      Printer<uint8_t>::stream(s, indent + "  ", v.phone_number[i]);
    }
    s << indent << "num_redials: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.num_redials);
    s << indent << "modem_command_string[]" << std::endl;
    for (size_t i = 0; i < v.modem_command_string.size(); ++i)
    {
      s << indent << "  modem_command_string[" << i << "]: ";
      Printer<uint8_t>::stream(s, indent + "  ", v.modem_command_string[i]);
    }
    s << indent << "modem_init_string[]" << std::endl;
    for (size_t i = 0; i < v.modem_init_string.size(); ++i)
    {
      s << indent << "  modem_init_string[" << i << "]: ";
      Printer<uint8_t>::stream(s, indent + "  ", v.modem_init_string[i]);
    }
    s << indent << "data_timeout_length: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.data_timeout_length);
    s << indent << "datum: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.datum);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_BASEGNSSSETUP_H
