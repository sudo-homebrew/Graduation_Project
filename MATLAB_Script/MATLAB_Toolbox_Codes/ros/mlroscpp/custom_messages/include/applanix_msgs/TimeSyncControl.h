// Generated by gencpp from file applanix_msgs/TimeSyncControl.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_TIMESYNCCONTROL_H
#define APPLANIX_MSGS_MESSAGE_TIMESYNCCONTROL_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct TimeSyncControl_
{
  typedef TimeSyncControl_<ContainerAllocator> Type;

  TimeSyncControl_()
    : transaction(0)
    , user_pps_time(0.0)
    , user_time_conversion_factor(0.0)  {
    }
  TimeSyncControl_(const ContainerAllocator& _alloc)
    : transaction(0)
    , user_pps_time(0.0)
    , user_time_conversion_factor(0.0)  {
  (void)_alloc;
    }



   typedef uint16_t _transaction_type;
  _transaction_type transaction;

   typedef double _user_pps_time_type;
  _user_pps_time_type user_pps_time;

   typedef double _user_time_conversion_factor_type;
  _user_time_conversion_factor_type user_time_conversion_factor;





  typedef boost::shared_ptr< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> const> ConstPtr;

}; // struct TimeSyncControl_

typedef ::applanix_msgs::TimeSyncControl_<std::allocator<void> > TimeSyncControl;

typedef boost::shared_ptr< ::applanix_msgs::TimeSyncControl > TimeSyncControlPtr;
typedef boost::shared_ptr< ::applanix_msgs::TimeSyncControl const> TimeSyncControlConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::TimeSyncControl_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "1e6b12cc55fda44e001851a5e5433aad";
  }

  static const char* value(const ::applanix_msgs::TimeSyncControl_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x1e6b12cc55fda44eULL;
  static const uint64_t static_value2 = 0x001851a5e5433aadULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/TimeSyncControl";
  }

  static const char* value(const ::applanix_msgs::TimeSyncControl_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint16 transaction\n"
"\n"
"float64 user_pps_time\n"
"float64 user_time_conversion_factor\n"
;
  }

  static const char* value(const ::applanix_msgs::TimeSyncControl_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.transaction);
      stream.next(m.user_pps_time);
      stream.next(m.user_time_conversion_factor);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct TimeSyncControl_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::TimeSyncControl_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::TimeSyncControl_<ContainerAllocator>& v)
  {
    s << indent << "transaction: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.transaction);
    s << indent << "user_pps_time: ";
    Printer<double>::stream(s, indent + "  ", v.user_pps_time);
    s << indent << "user_time_conversion_factor: ";
    Printer<double>::stream(s, indent + "  ", v.user_time_conversion_factor);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_TIMESYNCCONTROL_H
