// Generated by gencpp from file applanix_msgs/GNSSChannelStatus.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GNSSCHANNELSTATUS_H
#define APPLANIX_MSGS_MESSAGE_GNSSCHANNELSTATUS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct GNSSChannelStatus_
{
  typedef GNSSChannelStatus_<ContainerAllocator> Type;

  GNSSChannelStatus_()
    : sv_prn(0)
    , status(0)
    , sv_azimuth(0.0)
    , sv_elevation(0.0)
    , sv_l1_snr(0.0)
    , sv_l2_snr(0.0)  {
    }
  GNSSChannelStatus_(const ContainerAllocator& _alloc)
    : sv_prn(0)
    , status(0)
    , sv_azimuth(0.0)
    , sv_elevation(0.0)
    , sv_l1_snr(0.0)
    , sv_l2_snr(0.0)  {
  (void)_alloc;
    }



   typedef uint16_t _sv_prn_type;
  _sv_prn_type sv_prn;

   typedef uint16_t _status_type;
  _status_type status;

   typedef float _sv_azimuth_type;
  _sv_azimuth_type sv_azimuth;

   typedef float _sv_elevation_type;
  _sv_elevation_type sv_elevation;

   typedef float _sv_l1_snr_type;
  _sv_l1_snr_type sv_l1_snr;

   typedef float _sv_l2_snr_type;
  _sv_l2_snr_type sv_l2_snr;



  enum {
    STATUS_L1_IDLE = 0u,
    STATUS_L1_ACQUISITION = 1u,
    STATUS_L1_CODE_LOCK = 3u,
    STATUS_L1_PHASE_LOCK = 5u,
    STATUS_L2_IDLE = 6u,
    STATUS_L2_ACQUISITION = 8u,
    STATUS_L2_CODE_LOCK = 9u,
    STATUS_L2_PHASE_LOCK = 11u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> const> ConstPtr;

}; // struct GNSSChannelStatus_

typedef ::applanix_msgs::GNSSChannelStatus_<std::allocator<void> > GNSSChannelStatus;

typedef boost::shared_ptr< ::applanix_msgs::GNSSChannelStatus > GNSSChannelStatusPtr;
typedef boost::shared_ptr< ::applanix_msgs::GNSSChannelStatus const> GNSSChannelStatusConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "e704e6e58bbc7d5b1e03c4dc44b6ebbf";
  }

  static const char* value(const ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xe704e6e58bbc7d5bULL;
  static const uint64_t static_value2 = 0x1e03c4dc44b6ebbfULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GNSSChannelStatus";
  }

  static const char* value(const ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint16 sv_prn\n"
"\n"
"uint16 STATUS_L1_IDLE=0\n"
"uint16 STATUS_L1_ACQUISITION=1\n"
"uint16 STATUS_L1_CODE_LOCK=3\n"
"uint16 STATUS_L1_PHASE_LOCK=5\n"
"uint16 STATUS_L2_IDLE=6\n"
"uint16 STATUS_L2_ACQUISITION=8\n"
"uint16 STATUS_L2_CODE_LOCK=9\n"
"uint16 STATUS_L2_PHASE_LOCK=11\n"
"uint16 status\n"
"\n"
"float32 sv_azimuth\n"
"float32 sv_elevation\n"
"float32 sv_l1_snr\n"
"float32 sv_l2_snr\n"
;
  }

  static const char* value(const ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.sv_prn);
      stream.next(m.status);
      stream.next(m.sv_azimuth);
      stream.next(m.sv_elevation);
      stream.next(m.sv_l1_snr);
      stream.next(m.sv_l2_snr);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GNSSChannelStatus_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator>& v)
  {
    s << indent << "sv_prn: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.sv_prn);
    s << indent << "status: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.status);
    s << indent << "sv_azimuth: ";
    Printer<float>::stream(s, indent + "  ", v.sv_azimuth);
    s << indent << "sv_elevation: ";
    Printer<float>::stream(s, indent + "  ", v.sv_elevation);
    s << indent << "sv_l1_snr: ";
    Printer<float>::stream(s, indent + "  ", v.sv_l1_snr);
    s << indent << "sv_l2_snr: ";
    Printer<float>::stream(s, indent + "  ", v.sv_l2_snr);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GNSSCHANNELSTATUS_H
