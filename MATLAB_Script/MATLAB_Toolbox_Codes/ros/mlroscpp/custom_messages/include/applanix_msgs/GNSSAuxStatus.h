// Generated by gencpp from file applanix_msgs/GNSSAuxStatus.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GNSSAUXSTATUS_H
#define APPLANIX_MSGS_MESSAGE_GNSSAUXSTATUS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <applanix_msgs/TimeDistance.h>
#include <applanix_msgs/GNSSChannelStatus.h>

namespace applanix_msgs
{
template <class ContainerAllocator>
struct GNSSAuxStatus_
{
  typedef GNSSAuxStatus_<ContainerAllocator> Type;

  GNSSAuxStatus_()
    : td()
    , solution_status(0)
    , channels_count(0)
    , reserved(0)
    , channels()
    , hdop(0.0)
    , vdop(0.0)
    , dgps_latency(0.0)
    , dgps_reference_id(0)
    , gps_week(0)
    , gps_time_offset(0.0)
    , gnss_latency(0.0)
    , geoidal_separation(0.0)
    , nmea_messages_received(0)
    , in_use(0)  {
    }
  GNSSAuxStatus_(const ContainerAllocator& _alloc)
    : td(_alloc)
    , solution_status(0)
    , channels_count(0)
    , reserved(0)
    , channels(_alloc)
    , hdop(0.0)
    , vdop(0.0)
    , dgps_latency(0.0)
    , dgps_reference_id(0)
    , gps_week(0)
    , gps_time_offset(0.0)
    , gnss_latency(0.0)
    , geoidal_separation(0.0)
    , nmea_messages_received(0)
    , in_use(0)  {
  (void)_alloc;
    }



   typedef  ::applanix_msgs::TimeDistance_<ContainerAllocator>  _td_type;
  _td_type td;

   typedef uint8_t _solution_status_type;
  _solution_status_type solution_status;

   typedef uint8_t _channels_count_type;
  _channels_count_type channels_count;

   typedef uint16_t _reserved_type;
  _reserved_type reserved;

   typedef std::vector< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >::other >  _channels_type;
  _channels_type channels;

   typedef float _hdop_type;
  _hdop_type hdop;

   typedef float _vdop_type;
  _vdop_type vdop;

   typedef float _dgps_latency_type;
  _dgps_latency_type dgps_latency;

   typedef uint16_t _dgps_reference_id_type;
  _dgps_reference_id_type dgps_reference_id;

   typedef uint32_t _gps_week_type;
  _gps_week_type gps_week;

   typedef double _gps_time_offset_type;
  _gps_time_offset_type gps_time_offset;

   typedef float _gnss_latency_type;
  _gnss_latency_type gnss_latency;

   typedef float _geoidal_separation_type;
  _geoidal_separation_type geoidal_separation;

   typedef uint16_t _nmea_messages_received_type;
  _nmea_messages_received_type nmea_messages_received;

   typedef uint8_t _in_use_type;
  _in_use_type in_use;



  enum {
    SOLUTION_UNKNOWN = 255u,
    SOLUTION_NO_DATA = 0u,
    SOLUTION_HORIZONTAL_CA = 1u,
    SOLUTION_3D_CA = 2u,
    SOLUTION_HORIZONTAL_DGPS = 3u,
    SOLUTION_3D_DGPS = 4u,
    SOLUTION_FLOAT_RTK = 5u,
    SOLUTION_WIDE_LANE_RTK = 6u,
    SOLUTION_NARROW_LANE_RTK = 7u,
    SOLUTION_P_CODE = 8u,
    SOLUTION_OMNISTAR_HP = 9u,
    SOLUTION_OMNISTAR_XP = 10u,
    SOLUTION_OMNISTAR_VBS = 11u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> const> ConstPtr;

}; // struct GNSSAuxStatus_

typedef ::applanix_msgs::GNSSAuxStatus_<std::allocator<void> > GNSSAuxStatus;

typedef boost::shared_ptr< ::applanix_msgs::GNSSAuxStatus > GNSSAuxStatusPtr;
typedef boost::shared_ptr< ::applanix_msgs::GNSSAuxStatus const> GNSSAuxStatusConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "7aa22394742b953a48015e9d1c3d090f";
  }

  static const char* value(const ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x7aa22394742b953aULL;
  static const uint64_t static_value2 = 0x48015e9d1c3d090fULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GNSSAuxStatus";
  }

  static const char* value(const ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "TimeDistance td\n"
"\n"
"uint8 SOLUTION_UNKNOWN=255\n"
"uint8 SOLUTION_NO_DATA=0\n"
"uint8 SOLUTION_HORIZONTAL_CA=1\n"
"uint8 SOLUTION_3D_CA=2\n"
"uint8 SOLUTION_HORIZONTAL_DGPS=3\n"
"uint8 SOLUTION_3D_DGPS=4\n"
"uint8 SOLUTION_FLOAT_RTK=5\n"
"uint8 SOLUTION_WIDE_LANE_RTK=6\n"
"uint8 SOLUTION_NARROW_LANE_RTK=7\n"
"uint8 SOLUTION_P_CODE=8\n"
"uint8 SOLUTION_OMNISTAR_HP=9\n"
"uint8 SOLUTION_OMNISTAR_XP=10\n"
"uint8 SOLUTION_OMNISTAR_VBS=11\n"
"uint8 solution_status\n"
"\n"
"uint8 channels_count\n"
"uint16 reserved\n"
"GNSSChannelStatus[] channels\n"
"\n"
"float32 hdop\n"
"float32 vdop\n"
"float32 dgps_latency\n"
"uint16 dgps_reference_id\n"
"\n"
"uint32 gps_week\n"
"float64 gps_time_offset\n"
"\n"
"float32 gnss_latency\n"
"float32 geoidal_separation\n"
"\n"
"#TODO: enum\n"
"uint16 nmea_messages_received\n"
"uint8 in_use\n"
"\n"
"================================================================================\n"
"MSG: applanix_msgs/TimeDistance\n"
"float64 time1\n"
"float64 time2\n"
"float64 distance\n"
"uint8 time_types\n"
"uint8 distance_type\n"
"\n"
"================================================================================\n"
"MSG: applanix_msgs/GNSSChannelStatus\n"
"uint16 sv_prn\n"
"\n"
"uint16 STATUS_L1_IDLE=0\n"
"uint16 STATUS_L1_ACQUISITION=1\n"
"uint16 STATUS_L1_CODE_LOCK=3\n"
"uint16 STATUS_L1_PHASE_LOCK=5\n"
"uint16 STATUS_L2_IDLE=6\n"
"uint16 STATUS_L2_ACQUISITION=8\n"
"uint16 STATUS_L2_CODE_LOCK=9\n"
"uint16 STATUS_L2_PHASE_LOCK=11\n"
"uint16 status\n"
"\n"
"float32 sv_azimuth\n"
"float32 sv_elevation\n"
"float32 sv_l1_snr\n"
"float32 sv_l2_snr\n"
;
  }

  static const char* value(const ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.td);
      stream.next(m.solution_status);
      stream.next(m.channels_count);
      stream.next(m.reserved);
      stream.next(m.channels);
      stream.next(m.hdop);
      stream.next(m.vdop);
      stream.next(m.dgps_latency);
      stream.next(m.dgps_reference_id);
      stream.next(m.gps_week);
      stream.next(m.gps_time_offset);
      stream.next(m.gnss_latency);
      stream.next(m.geoidal_separation);
      stream.next(m.nmea_messages_received);
      stream.next(m.in_use);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GNSSAuxStatus_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GNSSAuxStatus_<ContainerAllocator>& v)
  {
    s << indent << "td: ";
    s << std::endl;
    Printer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >::stream(s, indent + "  ", v.td);
    s << indent << "solution_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.solution_status);
    s << indent << "channels_count: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.channels_count);
    s << indent << "reserved: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.reserved);
    s << indent << "channels[]" << std::endl;
    for (size_t i = 0; i < v.channels.size(); ++i)
    {
      s << indent << "  channels[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::applanix_msgs::GNSSChannelStatus_<ContainerAllocator> >::stream(s, indent + "    ", v.channels[i]);
    }
    s << indent << "hdop: ";
    Printer<float>::stream(s, indent + "  ", v.hdop);
    s << indent << "vdop: ";
    Printer<float>::stream(s, indent + "  ", v.vdop);
    s << indent << "dgps_latency: ";
    Printer<float>::stream(s, indent + "  ", v.dgps_latency);
    s << indent << "dgps_reference_id: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.dgps_reference_id);
    s << indent << "gps_week: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.gps_week);
    s << indent << "gps_time_offset: ";
    Printer<double>::stream(s, indent + "  ", v.gps_time_offset);
    s << indent << "gnss_latency: ";
    Printer<float>::stream(s, indent + "  ", v.gnss_latency);
    s << indent << "geoidal_separation: ";
    Printer<float>::stream(s, indent + "  ", v.geoidal_separation);
    s << indent << "nmea_messages_received: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.nmea_messages_received);
    s << indent << "in_use: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.in_use);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GNSSAUXSTATUS_H
