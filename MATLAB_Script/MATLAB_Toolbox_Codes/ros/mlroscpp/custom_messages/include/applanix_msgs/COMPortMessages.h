// Generated by gencpp from file applanix_msgs/COMPortMessages.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_COMPORTMESSAGES_H
#define APPLANIX_MSGS_MESSAGE_COMPORTMESSAGES_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct COMPortMessages_
{
  typedef COMPortMessages_<ContainerAllocator> Type;

  COMPortMessages_()
    : port_num(0)
    , messages(0)
    , update_rate(0)  {
    }
  COMPortMessages_(const ContainerAllocator& _alloc)
    : port_num(0)
    , messages(0)
    , update_rate(0)  {
  (void)_alloc;
    }



   typedef uint8_t _port_num_type;
  _port_num_type port_num;

   typedef uint32_t _messages_type;
  _messages_type messages;

   typedef uint8_t _update_rate_type;
  _update_rate_type update_rate;



  enum {
    MESSAGES_NMEA_GST = 1u,
    MESSAGES_NMEA_GGA = 2u,
    MESSAGES_NMEA_HDT = 4u,
    MESSAGES_NMEA_ZDA = 8u,
    MESSAGES_NMEA_EVT1 = 16u,
    MESSAGES_NMEA_EVT2 = 32u,
    MESSAGES_NMEA_VTG = 64u,
    MESSAGES_NMEA_PASHR = 128u,
    MESSAGES_NMEA_GGA2 = 8192u,
    MESSAGES_NMEA_PPS = 16384u,
    MESSAGES_NMEA_GGK = 32768u,
    MESSAGES_NMEA_RMC = 65536u,
    MESSAGES_BIN_GIMBAL_LOOP = 1u,
    MESSAGES_BIN_RDR1 = 2u,
    MESSAGES_BIN_PAST2 = 4u,
    MESSAGES_BIN_PPS = 65536u,
    MESSAGES_BIN_TM1B = 131072u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::COMPortMessages_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::COMPortMessages_<ContainerAllocator> const> ConstPtr;

}; // struct COMPortMessages_

typedef ::applanix_msgs::COMPortMessages_<std::allocator<void> > COMPortMessages;

typedef boost::shared_ptr< ::applanix_msgs::COMPortMessages > COMPortMessagesPtr;
typedef boost::shared_ptr< ::applanix_msgs::COMPortMessages const> COMPortMessagesConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::COMPortMessages_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::COMPortMessages_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::COMPortMessages_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::COMPortMessages_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
{
  static const char* value()
  {
    return "88218ad4124322a799282c496fb3a33f";
  }

  static const char* value(const ::applanix_msgs::COMPortMessages_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x88218ad4124322a7ULL;
  static const uint64_t static_value2 = 0x99282c496fb3a33fULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/COMPortMessages";
  }

  static const char* value(const ::applanix_msgs::COMPortMessages_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint8 port_num\n"
"\n"
"uint32 MESSAGES_NMEA_GST=1\n"
"uint32 MESSAGES_NMEA_GGA=2\n"
"uint32 MESSAGES_NMEA_HDT=4\n"
"uint32 MESSAGES_NMEA_ZDA=8\n"
"uint32 MESSAGES_NMEA_EVT1=16\n"
"uint32 MESSAGES_NMEA_EVT2=32\n"
"uint32 MESSAGES_NMEA_VTG=64\n"
"uint32 MESSAGES_NMEA_PASHR=128\n"
"uint32 MESSAGES_NMEA_GGA2=8192\n"
"uint32 MESSAGES_NMEA_PPS=16384\n"
"uint32 MESSAGES_NMEA_GGK=32768\n"
"uint32 MESSAGES_NMEA_RMC=65536\n"
"uint32 MESSAGES_BIN_GIMBAL_LOOP=1\n"
"uint32 MESSAGES_BIN_RDR1=2\n"
"uint32 MESSAGES_BIN_PAST2=4\n"
"uint32 MESSAGES_BIN_PPS=65536\n"
"uint32 MESSAGES_BIN_TM1B=131072\n"
"uint32 messages\n"
"\n"
"uint8 update_rate\n"
;
  }

  static const char* value(const ::applanix_msgs::COMPortMessages_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.port_num);
      stream.next(m.messages);
      stream.next(m.update_rate);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct COMPortMessages_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::COMPortMessages_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::COMPortMessages_<ContainerAllocator>& v)
  {
    s << indent << "port_num: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.port_num);
    s << indent << "messages: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.messages);
    s << indent << "update_rate: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.update_rate);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_COMPORTMESSAGES_H
