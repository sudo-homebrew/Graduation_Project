// Generated by gencpp from file applanix_msgs/TimeDistance.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_TIMEDISTANCE_H
#define APPLANIX_MSGS_MESSAGE_TIMEDISTANCE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct TimeDistance_
{
  typedef TimeDistance_<ContainerAllocator> Type;

  TimeDistance_()
    : time1(0.0)
    , time2(0.0)
    , distance(0.0)
    , time_types(0)
    , distance_type(0)  {
    }
  TimeDistance_(const ContainerAllocator& _alloc)
    : time1(0.0)
    , time2(0.0)
    , distance(0.0)
    , time_types(0)
    , distance_type(0)  {
  (void)_alloc;
    }



   typedef double _time1_type;
  _time1_type time1;

   typedef double _time2_type;
  _time2_type time2;

   typedef double _distance_type;
  _distance_type distance;

   typedef uint8_t _time_types_type;
  _time_types_type time_types;

   typedef uint8_t _distance_type_type;
  _distance_type_type distance_type;





  typedef boost::shared_ptr< ::applanix_msgs::TimeDistance_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::TimeDistance_<ContainerAllocator> const> ConstPtr;

}; // struct TimeDistance_

typedef ::applanix_msgs::TimeDistance_<std::allocator<void> > TimeDistance;

typedef boost::shared_ptr< ::applanix_msgs::TimeDistance > TimeDistancePtr;
typedef boost::shared_ptr< ::applanix_msgs::TimeDistance const> TimeDistanceConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::TimeDistance_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::TimeDistance_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::TimeDistance_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::TimeDistance_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
{
  static const char* value()
  {
    return "c8b5a7586db329934f062ec5ad7a8c3d";
  }

  static const char* value(const ::applanix_msgs::TimeDistance_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xc8b5a7586db32993ULL;
  static const uint64_t static_value2 = 0x4f062ec5ad7a8c3dULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/TimeDistance";
  }

  static const char* value(const ::applanix_msgs::TimeDistance_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
{
  static const char* value()
  {
    return "float64 time1\n"
"float64 time2\n"
"float64 distance\n"
"uint8 time_types\n"
"uint8 distance_type\n"
;
  }

  static const char* value(const ::applanix_msgs::TimeDistance_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.time1);
      stream.next(m.time2);
      stream.next(m.distance);
      stream.next(m.time_types);
      stream.next(m.distance_type);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct TimeDistance_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::TimeDistance_<ContainerAllocator>& v)
  {
    s << indent << "time1: ";
    Printer<double>::stream(s, indent + "  ", v.time1);
    s << indent << "time2: ";
    Printer<double>::stream(s, indent + "  ", v.time2);
    s << indent << "distance: ";
    Printer<double>::stream(s, indent + "  ", v.distance);
    s << indent << "time_types: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.time_types);
    s << indent << "distance_type: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.distance_type);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_TIMEDISTANCE_H
