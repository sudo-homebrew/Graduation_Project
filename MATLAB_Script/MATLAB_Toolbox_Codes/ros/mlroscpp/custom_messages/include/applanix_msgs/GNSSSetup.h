// Generated by gencpp from file applanix_msgs/GNSSSetup.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GNSSSETUP_H
#define APPLANIX_MSGS_MESSAGE_GNSSSETUP_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct GNSSSetup_
{
  typedef GNSSSetup_<ContainerAllocator> Type;

  GNSSSetup_()
    : transaction(0)
    , autoconfig(0)
    , rate(0)
    , reserved1(0)
    , reserved2(0)
    , reserved3(0)  {
    }
  GNSSSetup_(const ContainerAllocator& _alloc)
    : transaction(0)
    , autoconfig(0)
    , rate(0)
    , reserved1(0)
    , reserved2(0)
    , reserved3(0)  {
  (void)_alloc;
    }



   typedef uint16_t _transaction_type;
  _transaction_type transaction;

   typedef uint8_t _autoconfig_type;
  _autoconfig_type autoconfig;

   typedef uint8_t _rate_type;
  _rate_type rate;

   typedef uint8_t _reserved1_type;
  _reserved1_type reserved1;

   typedef uint32_t _reserved2_type;
  _reserved2_type reserved2;

   typedef uint8_t _reserved3_type;
  _reserved3_type reserved3;



  enum {
    AUTOCONFIG_ENABLE = 1u,
    AUTOCONFIG_DISABLE = 0u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GNSSSetup_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GNSSSetup_<ContainerAllocator> const> ConstPtr;

}; // struct GNSSSetup_

typedef ::applanix_msgs::GNSSSetup_<std::allocator<void> > GNSSSetup;

typedef boost::shared_ptr< ::applanix_msgs::GNSSSetup > GNSSSetupPtr;
typedef boost::shared_ptr< ::applanix_msgs::GNSSSetup const> GNSSSetupConstPtr;

// constants requiring out of line definition

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GNSSSetup_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSSetup_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSSetup_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSSetup_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "02ec55e95fd85f13541cf9fc7cb12f4e";
  }

  static const char* value(const ::applanix_msgs::GNSSSetup_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x02ec55e95fd85f13ULL;
  static const uint64_t static_value2 = 0x541cf9fc7cb12f4eULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GNSSSetup";
  }

  static const char* value(const ::applanix_msgs::GNSSSetup_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Msg 30, 31\n"
"uint16 transaction\n"
"\n"
"uint8 AUTOCONFIG_ENABLE=1\n"
"uint8 AUTOCONFIG_DISABLE=0\n"
"uint8 autoconfig\n"
"\n"
"# Valid values = 1, 5, 10 (Hz)\n"
"uint8 rate\n"
"\n"
"uint8 reserved1\n"
"uint32 reserved2\n"
"uint8 reserved3\n"
;
  }

  static const char* value(const ::applanix_msgs::GNSSSetup_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.transaction);
      stream.next(m.autoconfig);
      stream.next(m.rate);
      stream.next(m.reserved1);
      stream.next(m.reserved2);
      stream.next(m.reserved3);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GNSSSetup_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GNSSSetup_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GNSSSetup_<ContainerAllocator>& v)
  {
    s << indent << "transaction: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.transaction);
    s << indent << "autoconfig: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.autoconfig);
    s << indent << "rate: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.rate);
    s << indent << "reserved1: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.reserved1);
    s << indent << "reserved2: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.reserved2);
    s << indent << "reserved3: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.reserved3);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GNSSSETUP_H
