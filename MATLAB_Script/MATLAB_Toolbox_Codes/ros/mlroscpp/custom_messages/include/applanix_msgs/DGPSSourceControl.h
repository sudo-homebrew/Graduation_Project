// Generated by gencpp from file applanix_msgs/DGPSSourceControl.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_DGPSSOURCECONTROL_H
#define APPLANIX_MSGS_MESSAGE_DGPSSOURCECONTROL_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct DGPSSourceControl_
{
  typedef DGPSSourceControl_<ContainerAllocator> Type;

  DGPSSourceControl_()
    : transaction(0)
    , dgps_source_mode(0)
    , beacon_acquisition_mode(0)
    , beacon_channel_0_frequency(0)
    , beacon_channel_1_frequency(0)
    , satellite_id(0)
    , satellite_bitrate(0)
    , satellite_frequency(0.0)
    , request_database_source(0)
    , landstar_correction_source(0)
    , omnistar_activation_code()  {
      omnistar_activation_code.assign(0);
  }
  DGPSSourceControl_(const ContainerAllocator& _alloc)
    : transaction(0)
    , dgps_source_mode(0)
    , beacon_acquisition_mode(0)
    , beacon_channel_0_frequency(0)
    , beacon_channel_1_frequency(0)
    , satellite_id(0)
    , satellite_bitrate(0)
    , satellite_frequency(0.0)
    , request_database_source(0)
    , landstar_correction_source(0)
    , omnistar_activation_code()  {
  (void)_alloc;
      omnistar_activation_code.assign(0);
  }



   typedef uint16_t _transaction_type;
  _transaction_type transaction;

   typedef uint8_t _dgps_source_mode_type;
  _dgps_source_mode_type dgps_source_mode;

   typedef uint8_t _beacon_acquisition_mode_type;
  _beacon_acquisition_mode_type beacon_acquisition_mode;

   typedef uint16_t _beacon_channel_0_frequency_type;
  _beacon_channel_0_frequency_type beacon_channel_0_frequency;

   typedef uint16_t _beacon_channel_1_frequency_type;
  _beacon_channel_1_frequency_type beacon_channel_1_frequency;

   typedef uint8_t _satellite_id_type;
  _satellite_id_type satellite_id;

   typedef uint16_t _satellite_bitrate_type;
  _satellite_bitrate_type satellite_bitrate;

   typedef double _satellite_frequency_type;
  _satellite_frequency_type satellite_frequency;

   typedef uint8_t _request_database_source_type;
  _request_database_source_type request_database_source;

   typedef uint8_t _landstar_correction_source_type;
  _landstar_correction_source_type landstar_correction_source;

   typedef boost::array<uint8_t, 26>  _omnistar_activation_code_type;
  _omnistar_activation_code_type omnistar_activation_code;





  typedef boost::shared_ptr< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> const> ConstPtr;

}; // struct DGPSSourceControl_

typedef ::applanix_msgs::DGPSSourceControl_<std::allocator<void> > DGPSSourceControl;

typedef boost::shared_ptr< ::applanix_msgs::DGPSSourceControl > DGPSSourceControlPtr;
typedef boost::shared_ptr< ::applanix_msgs::DGPSSourceControl const> DGPSSourceControlConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "647a618f1252a3c18cb54ba603253af8";
  }

  static const char* value(const ::applanix_msgs::DGPSSourceControl_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x647a618f1252a3c1ULL;
  static const uint64_t static_value2 = 0x8cb54ba603253af8ULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/DGPSSourceControl";
  }

  static const char* value(const ::applanix_msgs::DGPSSourceControl_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Msg 41\n"
"uint16 transaction\n"
"\n"
"# TODO: enums\n"
"uint8 dgps_source_mode\n"
"uint8 beacon_acquisition_mode\n"
"uint16 beacon_channel_0_frequency\n"
"uint16 beacon_channel_1_frequency\n"
"\n"
"uint8 satellite_id\n"
"\n"
"uint16 satellite_bitrate\n"
"float64 satellite_frequency\n"
"\n"
"uint8 request_database_source\n"
"uint8 landstar_correction_source\n"
"uint8[26] omnistar_activation_code\n"
;
  }

  static const char* value(const ::applanix_msgs::DGPSSourceControl_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.transaction);
      stream.next(m.dgps_source_mode);
      stream.next(m.beacon_acquisition_mode);
      stream.next(m.beacon_channel_0_frequency);
      stream.next(m.beacon_channel_1_frequency);
      stream.next(m.satellite_id);
      stream.next(m.satellite_bitrate);
      stream.next(m.satellite_frequency);
      stream.next(m.request_database_source);
      stream.next(m.landstar_correction_source);
      stream.next(m.omnistar_activation_code);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct DGPSSourceControl_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::DGPSSourceControl_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::DGPSSourceControl_<ContainerAllocator>& v)
  {
    s << indent << "transaction: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.transaction);
    s << indent << "dgps_source_mode: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.dgps_source_mode);
    s << indent << "beacon_acquisition_mode: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.beacon_acquisition_mode);
    s << indent << "beacon_channel_0_frequency: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.beacon_channel_0_frequency);
    s << indent << "beacon_channel_1_frequency: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.beacon_channel_1_frequency);
    s << indent << "satellite_id: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.satellite_id);
    s << indent << "satellite_bitrate: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.satellite_bitrate);
    s << indent << "satellite_frequency: ";
    Printer<double>::stream(s, indent + "  ", v.satellite_frequency);
    s << indent << "request_database_source: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.request_database_source);
    s << indent << "landstar_correction_source: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.landstar_correction_source);
    s << indent << "omnistar_activation_code[]" << std::endl;
    for (size_t i = 0; i < v.omnistar_activation_code.size(); ++i)
    {
      s << indent << "  omnistar_activation_code[" << i << "]: ";
      Printer<uint8_t>::stream(s, indent + "  ", v.omnistar_activation_code[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_DGPSSOURCECONTROL_H
