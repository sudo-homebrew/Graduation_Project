// Generated by gencpp from file applanix_msgs/GNSSDGPSStation.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATION_H
#define APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATION_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace applanix_msgs
{
template <class ContainerAllocator>
struct GNSSDGPSStation_
{
  typedef GNSSDGPSStation_<ContainerAllocator> Type;

  GNSSDGPSStation_()
    : flags(0)
    , id(0)
    , frequency(0)
    , health(0)
    , distance(0.0)
    , range(0.0)
    , uscg_index(0)
    , seconds(0)
    , modulation_rate(0)  {
    }
  GNSSDGPSStation_(const ContainerAllocator& _alloc)
    : flags(0)
    , id(0)
    , frequency(0)
    , health(0)
    , distance(0.0)
    , range(0.0)
    , uscg_index(0)
    , seconds(0)
    , modulation_rate(0)  {
  (void)_alloc;
    }



   typedef uint8_t _flags_type;
  _flags_type flags;

   typedef uint16_t _id_type;
  _id_type id;

   typedef uint16_t _frequency_type;
  _frequency_type frequency;

   typedef uint8_t _health_type;
  _health_type health;

   typedef float _distance_type;
  _distance_type distance;

   typedef float _range_type;
  _range_type range;

   typedef uint8_t _uscg_index_type;
  _uscg_index_type uscg_index;

   typedef uint32_t _seconds_type;
  _seconds_type seconds;

   typedef uint8_t _modulation_rate_type;
  _modulation_rate_type modulation_rate;



  enum {
    FLAGS_SATELLITE = 1u,
    FLAGS_STATION_PROVIDING_CORRECTIONS = 2u,
    FLAGS_STATION_USED_AS_RTCM_SOURCE = 4u,
    FLAGS_OMNISTAR_STATIONS = 8u,
    HEALTH_NORMAL = 0u,
    HEALTH_NOT_MONITORED = 1u,
    HEALTH_NO_INFO_AVAILABLE = 2u,
    HEALTH_DO_NOT_USE = 3u,
    RATE_25BPS = 0u,
    RATE_50BPS = 1u,
    RATE_100BPS = 2u,
    RATE_200BPS = 3u,
    RATE_600BPS = 4u,
    RATE_1200BPS = 5u,
    RATE_2400BPS = 6u,
    RATE_4800BPS = 7u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> const> ConstPtr;

}; // struct GNSSDGPSStation_

typedef ::applanix_msgs::GNSSDGPSStation_<std::allocator<void> > GNSSDGPSStation;

typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStation > GNSSDGPSStationPtr;
typedef boost::shared_ptr< ::applanix_msgs::GNSSDGPSStation const> GNSSDGPSStationConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
{
  static const char* value()
  {
    return "1f46e4339250717d9fe1a568f6172d8b";
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x1f46e4339250717dULL;
  static const uint64_t static_value2 = 0x9fe1a568f6172d8bULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GNSSDGPSStation";
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# Part of Group 26\n"
"\n"
"uint8 FLAGS_SATELLITE=1\n"
"uint8 FLAGS_STATION_PROVIDING_CORRECTIONS=2\n"
"uint8 FLAGS_STATION_USED_AS_RTCM_SOURCE=4\n"
"uint8 FLAGS_OMNISTAR_STATIONS=8\n"
"uint8 flags\n"
"\n"
"uint16 id\n"
"uint16 frequency\n"
"\n"
"uint8 HEALTH_NORMAL=0\n"
"uint8 HEALTH_NOT_MONITORED=1\n"
"uint8 HEALTH_NO_INFO_AVAILABLE=2\n"
"uint8 HEALTH_DO_NOT_USE=3\n"
"uint8 health\n"
"\n"
"float32 distance\n"
"float32 range\n"
"uint8 uscg_index\n"
"uint32 seconds\n"
"\n"
"uint8 RATE_25BPS=0\n"
"uint8 RATE_50BPS=1\n"
"uint8 RATE_100BPS=2\n"
"uint8 RATE_200BPS=3\n"
"uint8 RATE_600BPS=4\n"
"uint8 RATE_1200BPS=5\n"
"uint8 RATE_2400BPS=6\n"
"uint8 RATE_4800BPS=7\n"
"uint8 modulation_rate\n"
;
  }

  static const char* value(const ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.flags);
      stream.next(m.id);
      stream.next(m.frequency);
      stream.next(m.health);
      stream.next(m.distance);
      stream.next(m.range);
      stream.next(m.uscg_index);
      stream.next(m.seconds);
      stream.next(m.modulation_rate);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GNSSDGPSStation_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GNSSDGPSStation_<ContainerAllocator>& v)
  {
    s << indent << "flags: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.flags);
    s << indent << "id: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.id);
    s << indent << "frequency: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.frequency);
    s << indent << "health: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.health);
    s << indent << "distance: ";
    Printer<float>::stream(s, indent + "  ", v.distance);
    s << indent << "range: ";
    Printer<float>::stream(s, indent + "  ", v.range);
    s << indent << "uscg_index: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.uscg_index);
    s << indent << "seconds: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.seconds);
    s << indent << "modulation_rate: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.modulation_rate);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GNSSDGPSSTATION_H
