// Generated by gencpp from file applanix_msgs/GAMS.msg
// DO NOT EDIT!


#ifndef APPLANIX_MSGS_MESSAGE_GAMS_H
#define APPLANIX_MSGS_MESSAGE_GAMS_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <applanix_msgs/TimeDistance.h>

namespace applanix_msgs
{
template <class ContainerAllocator>
struct GAMS_
{
  typedef GAMS_<ContainerAllocator> Type;

  GAMS_()
    : td()
    , num_satellites(0)
    , a_priori_pdop(0.0)
    , antenna_separation(0.0)
    , status(0)
    , prn_assignment()
    , cycle_slip_flag(0)
    , gams_heading(0.0)
    , gams_heading_rms_err(0.0)  {
      prn_assignment.assign(0);
  }
  GAMS_(const ContainerAllocator& _alloc)
    : td(_alloc)
    , num_satellites(0)
    , a_priori_pdop(0.0)
    , antenna_separation(0.0)
    , status(0)
    , prn_assignment()
    , cycle_slip_flag(0)
    , gams_heading(0.0)
    , gams_heading_rms_err(0.0)  {
  (void)_alloc;
      prn_assignment.assign(0);
  }



   typedef  ::applanix_msgs::TimeDistance_<ContainerAllocator>  _td_type;
  _td_type td;

   typedef uint8_t _num_satellites_type;
  _num_satellites_type num_satellites;

   typedef float _a_priori_pdop_type;
  _a_priori_pdop_type a_priori_pdop;

   typedef float _antenna_separation_type;
  _antenna_separation_type antenna_separation;

   typedef uint8_t _status_type;
  _status_type status;

   typedef boost::array<uint8_t, 12>  _prn_assignment_type;
  _prn_assignment_type prn_assignment;

   typedef uint16_t _cycle_slip_flag_type;
  _cycle_slip_flag_type cycle_slip_flag;

   typedef double _gams_heading_type;
  _gams_heading_type gams_heading;

   typedef double _gams_heading_rms_err_type;
  _gams_heading_rms_err_type gams_heading_rms_err;



  enum {
    STATUS_FIXED_INTEGER = 0u,
    STATUS_FIXED_INTEGER_TEST_INSTALL_DATA = 1u,
    STATUS_DEGRADED_FIXED_INTEGER = 2u,
    STATUS_FLOATED_AMBIGUITY = 3u,
    STATUS_DEGRADED_FLOATED_AMBIGUITY = 4u,
    STATUS_SOLUTION_WITHOUT_INSTALL_DATA = 5u,
    STATUS_SOLUTION_FROM_ATTITUDE_AND_INSTALL_DATA = 6u,
    STATUS_NO_SOLUTION = 7u,
    PRN_UNASSIGNED = 0u,
  };


  typedef boost::shared_ptr< ::applanix_msgs::GAMS_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::applanix_msgs::GAMS_<ContainerAllocator> const> ConstPtr;

}; // struct GAMS_

typedef ::applanix_msgs::GAMS_<std::allocator<void> > GAMS;

typedef boost::shared_ptr< ::applanix_msgs::GAMS > GAMSPtr;
typedef boost::shared_ptr< ::applanix_msgs::GAMS const> GAMSConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::applanix_msgs::GAMS_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::applanix_msgs::GAMS_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace applanix_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/geometry_msgs/msg'], 'std_msgs': ['/mathworks/devel/sbs/31/pmurali.Brobot.j1329247.2/matlab/sys/ros1/glnxa64/ros1/share/std_msgs/cmake/../msg'], 'applanix_msgs': ['/mathworks/home/pmurali/Documents/Working/matlab_msg_gen_ros1/glnxa64/src/applanix_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GAMS_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::applanix_msgs::GAMS_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GAMS_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::applanix_msgs::GAMS_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GAMS_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::applanix_msgs::GAMS_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::applanix_msgs::GAMS_<ContainerAllocator> >
{
  static const char* value()
  {
    return "018cc2b2b8ae19d409c9e0d80bd8927e";
  }

  static const char* value(const ::applanix_msgs::GAMS_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x018cc2b2b8ae19d4ULL;
  static const uint64_t static_value2 = 0x09c9e0d80bd8927eULL;
};

template<class ContainerAllocator>
struct DataType< ::applanix_msgs::GAMS_<ContainerAllocator> >
{
  static const char* value()
  {
    return "applanix_msgs/GAMS";
  }

  static const char* value(const ::applanix_msgs::GAMS_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::applanix_msgs::GAMS_<ContainerAllocator> >
{
  static const char* value()
  {
    return "TimeDistance td\n"
"\n"
"uint8 num_satellites\n"
"float32 a_priori_pdop\n"
"float32 antenna_separation\n"
"\n"
"uint8 STATUS_FIXED_INTEGER=0\n"
"uint8 STATUS_FIXED_INTEGER_TEST_INSTALL_DATA=1\n"
"uint8 STATUS_DEGRADED_FIXED_INTEGER=2\n"
"uint8 STATUS_FLOATED_AMBIGUITY=3\n"
"uint8 STATUS_DEGRADED_FLOATED_AMBIGUITY=4\n"
"uint8 STATUS_SOLUTION_WITHOUT_INSTALL_DATA=5\n"
"uint8 STATUS_SOLUTION_FROM_ATTITUDE_AND_INSTALL_DATA=6\n"
"uint8 STATUS_NO_SOLUTION=7\n"
"uint8 status\n"
"\n"
"uint8 PRN_UNASSIGNED=0\n"
"uint8[12] prn_assignment\n"
"\n"
"uint16 cycle_slip_flag\n"
"\n"
"float64 gams_heading\n"
"float64 gams_heading_rms_err\n"
"\n"
"================================================================================\n"
"MSG: applanix_msgs/TimeDistance\n"
"float64 time1\n"
"float64 time2\n"
"float64 distance\n"
"uint8 time_types\n"
"uint8 distance_type\n"
;
  }

  static const char* value(const ::applanix_msgs::GAMS_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::applanix_msgs::GAMS_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.td);
      stream.next(m.num_satellites);
      stream.next(m.a_priori_pdop);
      stream.next(m.antenna_separation);
      stream.next(m.status);
      stream.next(m.prn_assignment);
      stream.next(m.cycle_slip_flag);
      stream.next(m.gams_heading);
      stream.next(m.gams_heading_rms_err);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GAMS_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::applanix_msgs::GAMS_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::applanix_msgs::GAMS_<ContainerAllocator>& v)
  {
    s << indent << "td: ";
    s << std::endl;
    Printer< ::applanix_msgs::TimeDistance_<ContainerAllocator> >::stream(s, indent + "  ", v.td);
    s << indent << "num_satellites: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.num_satellites);
    s << indent << "a_priori_pdop: ";
    Printer<float>::stream(s, indent + "  ", v.a_priori_pdop);
    s << indent << "antenna_separation: ";
    Printer<float>::stream(s, indent + "  ", v.antenna_separation);
    s << indent << "status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.status);
    s << indent << "prn_assignment[]" << std::endl;
    for (size_t i = 0; i < v.prn_assignment.size(); ++i)
    {
      s << indent << "  prn_assignment[" << i << "]: ";
      Printer<uint8_t>::stream(s, indent + "  ", v.prn_assignment[i]);
    }
    s << indent << "cycle_slip_flag: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.cycle_slip_flag);
    s << indent << "gams_heading: ";
    Printer<double>::stream(s, indent + "  ", v.gams_heading);
    s << indent << "gams_heading_rms_err: ";
    Printer<double>::stream(s, indent + "  ", v.gams_heading_rms_err);
  }
};

} // namespace message_operations
} // namespace ros

#endif // APPLANIX_MSGS_MESSAGE_GAMS_H
