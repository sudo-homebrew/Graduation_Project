classdef RobotList < robotics.manip.internal.InternalAccess
%This class is for internal use only. It may be removed in the future.

%ROBOTLIST stores the names of robots supported by loadrobot function.

%   Copyright 2019-2021 The MathWorks, Inc.

%#codegen

    properties(Constant)
        % store the names in alphabetical order
        ManipulatorRobots = [ ...
            "abbIrb120"               ,...
            "abbIrb120T"              ,...
            "abbIrb1600"              ,...
            "abbYuMi"                 ,...
            "atlas"                   ,...
            "fanucLRMate200ib"        ,...
            "fanucM16ib"              ,...
            "frankaEmikaPanda"        ,...
            "kinovaGen3"              , ...
            "kinovaJacoJ2N6S200"      , ...
            "kinovaJacoJ2N6S300"      , ...
            "kinovaJacoJ2N7S300"      , ...
            "kinovaJacoJ2S6S300"      , ...
            "kinovaJacoJ2S7S300"      , ...
            "kinovaJacoTwoArmExample" , ...
            "kinovaMicoM1N4S200"      , ...
            "kinovaMicoM1N6S200"      , ...
            "kinovaMicoM1N6S300"      ,...
            "kukaIiwa7"               ,...
            "kukaIiwa14"              ,...
            "quanserQArm"             ,...
            "rethinkBaxter"           ,...
            "rethinkSawyer"           ,...
            "robotisOP2"              ,...
            "robotisOpenManipulator"  ,...
            "universalUR10"           ,...
            "universalUR10e"          ,...
            "universalUR16e"          ,...
            "universalUR3"            ,...
            "universalUR3e"           ,...
            "universalUR5"            ,...
            "universalUR5e"           ,...
            "valkyrie"                ,...
            "yaskawaMotomanMH5"];

        MobileManipulatorRobots = [...
            "kinovaMovo"                               ,...
            "willowgaragePR2"];

        MobileRobots = [ ...
            "amrPioneerLX"                              ,...
            "amrPioneer3AT"                             ,...
            "amrPioneer3DX"                             ,...
            "clearpathHusky"                            ,...
            "clearpathJackal"                           ,...
            "clearpathTurtleBot2"                              ,...
            "robotisTurtleBot3Burger"                          ,...
            "robotisTurtleBot3Waffle"                          ,...
            "robotisTurtleBot3WaffleForOpenManipulator"        ,...
            "robotisTurtleBot3WafflePi"                        ,...
            "robotisTurtleBot3WafflePiForOpenManipulator"      ,...
            "quanserQBot2e"                             ,...
            "quanserQCar"];

        RobotChars = convertStringsToChars(robotics.manip.internal.RobotList.allRobots);
        
        % List of robots that support multiple versions and the corresponding
        % mat file   
        % RobotVersions is a 1xN struct array that stores information of only
        % those robots that support multiple versions.
        % Each struct in RobotVersions contains name of robot in 'Name' field, number of
        % versions supported in 'NumVersions' field and names of the MAT files for each
        % version in order as a cell array of character vectors in 'VersionMATFiles' field.
        RobotVersions = [struct("Name", "kinovaGen3", "NumVersions", 2, 'VersionMATFiles', {{'kinovaGen3', 'kinovaGen3V12'}})];
    end

    properties(Constant)
        % Store User-facing robot names
        ManipulatorRobotNames = [ ...
            "ABB IRB 120"               ,...
            "ABB IRB 120T"              ,...
            "ABB IRB 1600"              ,...
            "ABB YuMi"                  ,...
            "Boston Dynamics Atlas"     ,...
            "FANUC LR Mate 200ib"       ,...
            "FANUC M-16ib"              ,...
            "Franka Emika Panda"        ,...
            "Kinova Gen3"               , ...
            "Kinova Jaco J2N6S200"      , ...
            "Kinova Jaco J2N6S300"      , ...
            "Kinova Jaco J2N7S300"      , ...
            "Kinova Jaco J2S6S300"      , ...
            "Kinova Jaco J2S7S300"      , ...
            "Kinova Jaco Two-Arm Example"   , ...
            "Kinova Mico M1N4S200"      , ...
            "Kinova Mico M1N6S200"      , ...
            "Kinova Mico M1N6S300"      ,...
            "KUKA LBR iiwa 7"           ,...
            "KUKA LBR iiwa 14"          ,...
            "Quanser QArm"              ,...
            "Rethink Robotics Baxter"   ,...
            "Rethink Robotics Sawyer"   ,...
            "ROBOTIS OP2"               ,...
            "robotis OpenManipulator"   ,...
            "Universal UR10"            ,...
            "Universal UR10e"           ,...
            "Universal UR16e"           ,...
            "Universal UR3"             ,...
            "Universal UR3e"            ,...
            "Universal UR5"             ,...
            "Universal UR5e"            ,...
            "NASA Valkyrie"             ,...
            "Yaskawa Motoman MH5"];

        MobileManipulatorRobotNames = [...
            "Kinova MOVO", ...
            "Willow Garage PR2"];

        MobileRobotNames = [ ...
            "AMR Pioneer LX"                              ,...
            "AMR Pioneer 3AT"                             ,...
            "AMR Pioneer 3DX"                             ,...
            "Clearpath Robotics Husky"                    ,...
            "Clearpath Robotics Jackal"                   ,...
            "Clearpath Robotics Turtlebot 2"              ,...
            "ROBOTIS TurtleBot 3 Burger"                  ,...
            "ROBOTIS TurtleBot 3 Waffle"                  ,...
            "ROBOTIS TurtleBot 3 Waffle For OpenManipulator"    ,...
            "ROBOTIS TurtleBot 3 Waffle Pi"                     ,...
            "ROBOTIS TurtleBot 3 Waffle Pi For OpenManipulator" ,...
            "Quanser QBot2e"                                    ,...
            "Quanser QCar"];
    end

    properties(Constant)

        % folders owned by 3p components under
        % toolbox\robotics\robotmanip\data and the URDF files under each
        % folder
        RawDescriptionFolders = [ ...
            struct("Folder", "Atlas", "DescFiles",  {{'atlas.urdf'}})...
            struct("Folder", "abb_irb120_support", "DescFiles",  {{'abbIrb120.urdf', 'abbIrb120T.urdf'}})...
            struct("Folder", "abb_irb1600_support", "DescFiles",  {{'abbIrb1600.urdf'}})...
            struct("Folder", "amr_robots_description", "DescFiles",  {{'amrPioneer3AT.urdf', 'amrPioneer3DX.urdf', 'amrPioneerLX.urdf'}})...
            struct("Folder", "baxter_description", "DescFiles",  {{'rethinkBaxter.urdf'}})...
            struct("Folder", "fanuc_lrmate200ib_support", "DescFiles",  {{'fanucLRMate200ib.urdf'}})...
            struct("Folder", "fanuc_m16ib_support", "DescFiles",  {{'fanucM16ib.urdf'}})...
            struct("Folder", "franka_description", "DescFiles",  {{'frankaEmikaPanda.urdf'}})...
            struct("Folder", "husky_description", "DescFiles",  {{'clearpathHusky.urdf'}})...
            struct("Folder", "iiwa_description", "DescFiles",  {{'kukaIiwa7.urdf', 'kukaIiwa14.urdf'}})...
            struct("Folder", "jackal_description", "DescFiles",  {{'clearpathJackal.urdf'}})...
            struct("Folder", "kinova_description", "DescFiles",  {{'kinovaJacoJ2N6S200.urdf', 'kinovaJacoJ2N6S300.urdf', 'kinovaJacoJ2N7S300.urdf', 'kinovaJacoJ2S6S300.urdf', 'kinovaJacoJ2S7S300.urdf', 'kinovaJacoTwoArmExample.urdf', 'kinovaMicoM1N4S200.urdf', 'kinovaMicoM1N6S200.urdf', 'kinovaMicoM1N6S300.urdf'}})...
            struct("Folder", "kortex_description", "DescFiles",  {{'kinovaGen3.urdf'}})...
            struct("Folder", "kortex_v12_description", "DescFiles",  {{'kinovaGen3V12.urdf'}})...
            struct("Folder", "motoman_mh5_support", "DescFiles",  {{'yaskawaMotomanMH5.urdf'}})...
            struct("Folder", "movo_description", "DescFiles",  {{'kinovaMovo.urdf'}})...
            struct("Folder", "open_manipulator_description", "DescFiles",  {{'robotisOpenManipulator.urdf'}})...
            struct("Folder", "pr2_description", "DescFiles",  {{'willowgaragePR2.urdf'}})...
            struct("Folder", "qarm_description", "DescFiles",  {{'quanserQArm.urdf'}})...
            struct("Folder", "quanser_description", "DescFiles",  {{'quanserQBot2e.urdf', 'quanserQCar.urdf'}})...
            struct("Folder", "robotis_op_description", "DescFiles",  {{'robotisOP2.urdf'}})...
            struct("Folder", "sawyer_description", "DescFiles",  {{'rethinkSawyer.urdf'}})...
            struct("Folder", "turtlebot3_description", "DescFiles",  {{'robotisTurtleBot3Burger.urdf', 'robotisTurtleBot3Waffle.urdf', 'robotisTurtleBot3WaffleForOpenManipulator.urdf', 'robotisTurtleBot3WafflePi.urdf', 'robotisTurtleBot3WafflePiForOpenManipulator.urdf'}})...
            struct("Folder", "turtlebot_description", "DescFiles",  {{'clearpathTurtleBot2.urdf'}})...
            struct("Folder", "ur_description", "DescFiles",  {{'universalUR3.urdf', 'universalUR5.urdf', 'universalUR10.urdf'}})...
            struct("Folder", "ur_e_description", "DescFiles",  {{'universalUR3e.urdf', 'universalUR5e.urdf', 'universalUR10e.urdf', 'universalUR16e.urdf'}})...
            struct("Folder", fullfile("valkyrie", "urdf"), "DescFiles",  {{'valkyrie.urdf'}})... %The folder structure in the source repo doesn't work with importrobot out-of-the-box. This folder definition is to accommodate for the restructuring.
            struct("Folder", "yumi_description", "DescFiles",  {{'abbYuMi.urdf'}})];

    end

    methods (Static)
        function names = allRobots()
        %allRobots
            names = [robotics.manip.internal.RobotList.ManipulatorRobots,...
                     robotics.manip.internal.RobotList.MobileManipulatorRobots,...
                     robotics.manip.internal.RobotList.MobileRobots];
        end
        
        function [numVersions, robotMATFileName] = getNumVersionsAndMATFileName(name, version)
        %getRobotVersionsAndMATFileName Get number of versions and mat file name of input version
                   
            % Validate version input
            validateattributes(version,{'numeric'}, {'integer', 'scalar',...
                'finite','nonempty', 'positive', 'nonzero'}, '', 'Version')
            
            % Check if the robot supports multiple versions by finding it in
            % the RobotVersions struct array.
            allRobotNames = [robotics.manip.internal.RobotList.RobotVersions.Name];
            robotIdx = find(strcmp(name, allRobotNames));
            
            % If robot supports multiple versions
            if robotIdx > 0
                % Get the robot version data from the struct array
                robotVersionData = robotics.manip.internal.RobotList.RobotVersions(robotIdx);
                
                % Get number of versions supported
                numVersions = robotVersionData.NumVersions;
                
                % Validate version input
                validateattributes(version,{'numeric'}, {"scalar", "<=", numVersions}, '', 'Version')

                % Fetch the MAT file name for the input version number.
                robotMATFileName = robotVersionData.VersionMATFiles{version};
            else
                % If robot name is not in RobotVersions, then numVersions is 1
                % by default
                numVersions = 1;
                robotMATFileName = name;
                
                % Validate version input
                validateattributes(version,{'numeric'}, {"scalar", "<=", 1}, '', 'Version')
            end
        end
        
        function versions = getRobotVersions(name)
        %getRobotVersions Get double vector of supported versions for the input robot
            
            % Check if the robot supports multiple versions by finding it in
            % the RobotVersions struct array.
            allRobotNames = [robotics.manip.internal.RobotList.RobotVersions.Name];
            robotIdx = find(strcmp(name, allRobotNames));
            
            % If robot name is not in RobotVersions, then numVersions is 1
            % by default
            versions = 1;
            
            % If robot supports multiple versions
            if robotIdx > 0
                % Get the robot version data from the struct array
                robotVersionData = robotics.manip.internal.RobotList.RobotVersions(robotIdx);
                
                % Get number of versions supported
                numVersions = robotVersionData.NumVersions;
                
                versions = 1:numVersions;
            end
        end
    end
end

% LocalWords:  robotfunc
